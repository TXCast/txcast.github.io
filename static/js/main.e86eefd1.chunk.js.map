{"version":3,"sources":["img/SVG/logo.svg","Utils.js","withCollapse.js","TXQueueContainer.js","SchedulerContainer.js","TXCContainer.js","NoticesContainer.js","DepositContainer.js","BalanceContainer.js","SendRawContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","DropdownAppend","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","toggle","filter","v","setState","objectSpread","prevState","_this2","react_default","a","createElement","className","onClick","toggleList","type","data-toggle","onChange","e","setFilter","target","value","placeholder","id","symbols","w","toUpperCase","search","map","key","href","Component","CollapseButton","onCollapse","collapsed","Footer","PatternBg","height","width","x","y","patternUnits","points","stroke","strokeWidth","fill","TXCStatus","classColor","active","text","icon","data-tip","class","withCollapse","WrappedComponent","_React$Component","CollapseCard","bind","assertThisInitialized","inherits","createClass","assign","React","TXQueue","Utils_CollapseButton","style","scope","posts","TXQueueContainer_TXReady","account","onCancel","sendTX","requests","_Object$assign","TXQueueContainer_TXPost","blockFormat","defineProperty","TXReady","address","JSON","parse","callDataTX","TXQueueContainer_CancelButton","amount","currency","TXPost","lib","blocks","timestamp","CancelButton","sig","dataArray","fetchData","data","values","queue","sigs","keys","zipped","forEach","i","Date","now","blockNumber","toISOString","split","console","log","pre","ready","TXQueueContainer_TXQueue","Scheduler","SchedulerContainer_ScheduleInput","onInputChange","onSign","inputData","ScheduleInput","Utils_DropdownAppend","reward","SchedulerContainer","SchedulerContainer_Scheduler","preventDefault","newState","test","TXC","onBuy","TXCContainer_TXC","Notice","NoticesContainer_Notice","Deposit","DepositContainer_DepositInput","DepositInput","disabled","onDeposit","DepositContainer","selfDepositToggle","DepositContainer_Deposit","toggleSelfDeposit","Balance","BalanceContainer_BalanceInput","BalanceInput","onBalance","balance","BalanceContainer","BalanceContainer_Balance","SendRaw","SendRawContainer_SendRawInput","SendRawInput","stringify","onSendRaw","SendRawContainer","SendRawContainer_SendRaw","addresses","_addresses","eths","eths_old","txcsale","txc","urls","dev","prod","abiTypes","withoutSignature","withSignature","App","addressList","netID","hasTXC","server","updateBlock","web3","Web3","givenProvider","window","ethereum","enable","eth","getAccounts","net","getId","callData","to","abi","encodeParameters","substr","then","b","s","parseInt","setInterval","_this3","req","url","method","axios","ans","reduce","acc","getBlock","latestBlock","number","schedulerInput","utils","toWei","toString","Math","floor","random","Number","MAX_SAFE_INTEGER","hash","_this4","hexToAscii","signer","personal","sign","signature","concat","txrequest","fromWei","appended","formData","FormData","k","set","catch","from","nonce","_this5","receipt","verified","cancelOrder","error","depositInput","balanceInput","_this6","toBN","rawInput","callDataTXFrom","sendTransaction","Utils_PatternBg","dist_default","letterSpacing","src","logo","alt","Utils_TXCStatus","minWidth","src_TXQueueContainer","src_SendRawContainer","src_SchedulerContainer","src_DepositContainer","src_TXCContainer","src_BalanceContainer","src_NoticesContainer","Utils_Footer","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,2YCElCC,cACJ,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAChBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAQ,CAACC,QAAQ,EAAOC,OAAQ,IAHrBT,yEAMRU,GACRP,KAAKQ,SAALV,OAAAW,EAAA,EAAAX,CAAA,GAAkBE,KAAKI,MAAvB,CAA8BE,OAAQC,0CAItCP,KAAKQ,SAAS,SAAAE,GAAS,MAAK,CAC1BL,QAAUK,EAAUL,2CAIf,IAAAM,EAAAX,KACP,OACEY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,UACEC,UAAW,kCACXC,QAAS,kBAAML,EAAKM,cACpBC,KAAK,SACLC,cAAY,YAJd,OAQAP,EAAAC,EAAAC,cAAA,OAAKC,UAAW,sCAAwCf,KAAKI,MAAMC,OAAS,OAAS,KACnFO,EAAAC,EAAAC,cAAA,SACEC,UAAU,wBACVK,SAAU,SAACC,GAAD,OAAOV,EAAKW,UAAUD,EAAEE,OAAOC,QACzCN,KAAK,OACLO,YAAY,SACZC,GAAG,WAEJ1B,KAAKJ,MAAM+B,QACPrB,OAAO,SAAAsB,GAAC,OACPA,EAAEC,cAAcC,OAAOnB,EAAKP,MAAME,OAAOuB,gBAAkB,IAE5DE,IAAI,SAAAxB,GAAC,OACJK,EAAAC,EAAAC,cAAA,KAAGkB,IAAKzB,EAAGQ,UAAU,gBAAgBkB,KAAK,KAAK1B,cAzClC2B,aAiDvBC,EAAiB,SAACvC,GAAD,OACrBgB,EAAAC,EAAAC,cAAA,KAAGE,QAAS,kBAAMpB,EAAMwC,eACtBxB,EAAAC,EAAAC,cAAA,KAAGC,UAAW,uBAAyBnB,EAAMyC,UAAY,OAAS,SAAW,cAI3EC,EAAS,kBACb1B,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAcH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAC1CH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,8BACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBACZH,EAAAC,EAAAC,cAAA,KAAGmB,KAAK,KACNrB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAGjBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBACZH,EAAAC,EAAAC,cAAA,KAAGmB,KAAK,KACNrB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAGjBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBACZH,EAAAC,EAAAC,cAAA,KAAGmB,KAAK,KACNrB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAKrBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,6BAAhB,oBAOJwB,EAAY,kBAChB3B,EAAAC,EAAAC,cAAA,OAAK0B,OAAO,OAAOC,MAAM,QACvB7B,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,WAASY,GAAG,eAAegB,EAAE,IAAIC,EAAE,IAAIF,MAAM,KAAKD,OAAO,KAAKI,aAAa,kBACzEhC,EAAAC,EAAAC,cAAA,WAAS+B,OAAO,qBAChBjC,EAAAC,EAAAC,cAAA,WAAS+B,OAAO,mBAChBjC,EAAAC,EAAAC,cAAA,WAAS+B,OAAO,qBAEhBjC,EAAAC,EAAAC,cAAA,WAAS+B,OAAO,sBAChBjC,EAAAC,EAAAC,cAAA,WAAS+B,OAAO,qBAChBjC,EAAAC,EAAAC,cAAA,WAAS+B,OAAO,wBAIpBjC,EAAAC,EAAAC,cAAA,QAAM4B,EAAE,IAAIC,EAAE,IAAIF,MAAM,OAAOD,OAAO,OACpCM,OAAQ,UAAUC,YAAY,IAAIC,KAAK,yBAIvCC,EAAY,SAACrD,GACjB,IAAMsD,EAAatD,EAAMuD,OAAS,eAAiB,cAC7CC,EAAOxD,EAAMuD,OAAS,UAAY,YAClCE,EAAOzD,EAAMuD,OAAS,QAAU,QACtC,OACEvC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uBAAhB,WAEEH,EAAAC,EAAAC,cAAA,QAAMC,UAAWmC,GACdE,GAEHxC,EAAAC,EAAAC,cAAA,KAAGwC,WAAS,iFAAiFC,MAAO,eAAiBF,EAAO,WAAaH,8FCzFhIM,EA3BM,SAACC,GACpB,gBAAAC,GACE,SAAAC,EAAY/D,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2D,IACjB9D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6D,GAAAxD,KAAAH,KAAMJ,KACDQ,MAAQ,CAACiC,WAAW,GAEzBxC,EAAKuC,WAAavC,EAAKuC,WAAWwB,KAAhB9D,OAAA+D,EAAA,EAAA/D,QAAA+D,EAAA,EAAA/D,CAAAD,KAJDA,EADrB,OAAAC,OAAAgE,EAAA,EAAAhE,CAAA6D,EAAAD,GAAA5D,OAAAiE,EAAA,EAAAjE,CAAA6D,EAAA,EAAA3B,IAAA,aAAAR,MAAA,WASIxB,KAAKQ,SAALV,OAAAW,EAAA,EAAAX,CAAA,GAAkBE,KAAKI,MAAvB,CAA8BiC,WAAYrC,KAAKI,MAAMiC,eATzD,CAAAL,IAAA,SAAAR,MAAA,WAaI,OACEZ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2C,EAAD3D,OAAAkE,OAAA,GACMhE,KAAKJ,MADX,CAEEyC,UAAWrC,KAAKI,MAAMiC,UACtBD,WAAYpC,KAAKoC,mBAlB3BuB,EAAA,CAAkCM,IAAM/B,YCEpCgC,EAAU,SAAAtE,GAAK,OACnBgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mCAAd,WAEEH,EAAAC,EAAAC,cAACqD,EAAD,CACE/B,WAAYxC,EAAMwC,WAClBC,UAAWzC,EAAMyC,cAIvBzB,EAAAC,EAAAC,cAAA,OAAKC,UAAW,aAAenB,EAAMyC,UAAY,iBAAmB,KAClEzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qBACfH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,YACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAoBqD,MAAO,CAAC5B,OAAS,SACjD5B,EAAAC,EAAAC,cAAA,MAAIuD,MAAM,MAAMtD,UAAU,SAA1B,aACAH,EAAAC,EAAAC,cAAA,MAAIuD,MAAM,MAAMtD,UAAU,qBAA1B,kBACAH,EAAAC,EAAAC,cAAA,MAAIuD,MAAM,MAAMtD,UAAU,qBAA1B,YAGJH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,6BAEbnB,EAAM0E,MAAMvC,IAAI,SAAArC,GAAC,OACfkB,EAAAC,EAAAC,cAACyD,EAADzE,OAAAkE,OAAA,GACMtE,EADN,CAEE8E,QAAS5E,EAAM4E,QACfC,SAAU7E,EAAM6E,SAChBC,OAAQ9E,EAAM8E,YAPtB,IAWI9E,EAAM+E,SAAS5C,IAAI,SAAArC,GAAC,IAAAkF,EAAA,OAClBhE,EAAAC,EAAAC,cAAC+D,EAAD/E,OAAAkE,OAAA,GACMtE,GADNkF,EAAA,CAEEJ,QAAS5E,EAAM4E,QACfM,YAAalF,EAAMkF,aAHrBhF,OAAAiF,EAAA,EAAAjF,CAAA8E,EAAA,UAIWhF,EAAM4E,SAJjB1E,OAAAiF,EAAA,EAAAjF,CAAA8E,EAAA,WAKYhF,EAAM6E,UALlBG,aAgBVI,EAAU,SAAApF,GAAK,OACnBgB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2CACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACZH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAYnB,EAAMqF,SAClCrE,EAAAC,EAAAC,cAAA,UACEC,UAAU,gDACVC,QAAS,kBAAMpB,EAAM8E,OAAOQ,KAAKC,MAAMvF,EAAMwF,eAE7CxE,EAAAC,EAAAC,cAAA,KAAGyC,MAAM,uBAJX,kBAOF3C,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBAAd,SACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBACVnB,EAAM4E,UAAY5E,EAAMqF,QAAWrE,EAAAC,EAAAC,cAACuE,EAAiBzF,GAAWA,EAAM0F,OAAS,IAAM1F,EAAM2F,YAK7FC,EAAS,SAAA5F,GAAK,OAClBgB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,+CACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACZH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAYnB,EAAMqF,SAClCrE,EAAAC,EAAAC,cAAC2E,EAAA,gBAAD,CAAiBrC,KAAOxD,EAAMwF,YAC5BxE,EAAAC,EAAAC,cAAA,UACEC,UAAU,+CACVC,QAAS,SAACK,GAAD,OAAQ,IAElBT,EAAAC,EAAAC,cAAA,KAAGyC,MAAM,qBAJV,qBAQJ3C,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBAAqBnB,EAAMkF,YAAclF,EAAM8F,OAAS9F,EAAM+F,WAC5E/E,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBACVnB,EAAM4E,UAAY5E,EAAMqF,QAAWrE,EAAAC,EAAAC,cAACuE,EAAiBzF,GAAWA,EAAM0F,OAAS,IAAM1F,EAAM2F,YAK7FK,EAAe,SAAChG,GAAD,OACnBgB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAYnB,EAAM0F,OAAlC,IAA2C1F,EAAM2F,UACjD3E,EAAAC,EAAAC,cAAA,UACEC,UAAU,+CACVC,QAAS,kBAAMpB,EAAM6E,SAAS7E,EAAMiG,IAAKX,KAAKC,MAAMvF,EAAMkG,WAAW,MAErElF,EAAAC,EAAAC,cAAA,KAAGyC,MAAM,eAJX,gBAwCWC,gMA7BXxD,KAAKJ,MAAMmG,6CAGJ,IAAAlG,EAAAG,KACDgG,EAAYlG,OAAOmG,OAAOjG,KAAKJ,MAAMsG,OACrCC,EAAYrG,OAAOsG,KAAKpG,KAAKJ,MAAMsG,OACnCG,EAAYL,EAAKM,QAAQ,SAAC5G,EAAE6G,GAAH,OAAS7G,EAAEmG,IAAMM,EAAKI,MAAOP,EACtD1B,EAAYtE,KAAKJ,MAAMkF,YAC3BuB,EAASA,EAAOC,QAAQ,SAAA5G,GACtBA,EAAEiG,UAAY,IAAIa,KAAKA,KAAKC,MAAQ,IAAI/G,EAAEgG,OAAS7F,EAAKD,MAAM8G,cAAcC,cAAcC,MAAM,KAAK,MACjGtC,EAERuC,QAAQC,IAAI,MAAOxC,GAEnB,IAAMyC,EAAQzC,EAAMhE,OAAO,SAAAZ,GAAC,OAAIA,EAAEgG,OAAS7F,EAAKD,MAAM8G,cAChDM,EAAQ1C,EAAMhE,OAAO,SAAAZ,GAAC,OAAIA,EAAEgG,QAAU7F,EAAKD,MAAM8G,cAEvD,OACE9F,EAAAC,EAAAC,cAACmG,EAADnH,OAAAkE,OAAA,GACMhE,KAAKJ,MADX,CAEE0E,MAAOyC,EACPpC,SAAUqC,EACVvC,SAAUzE,KAAKJ,MAAM6E,SACrBC,OAAQ1E,KAAKJ,MAAM8E,iBAzBIxC,cCpGzBgF,EAAY,SAAAtH,GAAK,OACrBgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAd,oBAEEH,EAAAC,EAAAC,cAACqD,EAAD,CACE/B,WAAYxC,EAAMwC,WAClBC,UAAWzC,EAAMyC,cAIvBzB,EAAAC,EAAAC,cAAA,OAAKC,UAAW,aAAenB,EAAMyC,UAAY,iBAAmB,KAClEzB,EAAAC,EAAAC,cAACqG,EAAD,CACEC,cAAexH,EAAMwH,cACrBC,OAAQzH,EAAMyH,OACdC,UAAW1H,EAAM0H,UACjB3F,QAAS/B,EAAM+B,aAMjB4F,EAAgB,SAAA3H,GAAK,OACzBgB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,iCACEF,EAAAC,EAAAC,cAAA,SACEM,SAAU,SAACC,GAAD,OAAOzB,EAAMwH,cAANtH,OAAAW,EAAA,EAAAX,CAAA,GAAwBF,EAAM0H,UAA9B,CAAyCrC,QAAS5D,EAAEE,OAAOC,UAC5ET,UAAU,8BACVW,GAAG,kBACHF,MAAO5B,EAAM0H,UAAUrC,UAE3BrE,EAAAC,EAAAC,cAAA,SAAOY,GAAG,SAASX,UAAU,uBAA7B,sDAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SACEM,SAAU,SAACC,GAAD,OAAOzB,EAAMwH,cAANtH,OAAAW,EAAA,EAAAX,CAAA,GAAwBF,EAAM0H,UAA9B,CAAyChC,OAAQjE,EAAEE,OAAOC,UAC3ET,UAAU,8BACVW,GAAG,SACHF,MAAO5B,EAAM0H,UAAUhC,SAEzB1E,EAAAC,EAAAC,cAAC0G,EAAD,CAAgB7F,QAAS/B,EAAM+B,WAEjCf,EAAAC,EAAAC,cAAA,SAAOY,GAAG,QAAQX,UAAU,uBAA5B,4CAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,KAAGwC,WAAS,8DAA8DvC,UAAU,4BACpFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SACEM,SAAU,SAACC,GAAD,OAAOzB,EAAMwH,cAANtH,OAAAW,EAAA,EAAAX,CAAA,GAAwBF,EAAM0H,UAA9B,CAAyCG,OAAQpG,EAAEE,OAAOC,UAC3ET,UAAU,8BACVW,GAAG,SACHF,MAAO5B,EAAM0H,UAAUG,SAEzB7G,EAAAC,EAAAC,cAAC0G,EAAD,CAAgB7F,QAAS/B,EAAM+B,WAEjCf,EAAAC,EAAAC,cAAA,SAAOY,GAAG,SAASX,UAAU,uBAA7B,8DAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,KAAGwC,WAAS,qFAAqFvC,UAAU,4BAC3GH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SACEM,SAAU,SAACC,GAAD,OAAOzB,EAAMwH,cAANtH,OAAAW,EAAA,EAAAX,CAAA,GAAwBF,EAAM0H,UAA9B,CAAyC5B,OAAQrE,EAAEE,OAAOC,UAC3ET,UAAU,8BACVW,GAAG,SACHF,MAAO5B,EAAM0H,UAAU5B,SAEzB9E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAAlB,YAGJH,EAAAC,EAAAC,cAAA,SAAOY,GAAG,QAAQX,UAAU,uBAA5B,0DAGFH,EAAAC,EAAAC,cAAA,UACEE,QAAS,SAACK,GAAD,OAAOzB,EAAMyH,OAAOhG,IAC7BN,UAAU,oCAFZ,uBAyCWyC,gBA/Bb,SAAAkE,EAAY9H,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0H,IAChB7H,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4H,GAAAvH,KAAAH,KAAMJ,KACDQ,MAAQ,CAAC6E,QAAS,6CAA8CK,OAAQ,EAAGmC,OAAQ,EAAG/B,OAAQ,GAFnF7F,wEAMhB,OACEe,EAAAC,EAAAC,cAAC6G,EAAD7H,OAAAkE,OAAA,GACMhE,KAAKJ,MADX,CAEEwH,cAAepH,KAAKoH,cAAcxD,KAAK5D,MACvCqH,OAAQrH,KAAKqH,OAAOzD,KAAK5D,MACzBsH,UAAWtH,KAAKI,MAChBuB,QAAS,CAAC,MAAM,MAAM,MAAM,yCAK3BN,GACLA,EAAEuG,iBACF5H,KAAKJ,MAAMyH,OAAOrH,KAAKI,6CAGXyH,GACR,2BAA2BC,KAAKD,EAASnC,SACvC,gCAAgCoC,KAAKD,EAASJ,SAC9C,gCAAgCK,KAAKD,EAASvC,SAC9C,oBAAoBwC,KAAKD,EAAS5C,UACpCjF,KAAKQ,SAASqH,UA5BW3F,cCvF3B6F,EAAM,SAAAnI,GAAK,OACfgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAd,UAEEH,EAAAC,EAAAC,cAACqD,EAAD,CACE/B,WAAYxC,EAAMwC,WAClBC,UAAWzC,EAAMyC,cAIvBzB,EAAAC,EAAAC,cAAA,OAAKC,UAAW,aAAenB,EAAMyC,UAAY,iBAAmB,KAClEzB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,+NACAH,EAAAC,EAAAC,cAAA,uXACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UACEI,KAAK,SACLF,QAAS,kBAAMpB,EAAMoI,SACrBjH,UAAU,oCAHZ,eAsBOyC,qLARX,OACE5C,EAAAC,EAAAC,cAACmH,EACKjI,KAAKJ,cAJUsC,cC3BrBgG,EAAS,SAAAtI,GAAK,OAClBgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAd,UAEEH,EAAAC,EAAAC,cAACqD,EAAD,CACE/B,WAAYxC,EAAMwC,WAClBC,UAAWzC,EAAMyC,cAIvBzB,EAAAC,EAAAC,cAAA,OAAKC,UAAW,aAAenB,EAAMyC,UAAY,iBAAmB,KAClEzB,EAAAC,EAAAC,cAAA,6GAaS0C,qLANX,OACE5C,EAAAC,EAAAC,cAACqH,EAAWnI,KAAKJ,cAHQsC,cChBzBkG,UAAU,SAAAxI,GAAK,OACnBgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAd,2BAEEH,EAAAC,EAAAC,cAACqD,EAAD,CACE/B,WAAYxC,EAAMwC,WAClBC,UAAWzC,EAAMyC,cAIvBzB,EAAAC,EAAAC,cAAA,OAAKC,UAAW,aAAenB,EAAMyC,UAAY,iBAAmB,KAClEzB,EAAAC,EAAAC,cAACuH,EACKzI,OAMN0I,EAAe,SAAA1I,GAAK,OACxBgB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,KAAGwC,WAAS,yDAAyDvC,UAAU,4BAE/EH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SACEyH,UAAQ,EACRxH,UAAU,yCACVW,GAAG,qBACHF,MAAO5B,EAAMqF,WAGjBrE,EAAAC,EAAAC,cAAA,SAAOY,GAAG,SAASX,UAAU,uBAA7B,gDAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SACEM,SAAU,SAACC,GAAD,OAAOzB,EAAMwH,cAANtH,OAAAW,EAAA,EAAAX,CAAA,GAAwBF,EAAM0H,UAA9B,CAAyChC,OAAQjE,EAAEE,OAAOC,UAC3ET,UAAU,8BACVW,GAAG,gBACHF,MAAO5B,EAAM0H,UAAUhC,SAEzB1E,EAAAC,EAAAC,cAAC0G,EAAD,CAAgB7F,QAAS/B,EAAM+B,WAEjCf,EAAAC,EAAAC,cAAA,SAAOY,GAAG,QAAQX,UAAU,uBAA5B,0CAGFH,EAAAC,EAAAC,cAAA,UACEE,QAAS,SAACK,GAAD,OAAOzB,EAAM4I,UAAUnH,IAChCN,UAAU,oCAFZ,aAuDWyC,gBAjCb,SAAAiF,EAAY7I,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyI,IAChB5I,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2I,GAAAtI,KAAAH,KAAMJ,KACDQ,MAAQ,CAACkF,OAAQ,EAAGoD,mBAAmB,GAF5B7I,wEAMhB,OACEe,EAAAC,EAAAC,cAAC6H,EAAD7I,OAAAkE,OAAA,GACMhE,KAAKJ,MADX,CAEEwH,cAAepH,KAAKoH,cAAcxD,KAAK5D,MACvCwI,UAAWxI,KAAKwI,UAAU5E,KAAK5D,MAC/B4I,kBAAmB5I,KAAK4I,kBAAkBhF,KAAK5D,MAC/CsH,UAAWtH,KAAKI,MAChBuB,QAAS,CAAC,MAAM,MAAM,MAAM,4CAKxBN,GACRA,EAAEuG,iBACF5H,KAAKJ,MAAM4I,UAAUxI,KAAKI,mDAI1BJ,KAAKQ,SAALV,OAAAW,EAAA,EAAAX,CAAA,GAAkBE,KAAKI,MAAvB,CAA8BsI,mBAAoB1I,KAAKI,MAAMsI,2DAGjDb,GACT,gCAAgCC,KAAKD,EAASvC,SAC/CtF,KAAKQ,SAASqH,UA9BW3F,cCvEzB2G,EAAU,SAAAjJ,GAAK,OACnBgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAd,WAEEH,EAAAC,EAAAC,cAACqD,EAAD,CACE/B,WAAYxC,EAAMwC,WAClBC,UAAWzC,EAAMyC,cAIvBzB,EAAAC,EAAAC,cAAA,OAAKC,UAAW,aAAenB,EAAMyC,UAAY,iBAAmB,KAClEzB,EAAAC,EAAAC,cAACgI,EACKlJ,MAMNmJ,EAAe,SAAAnJ,GAAK,OACxBgB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SACEM,SAAU,SAACC,GAAD,OAAOzB,EAAMwH,cAANtH,OAAAW,EAAA,EAAAX,CAAA,GAAwBF,EAAM0H,UAA9B,CAAyCrC,QAAS5D,EAAEE,OAAOC,UAC5ET,UAAU,8BACVW,GAAG,UACHF,MAAO5B,EAAM0H,UAAUrC,UAEzBrE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,UACEE,QAAS,SAACK,GAAD,OAAOzB,EAAMoJ,UAAU3H,IAChCN,UAAU,mBAFZ,UAOFH,EAAAC,EAAAC,cAAA,SAAOY,GAAG,SAASX,UAAU,0BAGjCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,kBAASF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAenB,EAAMqJ,aAkCrCzF,gBA5Bb,SAAA0F,EAAYtJ,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkJ,IAChBrJ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoJ,GAAA/I,KAAAH,KAAMJ,KACDQ,MAAQ,CAAC6E,QAAS,6CAA8CK,OAAQ,GAF7DzF,wEAMhB,OACEe,EAAAC,EAAAC,cAACqI,EAADrJ,OAAAkE,OAAA,GACMhE,KAAKJ,MADX,CAEEwH,cAAepH,KAAKoH,cAAcxD,KAAK5D,MACvCgJ,UAAWhJ,KAAKgJ,UAAUpF,KAAK5D,MAC/BsH,UAAWtH,KAAKI,MAChBuB,QAAS,CAAC,MAAM,MAAM,MAAM,4CAKxBN,GACRA,EAAEuG,iBACF5H,KAAKJ,MAAMoJ,UAAUhJ,KAAKI,6CAGdyH,GACT,oBAAoBC,KAAKD,EAAS5C,UACnCjF,KAAKQ,SAASqH,UAzBW3F,cC/CzBkH,EAAU,SAAAxJ,GAAK,OACnBgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAd,eAEEH,EAAAC,EAAAC,cAACqD,EAAD,CACE/B,WAAYxC,EAAMwC,WAClBC,UAAWzC,EAAMyC,cAIvBzB,EAAAC,EAAAC,cAAA,OAAKC,UAAW,aAAenB,EAAMyC,UAAY,iBAAmB,KAClEzB,EAAAC,EAAAC,cAACuI,EACKzJ,MAMN0J,EAAe,SAAA1J,GAAK,OACxBgB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,KAAGwC,WAAS,uEAAuEvC,UAAU,4BAC7FH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SACEM,SAAU,SAACC,GAAD,OAAOzB,EAAMwH,cAAc,CAAChC,WAAYF,KAAKC,MAAM9D,EAAEE,OAAOC,UACtET,UAAU,8BACVW,GAAG,UACHF,MAAO0D,KAAKqE,UAAU3J,EAAM0H,UAAUlC,cAExCxE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,UACEE,QAAS,SAACK,GAAD,OAAOzB,EAAM4J,UAAUnI,IAChCN,UAAU,mBAFZ,iBAOFH,EAAAC,EAAAC,cAAA,SAAOY,GAAG,SAASX,UAAU,4BAkCtByC,iBA3Bb,SAAAiG,EAAY7J,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyJ,IAChB5J,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2J,GAAAtJ,KAAAH,KAAMJ,KACDQ,MAAQ,CAACgF,WAAY,IAFVvF,wEAMhB,OACEe,EAAAC,EAAAC,cAAC4I,EAAD5J,OAAAkE,OAAA,GACMhE,KAAKJ,MADX,CAEEwH,cAAepH,KAAKoH,cAAcxD,KAAK5D,MACvCwJ,UAAWxJ,KAAKwJ,UAAU5F,KAAK5D,MAC/BsH,UAAWtH,KAAKI,MAChBuB,QAAS,CAAC,MAAM,MAAM,MAAM,4CAKxBN,GACRA,EAAEuG,iBACF5H,KAAKJ,MAAM4J,UAAUxJ,KAAKI,6CAGdyH,GACZ7H,KAAKQ,SAASqH,UAxBa3F,cC/BzByH,IAASC,EAAA,GAAA9J,OAAAiF,EAAA,EAAAjF,CAAA8J,EACZ,GAAK,CACJC,KAAM,6CACNC,SAAU,6CACVC,QAAS,6CACTC,IAAK,+CALMlK,OAAAiF,EAAA,EAAAjF,CAAA8J,EAOZ,EAAI,CACHC,KAAM,6CACNE,QAAS,6CACTC,IAAK,+CAVMJ,GAcTK,GAAO,CACXC,IAAO,wBACPC,KAAQ,yBAGJC,GACE,CACJC,iBAAkB,CAChB,UACA,UACA,UACA,OACA,UACA,UACA,WAEFC,cAAe,CACb,UACA,UACA,UACA,OACA,UACA,UACA,UACA,UAiUSC,eA3Tb,SAAAA,EAAY3K,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuK,IAChB1K,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyK,GAAApK,KAAAH,QAEKI,MAAQ,CACXoK,YAAc,GACdtE,MAAQ,GACRQ,YAAc,EACduC,QAAS,EACTwB,MAAO,EACPC,QAAQ,EACR5F,aAAa,EACb6F,OAAQ,QAGV9K,EAAK+K,YAAc/K,EAAK+K,YAAYhH,KAAjB9D,OAAA+D,EAAA,EAAA/D,QAAA+D,EAAA,EAAA/D,CAAAD,KACnBA,EAAKgL,KAAO,IAAIC,IAAKA,IAAKC,eAAiB,yBAf3BlL,+NAmBVmL,OAAOC,SAASC,gCAENlL,KAAK6K,KAAKM,IAAIC,4BAAxBvK,kBACWb,KAAK6K,KAAKM,IAAIE,IAAIC,eAA7B5J,SAEN1B,KAAKQ,SAAS,CAACgK,YAAa3J,EAAG4J,MAAO/I,IAEhCuD,EAAUjF,KAAKI,MAAMoK,YAAY,GACjCe,EAAW,CACfC,GAAI7B,GAAU3J,KAAKI,MAAMqK,OAAOT,IAChChE,KAAK,aAAehG,KAAK6K,KAAKM,IAAIM,IAAIC,iBACpC,CACE,WAEF,CAACzG,IACD0G,OAAO,IAGX9E,QAAQC,IAAIyE,GAEZvL,KAAK6K,KAAKM,IAAIhL,KAAKoL,GAAUK,KAAK,SAACC,EAAEC,GACnCnL,EAAKH,SAAS,CAACkK,OAAQqB,SAASF,GAAK,MAIvCG,YAAYhM,KAAK4K,YAAa,4IAGpB,IAAAqB,EAAAjM,KACJkM,EAAM,CACVC,IAAKlC,GAAKjK,KAAKI,MAAMuK,QAAU,aAC/ByB,OAAQ,OAGVC,IAAMH,GAAKN,KAAK,SAAAU,GACd,IAAMpG,EAAQoG,EAAItG,KAAKuG,OAAO,SAACC,EAAKjM,GAA0B,OAAlBiM,EAAIjM,EAAE,IAAMA,EAAE,GAAWiM,GAAQ,IAC7EP,EAAKzL,SAAS,CAAC0F,MAAOA,0KAMElG,KAAK6K,KAAKM,IAAIsB,SAAS,iBAC9B,QADbC,WACqB,SAAS5E,KAAK4E,IAAc1M,KAAKQ,SAAS,CAACkG,YAAagG,EAAYC,kLAGpFC,oGACa5M,KAAK6K,KAAKM,IAAIsB,SAAS,iBAA3CC,SACE5G,EAAY,CAChB8G,EAAe3H,QACfjF,KAAK6K,KAAKgC,MAAMC,MAAMF,EAAetH,OAAOyH,WAAW,SACvD/M,KAAK6K,KAAKgC,MAAMC,MAAMF,EAAenF,OAAOsF,WAAW,UACvD,EACAhB,SAASa,EAAelH,QAAUqG,SAASW,EAAYC,QACvDK,KAAKC,MAAMD,KAAKE,SAAWC,OAAOC,kBAClCpN,KAAKI,MAAMqK,OAGb5D,QAAQC,IAAIhB,GAENyF,EAAW,CACfC,GAAI7B,GAAU3J,KAAKI,MAAMqK,OAAOZ,KAChC7D,KAAK,aAAehG,KAAK6K,KAAKM,IAAIM,IAAIC,iBAAiBtB,GAAcC,iBAAkBvE,GAAW6F,OAAO,IAG3G3L,KAAK6K,KAAKM,IAAIhL,KAAKoL,GAAUK,KAAK,SAAAyB,GAChCxG,QAAQC,IAAIuG,GACZxG,QAAQC,IAAIwG,EAAKzC,KAAKgC,MAAMU,WAAWF,IAEvC,IAAMG,EAASF,EAAKlN,MAAMoK,YAAY,GACtC8C,EAAKzC,KAAKM,IAAIsC,SAASC,KAAKL,EAAMG,GAC/B5B,KAAK,SAAA+B,GACJ9G,QAAQC,IAAQhB,EAAJ8H,OAAA,CAAeD,IAAWZ,YAEtC,IAAM3H,EAAa,CACjBoG,GAAI7B,GAAU2D,EAAKlN,MAAMqK,OAAOZ,KAChC7D,KAAK,aAAesH,EAAKzC,KAAKM,IAAIM,IAAIC,iBAAiBtB,GAAcE,cAAmBxE,EAApE8H,OAAA,CAA+ED,KAAYhC,OAAO,IAGlHkC,EAAY,CAChBtI,SAAU,MACVD,OAAQgI,EAAKzC,KAAKgC,MAAMiB,QAAQhI,EAAU,GAAGiH,WAAY,SACzDrH,OAAQI,EAAU,GAClBb,QAASuI,EACT1H,UAAWZ,KAAKqE,UAAUzD,GAC1BV,WAAYF,KAAKqE,UAAUnE,IAGvB2I,EAAWT,EAAKlN,MAAM8F,MAC5B6H,EAASJ,GAAaE,EAEtBP,EAAK9M,SAAS,CACZ0F,MAAO6H,IAGTlH,QAAQC,IAAI+G,GAEZ,IAAMG,EAAW,IAAIC,SACrBnO,OAAOsG,KAAKyH,GAAWvH,QAAQ,SAAA4H,GAC7BF,EAASG,IAAID,EAAEL,EAAUK,MAG3B,IAAMhC,EAAM,CACVC,IAAKlC,GAAKqD,EAAKlN,MAAMuK,QAAU,cAAgBgD,EAC/C3H,KAAMgI,EACN5B,OAAQ,OAGVC,IAAMH,GAAKN,KAAK/E,QAAQC,KAAKsH,MAAMvH,QAAQC,4IAMjD,IAAM7B,EAAUjF,KAAKI,MAAMoK,YAAY,GAGjCpF,EAAa,CACjBiJ,KAAMpJ,EACNzD,MAJaxB,KAAK6K,KAAKgC,MAAMC,MAAM,IAAI,SAKvCtB,GAAI7B,GAAU3J,KAAKI,MAAMqK,OAAOV,QAChC/D,KAAK,cAAgBhG,KAAK6K,KAAKM,IAAIM,IAAIC,iBACrC,CACE,WAEF,CAACzG,IACD0G,OAAO,IAGX3L,KAAK0E,OAAOU,oCAGLuI,EAAWW,GAAO,IAAAC,EAAAvO,KACnBoF,EAAa,CACjBoG,GAAI7B,GAAU3J,KAAKI,MAAMqK,OAAOZ,KAChC7D,KAAK,aAAehG,KAAK6K,KAAKM,IAAIM,IAAIC,iBACpC,CACE,QAEF,CAAE4C,IACF3C,OAAO,IAGX3L,KAAK0E,OAAOU,GAAYwG,KAAK,SAAA4C,GAC3BD,EAAK1D,KAAKM,IAAIsC,SAASC,KAAK,aAAeY,EAAOC,EAAKnO,MAAMoK,YAAY,IAAIoB,KAAK,SAAA6C,GAChF,IAAMC,EAAc,CAClBf,UAAWA,EACXW,MAAOA,EACPG,SAAUA,GAGZ5H,QAAQC,IAAI,SAAS4H,GAErB,IAAMV,EAAW,IAAIC,SACrBnO,OAAOsG,KAAKsI,GAAapI,QAAQ,SAAA4H,GAC/BF,EAASG,IAAID,EAAGQ,EAAYR,MAG9B,IAAMhC,EAAM,CACVC,IAAKlC,GAAKsE,EAAKnO,MAAMuK,QAAU,cAAgBgD,EAC/C3H,KAAMgI,EACN5B,OAAQ,UAGVC,IAAMH,GACHN,KAAK2C,EAAKxI,UAAUnC,KAAK2K,IACzBH,MAAMvH,QAAQ8H,6CAKbC,GACR,IAAM3J,EAAUjF,KAAKI,MAAMoK,YAAY,GAGjCpF,EAAa,CACjBiJ,KAAMpJ,EACNzD,MAJaxB,KAAK6K,KAAKgC,MAAMC,MAAM8B,EAAatJ,OAAOyH,WAAW,SAKlEvB,GAAI7B,GAAU3J,KAAKI,MAAMqK,OAAOZ,KAChC7D,KAAK,aAAehG,KAAK6K,KAAKM,IAAIM,IAAIC,iBACpC,CACE,WAEF,CAACzG,IACD0G,OAAO,IAGX3L,KAAK0E,OAAOU,GAAYwG,KAAK/E,QAAQC,uCAG7B+H,GAAc,IAAAC,EAAA9O,KAChBuL,EAAW,CACfC,GAAI7B,GAAU3J,KAAKI,MAAMqK,OAAOZ,KAChC7D,KAAK,aAAehG,KAAK6K,KAAKM,IAAIM,IAAIC,iBACpC,CACE,WAEF,CAACmD,EAAa5J,UACd0G,OAAO,IAGX9E,QAAQC,IAAIyE,GAEZvL,KAAK6K,KAAKM,IAAIhL,KAAKoL,GAAUK,KAAK,SAACC,EAAEC,GACnC,IAAM7C,EAAU6F,EAAKjE,KAAKgC,MAAMiB,QAAQgB,EAAKjE,KAAKgC,MAAMkC,KAAKlD,GAAGkB,WAAY,SAC5E+B,EAAKtO,SAAS,CAACyI,QAASA,wCAIlB+F,GACRnI,QAAQC,IAAIkI,GAEZhP,KAAK0E,OAAOsK,EAAS5J,2CAGhBA,GACL,IAAMH,EAAUjF,KAAKI,MAAMoK,YAAY,GACjCyE,EAAcnP,OAAAW,EAAA,EAAAX,CAAA,GAAOsF,EAAP,CAAmBiJ,KAAMpJ,IAI7C,OAFA4B,QAAQC,IAAImI,GAELjP,KAAK6K,KAAKM,IAAI+D,gBAAgBD,oCAIrC,OACErO,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqO,EAAD,MACAvO,EAAAC,EAAAC,cAACsO,EAAAvO,EAAD,MACAD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6DACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,+CAA+CkB,KAAK,IAAImC,MAAO,CAACiL,cAAgB,QAC3FzO,EAAAC,EAAAC,cAAA,OAAKwO,IAAKC,IAAM9M,MAAM,KAAKD,OAAO,KAAKzB,UAAU,gCAAgCyO,IAAI,gBADvF,UAIA5O,EAAAC,EAAAC,cAAC2O,EAAD,CAAWtM,SAAQnD,KAAKI,MAAMsK,SAC9B9J,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAhB,kBACkBf,KAAKI,MAAMsG,cAG/B9F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAA4BqD,MAAO,CAAC3B,MAAQ,SACzD7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OACEC,UAAU,WACVqD,MAAO,CAACsL,SAAW,UAEnB9O,EAAAC,EAAAC,cAAC6O,EAAD,CACEnL,QAASxE,KAAKI,MAAMoK,YAAY,GAChCtE,MAAOlG,KAAKI,MAAM8F,MAClBpB,YAAa9E,KAAKI,MAAM0E,YACxB4B,YAAa1G,KAAKI,MAAMsG,YACxBhC,OAAQ1E,KAAK0E,OAAOd,KAAK5D,MACzByE,SAAUzE,KAAKyE,SAASb,KAAK5D,MAC7B+F,UAAW/F,KAAK+F,UAAUnC,KAAK5D,QAEjCY,EAAAC,EAAAC,cAAC8O,GAAD,CACEpG,UAAWxJ,KAAKwJ,UAAU5F,KAAK5D,SAGnCY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OACEC,UAAU,kBACVqD,MAAO,CAACsL,SAAW,UAEnB9O,EAAAC,EAAAC,cAAC+O,EAAD,CACExI,OAAQrH,KAAKqH,OAAOzD,KAAK5D,QAE3BY,EAAAC,EAAAC,cAACgP,EAAD,CACE7K,QAASjF,KAAKI,MAAMoK,YAAY,GAChChC,UAAWxI,KAAKwI,UAAU5E,KAAK5D,SAGnCY,EAAAC,EAAAC,cAAA,OACEC,UAAU,kBACVqD,MAAO,CAACsL,SAAW,UAEnB9O,EAAAC,EAAAC,cAACiP,EAAD,CACE/H,MAAOhI,KAAKgI,MAAMpE,KAAK5D,QAEzBY,EAAAC,EAAAC,cAACkP,EAAD,CACE/K,QAASjF,KAAKI,MAAMoK,YAAY,GAChCvB,QAASjJ,KAAKI,MAAM6I,QACpBD,UAAWhJ,KAAKgJ,UAAUpF,KAAK5D,QAEjCY,EAAAC,EAAAC,cAACmP,EAAD,WAMVrP,EAAAC,EAAAC,cAACoP,EAAD,cAtTUhO,aCjDEiO,QACW,cAA7BnF,OAAOoF,SAASC,UAEe,UAA7BrF,OAAOoF,SAASC,UAEhBrF,OAAOoF,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO5P,EAAAC,EAAAC,cAAC2P,GAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAc7J,MAAM4E,KAAK,SAAAkF,GACjCA,EAAaC","file":"static/js/main.e86eefd1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.21f31404.svg\";","import React, { Component } from 'react';\n\nclass DropdownAppend extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {toggle: false, filter: \"\"};\n  }\n\n  setFilter(v) {\n    this.setState({...this.state, filter: v});\n  }\n\n  toggleList() {\n    this.setState(prevState => ({\n      toggle : !prevState.toggle\n    }))\n  }\n\n  render() {\n    return ( \n      <div className=\"input-group-append\">\n        <button\n          className={\"btn btn-primary dropdown-toggle\" }\n          onClick={() => this.toggleList()}\n          type=\"button\"\n          data-toggle=\"dropdown\"\n        >\n          ETH\n        </button>\n        <div className={\"dropdown-menu dropdown-menu-right \" + (this.state.toggle ? \"show\" : \"\")}>\n          <input\n            className=\"filter-input pl-2 m-1\"\n            onChange={(e) => this.setFilter(e.target.value)}\n            type=\"text\"\n            placeholder=\"Filter\"\n            id=\"ticker\"\n          />\n          {this.props.symbols\n              .filter(w =>\n                w.toUpperCase().search(this.state.filter.toUpperCase()) > -1\n              )\n              .map(v => (\n                <a key={v} className=\"dropdown-item\" href=\"#\">{v}</a>\n              ))}\n            </div>\n          </div>\n    )\n  }\n}\n\nconst CollapseButton = (props) => (\n  <a onClick={() => props.onCollapse()}>\n    <i className={\"float-right fas fa-\" + (props.collapsed ? \"plus\" : \"minus\") + \"-square\"}></i>\n  </a>\n);\n\nconst Footer = () => (\n  <footer>\n    <div className=\"container\">\n      <div className=\"text-center\"><i className=\"fas fa-ellipsis-h\"></i></div>\n      <div className=\"row text-center\">\n        <div className=\"col-md-12\">\n          <ul className=\"list-inline social-buttons\">\n            <li className=\"list-inline-item\">\n              <a href=\"#\">\n                <i className=\"fab fa-twitter\"></i>\n              </a>\n            </li>\n            <li className=\"list-inline-item\">\n              <a href=\"#\">\n                <i className=\"fab fa-reddit\"></i>\n              </a>\n            </li>\n            <li className=\"list-inline-item\">\n              <a href=\"#\">\n                <i className=\"fab fa-discord\"></i>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div className=\"col-md-12 py-5\">\n          <span className=\"text-white text-monospace\">TXCast 2018</span>\n        </div>\n      </div>\n    </div>\n  </footer>\n);\n\nconst PatternBg = () => (\n  <svg height=\"100%\" width=\"100%\">\n    <defs>\n      <pattern id=\"basicPattern\" x=\"0\" y=\"0\" width=\"60\" height=\"30\" patternUnits=\"userSpaceOnUse\">\n        <polygon points=\"0,0 30,15 30,-15\"/>\n        <polygon points=\"0,0 30,15 0,30\"/>\n        <polygon points=\"0,30 30,15 30,45\"/>\n\n        <polygon points=\"60,0 30,15 30,-15\"/>\n        <polygon points=\"60,0 30,15 60,30\"/>\n        <polygon points=\"60,30 30,15 30,45\"/>\n      </pattern>\n    </defs>\n\n    <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\"\n      stroke= \"#333333\" strokeWidth=\"1\" fill=\"url(#basicPattern)\" />\n  </svg>\n);\n\nconst TXCStatus = (props) => {\n  const classColor = props.active ? \"text-success\" : \"text-danger\";\n  const text = props.active ? \" Active\" : \" Inactive\";\n  const icon = props.active ? \"check\" : \"times\";\n  return (\n    <span className=\"navbar-text ml-auto\">\n      TXC Sub:\n      <span className={classColor}>\n        {text}\n      </span>\n      <i data-tip=\"Active subs are addresses that hold at least 1 TXC and do not pay the 30% fee.\" class={\"ml-1 fas fa-\" + icon + \"-circle \" + classColor}></i>\n    </span>\n  );\n};\n\nexport { Footer, PatternBg, CollapseButton, DropdownAppend, TXCStatus };\n","import React, { Component } from 'react';\n\nconst withCollapse = (WrappedComponent) => {\n  return class CollapseCard extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {collapsed: false}\n\n      this.onCollapse = this.onCollapse.bind(this);\n    }\n\n    onCollapse() {\n      this.setState({...this.state, collapsed: !this.state.collapsed});\n    }\n\n    render() {\n      return (\n        <div>\n          <WrappedComponent\n            {...this.props}\n            collapsed={this.state.collapsed}\n            onCollapse={this.onCollapse}\n          />\n        </div>\n      );\n    }\n  }\n}\n\nexport default withCollapse;\n","import React, { Component } from 'react';\nimport { CollapseButton } from './Utils.js';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport withCollapse from './withCollapse.js';\n\nconst TXQueue = props => (\n  <div className=\"card text-white mb-3\">\n    <div className=\"card-header\">\n      <h2 className=\"text-monospace font-weight-bold\">\n        TX Queue\n        <CollapseButton\n          onCollapse={props.onCollapse}\n          collapsed={props.collapsed}\n        />\n      </h2> \n    </div>  \n    <div className={\"card-body\" + (props.collapsed ? \" card-collapse\" : \"\")}>\n      <div className=\"table-container\">\n        <table className=\"table table-hover\">\n          <thead className=\"bg-white\">\n            <tr className=\"text-black d-flex\" style={{'height':'30px'}}>\n              <th scope=\"col\" className=\"col-5\">Requester</th>\n              <th scope=\"col\" className=\"col-3 text-center\">Block Schedule</th>\n              <th scope=\"col\" className=\"col-4 text-center\">Reward</th>\n            </tr>\n          </thead>\n          <tbody className=\"text-black text-monospace\">\n            {\n              props.posts.map(p =>\n                <TXReady\n                  {...p}\n                  account={props.account}\n                  onCancel={props.onCancel}\n                  sendTX={props.sendTX}\n                />\n              )\n            } {\n              props.requests.map(p =>\n                <TXPost\n                  {...p}\n                  account={props.account}\n                  blockFormat={props.blockFormat}\n                  account={props.account}\n                  onCancel={props.onCancel}\n                />\n              )\n            }\n          </tbody>\n        </table>  \n      </div>\n    </div>\n  </div>\n);\n\nconst TXReady = props => (\n  <tr className=\"table-light text-black d-flex hoverHide\">\n    <td className=\"col-5 pl-3\">\n      <span className=\"sendSpan\">{props.address}</span>\n      <button\n        className=\"btn btn-sm btn-success btn-block table-button\"\n        onClick={() => props.sendTX(JSON.parse(props.callDataTX))}\n      >\n        <i class=\"fas fa-paper-plane\"></i> Send this TX \n      </button>\n    </td>\n    <td className=\"col-3 text-center\">Ready</td>\n    <td className=\"col-4 text-center\">\n      {(props.account === props.address) ? <CancelButton {...props}/> : props.amount + \" \" + props.currency}\n    </td>\n  </tr>\n);\n\nconst TXPost = props => (\n  <tr className=\"table-secondary text-black d-flex hoverHide\">\n    <td className=\"col-5 pl-3\">\n      <span className=\"sendSpan\">{props.address}</span>\n      <CopyToClipboard text={(props.callDataTX)}>\n        <button\n          className=\"btn btn-sm btn-danger btn-block table-button\"\n          onClick={(e) => (0)}\n        >\n         <i class=\"fas fa-clipboard\"></i> Copy Signature \n        </button>\n      </CopyToClipboard>\n    </td>\n    <td className=\"col-3 text-center\">{props.blockFormat ? props.blocks : props.timestamp}</td>\n    <td className=\"col-4 text-center\">\n      {(props.account === props.address) ? <CancelButton {...props}/> : props.amount + \" \" + props.currency}\n    </td>\n  </tr>\n);\n\nconst CancelButton = (props) => (\n  <span>\n    <span className=\"sendSpan\">{props.amount} {props.currency}</span>\n    <button\n      className=\"btn btn-sm btn-danger btn-block table-button\"\n      onClick={() => props.onCancel(props.sig, JSON.parse(props.dataArray)[5])}\n    >\n      <i class=\"fas fa-ban\"></i> Cancel TX\n    </button>\n  </span>\n);\n\nclass TXQueueContainer extends Component {\n  componentDidMount() {\n    this.props.fetchData();\n  }\n\n  render() {\n    const data      = Object.values(this.props.queue);\n    const sigs      = Object.keys(this.props.queue);\n    const zipped    = data.forEach((p,i) => p.sig = sigs[i]) || data;\n    const posts     = this.props.blockFormat ?\n      zipped : zipped.forEach(p => {\n        p.timestamp = new Date(Date.now() + 15*(p.blocks - this.props.blockNumber)).toISOString().split(\"T\")[0];\n      }) || posts;\n\n    console.log(\"txq\", posts)\n\n    const pre   = posts.filter(p => p.blocks < this.props.blockNumber);\n    const ready = posts.filter(p => p.blocks >= this.props.blockNumber);\n\n    return (\n      <TXQueue\n        {...this.props}\n        posts={pre}\n        requests={ready}\n        onCancel={this.props.onCancel}\n        sendTX={this.props.sendTX}\n      />  \n    );\n  }\n}\n\nexport default withCollapse(TXQueueContainer);\n","import React, { Component } from 'react';\nimport { CollapseButton, DropdownAppend } from './Utils.js';\nimport withCollapse from './withCollapse.js';\n\nconst Scheduler = props => (\n  <div className=\"card text-white mb-3\">\n    <div className=\"card-header\">\n      <h3 className=\"text-monospace\">\n        Post Scheduled TX\n        <CollapseButton\n          onCollapse={props.onCollapse}\n          collapsed={props.collapsed}\n        />\n      </h3> \n    </div>  \n    <div className={\"card-body\" + (props.collapsed ? \" card-collapse\" : \"\")}>\n      <ScheduleInput\n        onInputChange={props.onInputChange}\n        onSign={props.onSign}\n        inputData={props.inputData}\n        symbols={props.symbols}\n      />\n    </div>\n  </div>\n);\n\nconst ScheduleInput = props => (\n  <form>\n    <div className=\"form-group\">\n      <label>Receiver Address</label>\n        <input\n          onChange={(e) => props.onInputChange({...props.inputData, address: e.target.value})}\n          className=\"form-control text-monospace\"\n          id=\"recieverAddress\"\n          value={props.inputData.address}\n       />\n      <small id=\"raHelp\" className=\"form-text text-gray\">Address of the end-recipient of your transaction.</small>\n    </div>\n    <div className=\"form-group\">\n      <label>Amount</label>\n      <div className=\"input-group\">\n        <input\n          onChange={(e) => props.onInputChange({...props.inputData, amount: e.target.value})}\n          className=\"form-control text-monospace\"\n          id=\"amount\"\n          value={props.inputData.amount}\n       />\n        <DropdownAppend symbols={props.symbols}/>\n      </div>\n      <small id=\"aHelp\" className=\"form-text text-gray\">Amount to send to the receiver address.</small>\n    </div>\n    <div className=\"form-group\">\n      <label>Reward</label>\n      <i data-tip=\"The reward implicitly includes the network transaction fee.\" className=\"fas fa-info-circle ml-2\"></i>\n      <div className=\"input-group\">\n        <input\n          onChange={(e) => props.onInputChange({...props.inputData, reward: e.target.value})}\n          className=\"form-control text-monospace\"\n          id=\"reward\"\n          value={props.inputData.reward}\n       />\n        <DropdownAppend symbols={props.symbols}/>\n      </div>\n      <small id=\"rwHelp\" className=\"form-text text-gray\">Amount awarded to the address that fulfills your request.</small>\n    </div>\n    <div className=\"form-group\">\n      <label>Blocks</label>\n      <i data-tip=\"Blocks till your TX is available for mining. One block is mined every ~15 seconds.\" className=\"fas fa-info-circle ml-2\"></i>\n      <div className=\"input-group\">\n        <input\n          onChange={(e) => props.onInputChange({...props.inputData, blocks: e.target.value})}\n          className=\"form-control text-monospace\"\n          id=\"blocks\"\n          value={props.inputData.blocks}\n       />\n        <div className=\"input-group-append\">\n          <button className=\"btn btn-primary\">Blocks</button>\n        </div>\n      </div>\n      <small id=\"bHelp\" className=\"form-text text-gray\">Blocks to wait before the transaction is broadcasted.</small>\n    </div>\n\n    <button\n      onClick={(e) => props.onSign(e)}\n      className=\"btn btn-block btn-lg btn-success\"\n    >\n      Sign and Schedule\n    </button>\n  </form>\n);\n\nclass SchedulerContainer extends Component {\n  constructor(props){\n    super(props);\n    this.state = {address: '0x0000000000000000000000000000000000000000', amount: 0, reward: 0, blocks: 0};\n  }\n\n  render() {\n    return (\n      <Scheduler\n        {...this.props}\n        onInputChange={this.onInputChange.bind(this)}\n        onSign={this.onSign.bind(this)}\n        inputData={this.state}\n        symbols={['ETH','ZRX','DAI','REP']}\n      />\n    );\n  }\n\n  onSign(e) {\n    e.preventDefault();\n    this.props.onSign(this.state);\n  }\n\n  onInputChange(newState) {\n    if((/(^[0-9][0-9]{0,5}$)|(^$)/.test(newState.blocks))\n      && (/(^[0-9]+\\.?[0-9]{0,18}$)|(^$)/.test(newState.reward))\n      && (/(^[0-9]+\\.?[0-9]{0,18}$)|(^$)/.test(newState.amount))\n      && (/^0x[0-9a-f]{40}$/i.test(newState.address)))\n        this.setState(newState);\n  }\n}\n\nexport default withCollapse(SchedulerContainer);\n","import React, { Component } from 'react';\nimport { CollapseButton } from './Utils.js';\nimport withCollapse from './withCollapse.js';\n\nconst TXC = props => (\n  <div className=\"card text-white mb-3\">\n    <div className=\"card-header\">\n      <h3 className=\"text-monospace\">\n        Buy TXC\n        <CollapseButton\n          onCollapse={props.onCollapse}\n          collapsed={props.collapsed}\n        />\n      </h3> \n    </div>  \n    <div className={\"card-body\" + (props.collapsed ? \" card-collapse\" : \"\")}>\n      <p className=\"lead\">TXC is the subscription badge of TXCast. Every posted transaction charges a 30% fee of the reward. Addresses with at least 1 TXC do not pay this fee. Subscriptions can be transferred to other addresses and never expire.</p>\n      <p>There will only be a total of 5000 TXC subscriptions, and their price is fixed at 1 TXC = 1 ETH for the duration of the sale. TXC isn't subdivisible, so the minimum amount for sale is 1 TXC. However, an address can buy as many whole units of TXC as it wishes. After the 5000 subscriptions are sold, new users will have buy the subscriptions from previous owners.</p>\n      <div className=\"form-group\">\n        <button\n          type=\"button\"\n          onClick={() => props.onBuy()}\n          className=\"btn btn-success btn-lg btn-block\"\n        >\n          Buy TXC\n        </button>\n      </div>\n    </div>\n  </div>\n);\n\nclass TXCContainer extends Component {\n  render() {\n    return(\n      <TXC\n        {...this.props}\n      />\n    );  \n  }\n}\n\nexport default withCollapse(TXCContainer);\n","import React, { Component } from 'react';\nimport { CollapseButton } from './Utils.js';\nimport withCollapse from './withCollapse.js';\n\nconst Notice = props => (\n  <div className=\"card text-white mb-3\">\n    <div className=\"card-header\">\n      <h3 className=\"text-monospace\">\n        Notices\n        <CollapseButton\n          onCollapse={props.onCollapse}\n          collapsed={props.collapsed}\n        />\n      </h3> \n    </div>  \n    <div className={\"card-body\" + (props.collapsed ? \" card-collapse\" : \"\")}>\n      <p>TXCast is in beta release. Proceed with caution and make sure to read what each sub-app does.</p>\n    </div>\n  </div>\n);\n\nclass NoticesContainer extends Component {\n  render() {\n    return (\n      <Notice {...this.props}/>\n    )\n  }\n}\n\nexport default withCollapse(NoticesContainer);\n","import React, { Component } from 'react';\nimport Toggle from 'react-toggle';\nimport { CollapseButton, DropdownAppend } from './Utils.js';\nimport withCollapse from './withCollapse.js';\n\nconst Deposit = props => (\n  <div className=\"card text-white mb-3\">\n    <div className=\"card-header\">\n      <h3 className=\"text-monospace\">\n        Ether and Token Deposits\n        <CollapseButton\n          onCollapse={props.onCollapse}\n          collapsed={props.collapsed}\n        />\n      </h3> \n    </div>  \n    <div className={\"card-body\" + (props.collapsed ? \" card-collapse\" : \"\")}>\n      <DepositInput\n        {...props}\n      />\n    </div>\n  </div>\n);\n\nconst DepositInput = props => (\n  <form>\n    <div className=\"form-group\">\n      <label>Beneficiary's Address</label>\n      <i data-tip=\"Until release, the beneficiary is the unlocked wallet.\" className=\"fas fa-info-circle ml-2\"></i>\n\n      <div className=\"input-group\">\n        <input\n          disabled\n          className=\"form-control text-monospace bg-primary\"\n          id=\"beneficiaryAddress\"\n          value={props.address}\n        />\n      </div>\n      <small id=\"raHelp\" className=\"form-text text-gray\">Address of the beneficiary of your deposit.</small>\n    </div>\n    <div className=\"form-group\">\n      <label>Amount</label>\n      <div className=\"input-group\">\n        <input\n          onChange={(e) => props.onInputChange({...props.inputData, amount: e.target.value})}\n          className=\"form-control text-monospace\"\n          id=\"depositAmount\"\n          value={props.inputData.amount}\n        />\n        <DropdownAppend symbols={props.symbols}/>\n      </div>\n      <small id=\"aHelp\" className=\"form-text text-gray\">Amount to deposit to the beneficiary.</small>\n    </div>\n\n    <button\n      onClick={(e) => props.onDeposit(e)}\n      className=\"btn btn-block btn-lg btn-success\"\n    >\n      Deposit \n    </button>\n  </form>\n);\n\nconst selfdeposit = (props) => (\n  <label className=\"switch\">\n    <input\n      type=\"checkbox\"\n      checked={props.selfDepositToggle}\n      value={props.selfDepositToggle}\n      onChange={() => props.toggleSelfDeposit()}\n    />\n    <div className=\"slider ml-2\"></div>\n  </label>  \n);\n\nclass DepositContainer extends Component {\n  constructor(props){\n    super(props);\n    this.state = {amount: 0, selfDepositToggle: true};\n  }\n\n  render() {\n    return (\n      <Deposit\n        {...this.props}\n        onInputChange={this.onInputChange.bind(this)}\n        onDeposit={this.onDeposit.bind(this)}\n        toggleSelfDeposit={this.toggleSelfDeposit.bind(this)}\n        inputData={this.state}\n        symbols={['ETH','ZRX','DAI','REP']}\n      />\n    );\n  }\n\n  onDeposit(e) {\n    e.preventDefault();\n    this.props.onDeposit(this.state);\n  }\n\n  toggleSelfDeposit() {\n    this.setState({...this.state, selfDepositToggle: !this.state.selfDepositToggle}); \n  }\n\n  onInputChange(newState) {\n    if(/(^[0-9]+\\.?[0-9]{0,18}$)|(^$)/.test(newState.amount))\n      this.setState(newState);\n  }\n}\n\nexport default withCollapse(DepositContainer);\n","import React, { Component } from 'react';\nimport { CollapseButton, DropdownAppend } from './Utils.js';\nimport withCollapse from './withCollapse.js';\n\nconst Balance = props => (\n  <div className=\"card text-white mb-3\">\n    <div className=\"card-header\">\n      <h3 className=\"text-monospace\">\n        Balances\n        <CollapseButton\n          onCollapse={props.onCollapse}\n          collapsed={props.collapsed}\n        />\n      </h3>\n    </div>  \n    <div className={\"card-body\" + (props.collapsed ? \" card-collapse\" : \"\")}>\n      <BalanceInput\n        {...props}\n      />\n    </div>\n  </div>\n);\n\nconst BalanceInput = props => (\n  <form>\n    <div className=\"form-group\">\n      <label>Address</label>\n      <div className=\"input-group\">\n        <input\n          onChange={(e) => props.onInputChange({...props.inputData, address: e.target.value})}\n          className=\"form-control text-monospace\"\n          id=\"address\"\n          value={props.inputData.address}\n        />\n        <div className=\"input-group-append\">\n          <button\n            onClick={(e) => props.onBalance(e)}\n            className=\"btn btn-primary\"\n          >\n            Check\n          </button>\n        </div>\n        <small id=\"raHelp\" className=\"form-text text-gray\"></small>\n      </div>\n    </div>\n    <div className=\"form-group\">\n      <h3>ETH: <span className=\"float-right\">{props.balance}</span></h3>\n    </div>\n  </form>\n);\n\nclass BalanceContainer extends Component {\n  constructor(props){\n    super(props);\n    this.state = {address: '0x0000000000000000000000000000000000000000', amount: 0};\n  }\n\n  render() {\n    return (\n      <Balance\n        {...this.props}\n        onInputChange={this.onInputChange.bind(this)}\n        onBalance={this.onBalance.bind(this)}\n        inputData={this.state}\n        symbols={['ETH','ZRX','DAI','REP']}\n      />\n    );\n  }\n\n  onBalance(e) {\n    e.preventDefault();\n    this.props.onBalance(this.state);\n  }\n\n  onInputChange(newState) {\n    if(/^0x[0-9a-f]{40}$/i.test(newState.address))\n      this.setState(newState);\n  }\n}\n\nexport default withCollapse(BalanceContainer);\n","import React, { Component } from 'react';\nimport { CollapseButton, DropdownAppend } from './Utils.js';\nimport withCollapse from './withCollapse.js';\n\nconst SendRaw = props => (\n  <div className=\"card text-white mb-3\">\n    <div className=\"card-header\">\n      <h3 className=\"text-monospace\">\n        Broadcast TX\n        <CollapseButton\n          onCollapse={props.onCollapse}\n          collapsed={props.collapsed}\n        />\n      </h3>\n    </div>  \n    <div className={\"card-body\" + (props.collapsed ? \" card-collapse\" : \"\")}>\n      <SendRawInput\n        {...props}\n      />\n    </div>\n  </div>\n);\n\nconst SendRawInput = props => (\n  <form>\n    <div className=\"form-group\">\n      <label>TX Data</label>\n      <i data-tip=\"These data can be copied to the clipboard from the TX Queue sub-app.\" className=\"fas fa-info-circle ml-2\"></i>\n      <div className=\"input-group\">\n        <input\n          onChange={(e) => props.onInputChange({callDataTX: JSON.parse(e.target.value)})}\n          className=\"form-control text-monospace\"\n          id=\"address\"\n          value={JSON.stringify(props.inputData.callDataTX)}\n        />\n        <div className=\"input-group-append\">\n          <button\n            onClick={(e) => props.onSendRaw(e)}\n            className=\"btn btn-primary\"\n          >\n           Broadcast TX \n          </button>\n        </div>\n        <small id=\"raHelp\" className=\"form-text text-gray\"></small>\n      </div>\n    </div>\n  </form>\n);\n\nclass SendRawContainer extends Component {\n  constructor(props){\n    super(props);\n    this.state = {callDataTX: {}};\n  }\n\n  render() {\n    return (\n      <SendRaw\n        {...this.props}\n        onInputChange={this.onInputChange.bind(this)}\n        onSendRaw={this.onSendRaw.bind(this)}\n        inputData={this.state}\n        symbols={['ETH','ZRX','DAI','REP']}\n      />\n    );\n  }\n\n  onSendRaw(e) {\n    e.preventDefault();\n    this.props.onSendRaw(this.state);\n  }\n\n  onInputChange(newState) {\n    this.setState(newState);\n  }\n}\n\nexport default withCollapse(SendRawContainer);\n","import React, { Component } from 'react';\nimport { Footer, PatternBg, TXCStatus } from './Utils.js';\nimport Web3 from 'web3';\nimport ReactTooltip from 'react-tooltip';\nimport axios from 'axios';\n\nimport logo from './img/SVG/logo.svg';\nimport './App.css';\n\nimport TXQueueContainer from './TXQueueContainer.js';\nimport SchedulerContainer from './SchedulerContainer.js';\nimport TXCContainer from './TXCContainer.js';\nimport NoticesContainer from './NoticesContainer.js';\nimport DepositContainer from './DepositContainer.js';\nimport BalanceContainer from './BalanceContainer.js';\nimport SendRawContainer from './SendRawContainer.js';\n\n\nconst addresses = {\n  [42]: {\n    eths: \"0xa0475d202be30019e56306cc08f8998887135258\",\n    eths_old: \"0xe49bb13f1e57de8364586bbb82bf79d0c8aac074\",\n    txcsale: \"0x2ffbee1b7eda9d6187f4f875899c9f8f28d927ed\",\n    txc: \"0x12C942fDbE9981E68DC153CC92dA2e2c301F5a9A\",\n  },\n  [1]: {\n    eths: \"0xf99E87098f4F1C8d8bd6a3df7181B3acdc21848A\",\n    txcsale: \"0xa4b01a89162141c58505ea43db2d3bda71a325c2\",\n    txc: \"0x67e35c41060a988f59e2bcb2e0f09b6978fb6614\",\n  }\n};\n\nconst urls = {\n  'dev': \"http://localhost:5000\",\n  'prod': \"https://api.txcast.io\",\n}\n\nconst abiTypes = {\n  eths: {\n    withoutSignature: [\n      'address', // target\n      'uint256', // amount\n      'uint256', // reward\n      'bool',    // byBlock\n      'uint256', // condition\n      'uint256', // nonce\n      'uint256', // netID\n    ],\n    withSignature: [\n      'address', // target\n      'uint256', // amount\n      'uint256', // reward\n      'bool',    // byBlock\n      'uint256', // condition\n      'uint256', // nonce\n      'uint256', // netID\n      'bytes',   // signature \n    ],\n  }\n};\n\nclass App extends Component {\n  constructor(props){\n    super();\n\n    this.state = {\n      addressList : [],\n      queue : {},\n      blockNumber : 0,\n      balance: 0,\n      netID: 0,\n      hasTXC: false,\n      blockFormat: true,\n      server: 'prod',\n    }\n\n    this.updateBlock = this.updateBlock.bind(this);\n    this.web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n  }\n\n  async componentWillMount() {\n    await window.ethereum.enable();\n\n    const a = await this.web3.eth.getAccounts();\n    const id = await this.web3.eth.net.getId();\n\n    this.setState({addressList: a, netID: id});\n\n    const address = this.state.addressList[0];\n    const callData = {\n      to: addresses[this.state.netID].txc,\n      data:'0x70a08231' + this.web3.eth.abi.encodeParameters(\n        [\n          'address',\n        ],\n        [address]\n      ).substr(2)\n    }\n\n    console.log(callData)\n\n    this.web3.eth.call(callData).then((b,s) => {\n      this.setState({hasTXC: parseInt(b) > 0});\n    });\n\n\n    setInterval(this.updateBlock, 5000);\n  }\n\n  fetchData() {\n    const req = {\n      url: urls[this.state.server] + '/signature',\n      method: 'GET',\n    };\n\n    axios(req).then(ans => {\n      const queue = ans.data.reduce((acc, v) => { acc[v[0]] = v[1]; return acc; }, {});\n      this.setState({queue: queue});\n    });\n\n  }\n\n  async updateBlock() {\n    const latestBlock = await this.web3.eth.getBlock('latest');\n    if(latestBlock !== null && /[0-9]*/.test(latestBlock)) this.setState({blockNumber: latestBlock.number});\n  }\n\n  async onSign(schedulerInput) {\n    let latestBlock = await this.web3.eth.getBlock('latest');\n    const dataArray = [\n      schedulerInput.address,\n      this.web3.utils.toWei(schedulerInput.amount.toString(),'ether'),\n      this.web3.utils.toWei(schedulerInput.reward.toString(),'ether'),\n      true,\n      parseInt(schedulerInput.blocks) + parseInt(latestBlock.number),\n      Math.floor(Math.random() * Number.MAX_SAFE_INTEGER),\n      this.state.netID,\n    ];\n\n    console.log(dataArray);\n\n    const callData = {\n      to: addresses[this.state.netID].eths,\n      data:'0x889c3912' + this.web3.eth.abi.encodeParameters(abiTypes.eths.withoutSignature, dataArray).substr(2),\n    }\n\n    this.web3.eth.call(callData).then(hash => {\n      console.log(hash);\n      console.log(this.web3.utils.hexToAscii(hash));\n\n      const signer = this.state.addressList[0];\n      this.web3.eth.personal.sign(hash, signer)\n        .then(signature => {\n          console.log([...dataArray, signature].toString())\n\n          const callDataTX = {\n            to: addresses[this.state.netID].eths,\n            data:'0x392482d1' + this.web3.eth.abi.encodeParameters(abiTypes.eths.withSignature, [...dataArray, signature]).substr(2),\n          }\n\n          const txrequest = {\n            currency: 'ETH',\n            amount: this.web3.utils.fromWei(dataArray[2].toString(), 'ether'),\n            blocks: dataArray[4],\n            address: signer, \n            dataArray: JSON.stringify(dataArray),\n            callDataTX: JSON.stringify(callDataTX),\n          }\n\n          const appended = this.state.queue\n          appended[signature] = txrequest;\n\n          this.setState({\n            queue: appended,\n          });\n\n          console.log(txrequest)\n\n          const formData = new FormData();\n          Object.keys(txrequest).forEach(k => {\n            formData.set(k,txrequest[k]);\n          });\n\n          const req = {\n            url: urls[this.state.server] + '/signature/' + signature,\n            data: formData,\n            method: 'PUT',\n          };\n\n          axios(req).then(console.log).catch(console.log)\n        });\n    });\n  }\n\n  onBuy() {\n    const address = this.state.addressList[0];\n    const amount = this.web3.utils.toWei(\"1\",'ether');\n\n    const callDataTX = {\n      from: address,\n      value: amount, \n      to: addresses[this.state.netID].txcsale,\n      data:'0xec8ac4d80' + this.web3.eth.abi.encodeParameters(\n        [\n          'address',\n        ],\n        [address],\n      ).substr(2)\n    }\n\n    this.sendTX(callDataTX);\n  }\n\n  onCancel(signature, nonce) {\n    const callDataTX = {\n      to: addresses[this.state.netID].eths,\n      data:'0x8e7baff6' + this.web3.eth.abi.encodeParameters(\n        [\n          'uint',\n        ],\n        [ nonce ],\n      ).substr(2)\n    }\n\n    this.sendTX(callDataTX).then(receipt => {\n      this.web3.eth.personal.sign(\"Cancel TX \" + nonce, this.state.addressList[0]).then(verified => {\n        const cancelOrder = {\n          signature: signature,\n          nonce: nonce, \n          verified: verified,\n        }\n\n        console.log(\"cancel\",cancelOrder)\n\n        const formData = new FormData();\n        Object.keys(cancelOrder).forEach(k => {\n          formData.set(k, cancelOrder[k]);\n        });\n\n        const req = {\n          url: urls[this.state.server] + '/signature/' + signature,\n          data: formData,\n          method: 'DELETE',\n        };\n\n        axios(req)\n          .then(this.fetchData.bind(this))\n          .catch(console.error)\n      });\n    });\n  }\n\n  onDeposit(depositInput) {\n    const address = this.state.addressList[0];\n    const amount = this.web3.utils.toWei(depositInput.amount.toString(),'ether');\n\n    const callDataTX = {\n      from: address,\n      value: amount, \n      to: addresses[this.state.netID].eths,\n      data:'0xf340fa01' + this.web3.eth.abi.encodeParameters(\n        [\n          'address',\n        ],\n        [address],\n      ).substr(2)\n    }\n\n    this.sendTX(callDataTX).then(console.log);\n  }\n\n  onBalance(balanceInput) {\n    const callData = {\n      to: addresses[this.state.netID].eths,\n      data:'0x70a08231' + this.web3.eth.abi.encodeParameters(\n        [\n          'address',\n        ],\n        [balanceInput.address]\n      ).substr(2)\n    }\n\n    console.log(callData)\n\n    this.web3.eth.call(callData).then((b,s) => {\n      const balance = this.web3.utils.fromWei(this.web3.utils.toBN(b).toString(), 'ether');\n      this.setState({balance: balance})\n    });\n  }\n\n  onSendRaw(rawInput) {\n    console.log(rawInput)\n\n    this.sendTX(rawInput.callDataTX);\n  }\n\n  sendTX(callDataTX) {\n    const address = this.state.addressList[0];\n    const callDataTXFrom = {...callDataTX, from: address}\n\n    console.log(callDataTXFrom)\n\n    return this.web3.eth.sendTransaction(callDataTXFrom);\n  }\n\n  render() {\n    return (\n      <div>\n        <PatternBg />\n        <ReactTooltip />\n        <nav className=\"navbar navbar-light justify-content-between bg-white mb-3\">\n          <a className=\"navbar-brand text-monospace font-weight-bold\" href=\"#\" style={{\"letterSpacing\":\"7px\"}}>\n            <img src={logo} width=\"30\" height=\"30\" className=\"d-inline-block align-top mx-3\" alt=\"txcast logo\"/>\n            TXCast \n          </a>\n          <TXCStatus active={this.state.hasTXC ? true : false} />\n          <span className=\"navbar-text ml-3\">\n            Current block: {this.state.blockNumber}\n          </span>\n        </nav>\n        <div className=\"container-fluid px-4 mt-4\" style={{'width':'100%'}}>\n          <div className=\"row\">\n            <div\n              className=\"col-sm-5\"\n              style={{'minWidth':'500px'}}\n            >\n              <TXQueueContainer\n                account={this.state.addressList[0]}\n                queue={this.state.queue}\n                blockFormat={this.state.blockFormat}\n                blockNumber={this.state.blockNumber}\n                sendTX={this.sendTX.bind(this)}\n                onCancel={this.onCancel.bind(this)}\n                fetchData={this.fetchData.bind(this)}\n              />\n              <SendRawContainer \n                onSendRaw={this.onSendRaw.bind(this)}\n              />\n            </div>\n            <div className=\"col-sm-7\">\n              <div className=\"row\">\n                <div\n                  className=\"col-lg-7 col-12\"\n                  style={{'minWidth':'380px'}}\n                >\n                  <SchedulerContainer\n                    onSign={this.onSign.bind(this)}\n                  />\n                  <DepositContainer\n                    address={this.state.addressList[0]}\n                    onDeposit={this.onDeposit.bind(this)}\n                  />\n                </div>\n                <div\n                  className=\"col-lg-5 col-12\"\n                  style={{'minWidth':'100px'}}\n                >\n                  <TXCContainer\n                    onBuy={this.onBuy.bind(this)}\n                  />\n                  <BalanceContainer\n                    address={this.state.addressList[0]}\n                    balance={this.state.balance}\n                    onBalance={this.onBalance.bind(this)}\n                  />\n                  <NoticesContainer/>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport $ from 'jquery'; \nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}