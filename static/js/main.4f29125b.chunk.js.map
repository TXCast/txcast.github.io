{"version":3,"sources":["img/SVG/logo.svg","Utils.js","NavBar.js","withCollapse.js","TXQueueContainer.js","SchedulerContainer.js","TXCContainer.js","NoticesContainer.js","DepositContainer.js","BalanceContainer.js","SendRawContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","DropdownAppend","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","toggle","filter","v","setState","objectSpread","prevState","_this2","react_default","a","createElement","className","disabled","onClick","toggleList","type","data-toggle","onChange","e","setFilter","target","value","placeholder","id","symbols","w","toUpperCase","search","map","key","href","Component","CollapseButton","onCollapse","collapsed","ToggleBlocksButton","onToggleBlocks","data-tip","blocksFormat","Footer","PatternBg","height","width","x","y","patternUnits","points","stroke","strokeWidth","fill","TXCStatus","classColor","active","text","icon","NavBar","bind","assertThisInitialized","isOpen","hasWeb3","undefined","addressList","reactstrap_es","color","light","expand","src","logo","alt","style","letterSpacing","navbar","Utils_TXCStatus","hasTXC","nav","inNavbar","caret","right","netid","ethsUrl","ethsAddress","NavBar_AddressItem","borderTopColor","divider","blockNumber","React","AddressItem","coinbaseUrl","withCollapse","WrappedComponent","_React$Component","CollapseCard","inherits","createClass","assign","TXQueue","Utils_CollapseButton","Utils_ToggleBlocksButton","scope","posts","TXQueueContainer_TXReady","account","onCancel","sendTX","requests","_Object$assign","TXQueueContainer_TXPost","defineProperty","TXReady","address","JSON","parse","callDataTX","class","TXQueueContainer_CancelButton","amount","currency","TXPost","lib","TXQueueContainer_TimeDisplay","CancelButton","sig","dataArray","TimeDisplay","blocks","timestampDisplay","TXQueueContainer","fetchData","console","log","data","values","queue","sigs","keys","zipped","forEach","i","Date","now","toISOString","replace","split","slice","timestamp","pre","ready","TXQueueContainer_TXQueue","Scheduler","SchedulerContainer_ScheduleInput","getTime","onInputChange","onSign","inputData","ScheduleInput","Utils_DropdownAppend","reward","cursor","SchedulerContainer","time","toFixed","SchedulerContainer_Scheduler","preventDefault","newState","test","TXC","onBuy","TXCContainer_TXC","Notice","NoticesContainer_Notice","Deposit","DepositContainer_DepositInput","DepositInput","onDeposit","DepositContainer","selfDepositToggle","DepositContainer_Deposit","toggleSelfDeposit","Balance","BalanceContainer_BalanceInput","BalanceInput","onBalance","balance","BalanceContainer","BalanceContainer_Balance","SendRaw","SendRawContainer_SendRawInput","SendRawInput","stringify","onSendRaw","SendRawContainer","SendRawContainer_SendRaw","App","_this$addresses","netID","server","updateBlock","web3","Web3","givenProvider","mew","addresses","eths","eths_old","txcsale","txc","urls","dev","prod","abiTypes","withoutSignature","withSignature","window","ethereum","enable","eth","getAccounts","net","getId","callData","to","abi","encodeParameters","substr","then","b","s","parseInt","setInterval","_this3","req","url","method","axios","ans","reduce","acc","getBlock","latestBlock","number","schedulerInput","utils","toWei","toString","Math","floor","random","Number","MAX_SAFE_INTEGER","hash","_this4","hexToAscii","signer","personal","sign","signature","concat","txrequest","fromWei","appended","formData","FormData","k","set","catch","from","nonce","_this5","receipt","verified","cancelOrder","error","depositInput","balanceInput","_this6","toBN","rawInput","callDataTXFrom","sendTransaction","_data","Utils_PatternBg","dist_default","src_NavBar","src_TXQueueContainer","src_SendRawContainer","src_SchedulerContainer","src_DepositContainer","src_TXCContainer","src_BalanceContainer","src_NoticesContainer","Utils_Footer","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.4f29125b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.21f31404.svg\";","import React, { Component } from 'react';\n\nclass DropdownAppend extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {toggle: false, filter: \"\"};\n  }\n\n  setFilter(v) {\n    this.setState({...this.state, filter: v});\n  }\n\n  toggleList() {\n    this.setState(prevState => ({\n      toggle : !prevState.toggle\n    }))\n  }\n\n  render() {\n    return ( \n      <div className=\"input-group-append\">\n        <button\n          disabled={this.props.disabled}\n          className={\"btn btn-primary dropdown-toggle\" }\n          onClick={() => this.toggleList()}\n          type=\"button\"\n          data-toggle=\"dropdown\"\n        >\n          ETH\n        </button>\n        <div className={\"dropdown-menu dropdown-menu-right \" + (this.state.toggle ? \"show\" : \"\")}>\n          <input\n            className=\"filter-input pl-2 m-1\"\n            onChange={(e) => this.setFilter(e.target.value)}\n            type=\"text\"\n            placeholder=\"Filter\"\n            id=\"ticker\"\n          />\n          {this.props.symbols\n              .filter(w =>\n                w.toUpperCase().search(this.state.filter.toUpperCase()) > -1)\n              .map(v => \n                <a key={v} className=\"dropdown-item\" href=\"#\">{v}</a>)}\n            </div>\n          </div>\n    )\n  }\n}\n\nconst CollapseButton = (props) => (\n  <a onClick={() => props.onCollapse()}>\n    <i className={\"float-right fas fa-\" + (props.collapsed ? \"plus\" : \"minus\") + \"-square\"}></i>\n  </a>\n);\n\nconst ToggleBlocksButton = (props) => (\n  <a onClick={() => props.onToggleBlocks()}>\n    <i data-tip=\"Toggle block schedule or approximate UTC time.\" className={\"float-right mr-4 fas fa-toggle-\" + (props.blocksFormat ? \"on\" : \"off\")}></i>\n  </a>\n);\n\nconst Footer = () => (\n  <footer>\n    <div className=\"container\">\n      <div className=\"text-center\"><i className=\"fas fa-ellipsis-h\"></i></div>\n      <div className=\"row text-center\">\n        <div className=\"col-md-12\">\n          <ul className=\"list-inline social-buttons\">\n            <li className=\"list-inline-item\">\n              <a href=\"#\">\n                <i className=\"fab fa-twitter\"></i>\n              </a>\n            </li>\n            <li className=\"list-inline-item\">\n              <a href=\"#\">\n                <i className=\"fab fa-reddit\"></i>\n              </a>\n            </li>\n            <li className=\"list-inline-item\">\n              <a href=\"#\">\n                <i className=\"fab fa-discord\"></i>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div className=\"col-md-12 py-5\">\n          <span className=\"text-white text-monospace\">TXCast 2018</span>\n        </div>\n      </div>\n    </div>\n  </footer>\n);\n\nconst PatternBg = () => (\n  <svg height=\"100%\" width=\"100%\">\n    <defs>\n      <pattern id=\"basicPattern\" x=\"0\" y=\"0\" width=\"60\" height=\"30\" patternUnits=\"userSpaceOnUse\">\n        <polygon points=\"0,0 30,15 30,-15\"/>\n        <polygon points=\"0,0 30,15 0,30\"/>\n        <polygon points=\"0,30 30,15 30,45\"/>\n\n        <polygon points=\"60,0 30,15 30,-15\"/>\n        <polygon points=\"60,0 30,15 60,30\"/>\n        <polygon points=\"60,30 30,15 30,45\"/>\n      </pattern>\n    </defs>\n\n    <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\"\n      stroke= \"#333333\" strokeWidth=\"1\" fill=\"url(#basicPattern)\" />\n  </svg>\n);\n\nconst TXCStatus = (props) => {\n  const classColor = props.active ? \"text-success\" : \"text-danger\";\n  const text = props.active ? \" Active\" : \" Inactive\";\n  const icon = props.active ? \"check\" : \"times\";\n  return (\n    <span className=\"navbar-text\">\n      TXC Sub:<span className={classColor}>\n        {text}\n      </span>\n      <i\n        data-tip=\"Active subs are addresses that hold at least 1 TXC and do not pay the 30% fee.\"\n        className={\"ml-1 fas fa-\" + icon + \"-circle \" + classColor}\n      ></i>\n    </span>\n  );\n};\n\nexport { Footer, PatternBg, CollapseButton, ToggleBlocksButton, DropdownAppend, TXCStatus };\n","import React from 'react';\nimport { TXCStatus } from './Utils.js';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem } from 'reactstrap';\n\nclass NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  render() {\n    const hasWeb3 = this.props.addressList[0] != undefined;\n\n    return (\n      <div>\n        <Navbar className=\"text-monospace text-black\" color=\"#FFF\" light expand=\"md\">\n          <img src={this.props.logo} width=\"30\" height=\"30\" className=\"d-inline-block align-top mx-3\" alt=\"txcast logo\"/>\n          <NavbarBrand className=\"font-weight-bold\" style={{\"letterSpacing\":\"7px\"}}>\n            TXCast\n          </NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem className=\"mr-3\">\n                <NavLink\n                  data-tip=\"Under construction\"\n                  className=\"text-success\"\n                  href=\"#\"\n                >\n                  Help\n                </NavLink>\n              </NavItem>\n              <NavItem className=\"mr-3\">\n                <TXCStatus active={this.props.hasTXC ? true : false} />\n              </NavItem>\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                  Address and Blocks\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem disabled>\n                    <small>\n                      <i style={{\"color\": this.props.netid === 1 ? \"teal\": \"purple\"}} className=\"fas fa-wifi mr-2\"></i>\n                      Active TXCast Address: <a\n                        href={this.props.ethsUrl}\n                        className=\"text-monospace\">\n                        {this.props.ethsAddress}\n                      </a>\n                    </small>\n                  </DropdownItem>\n                  {this.props.addressList[0] && <AddressItem {...this.props}/>}\n                  <DropdownItem style={{\"borderTopColor\":\"gray\"}} divider/>\n                  <DropdownItem disabled>\n                    <small className=\"float-left\">\n                      <i className={\"fa\" + (hasWeb3 ? \"s\" : \"r\") + \" fa-circle text-\" + (hasWeb3 ? \"success\" : \"info\")}></i> web3 {hasWeb3 ? \"enabled\" : \"disabled\"}\n                    </small>\n                    <small className=\"float-right\">\n                      Current block: <span className=\"text-monospace\">{this.props.blockNumber}</span>\n                    </small>\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nconst AddressItem = (props) => (\n  <DropdownItem disabled>\n    <small className=\"float-right\">\n      Your address: <a\n        href={props.coinbaseUrl}\n        className=\"text-monospace\">\n        {props.addressList[0]}\n      </a>\n    </small>\n  </DropdownItem>\n);\nexport default NavBar;\n","import React, { Component } from 'react';\n\nconst withCollapse = (WrappedComponent) => {\n  return class CollapseCard extends React.Component {\n    constructor(props) {\n      super();\n      this.state = {collapsed: false}\n\n      this.onCollapse = this.onCollapse.bind(this);\n    }\n\n    onCollapse() {\n      this.setState({...this.state, collapsed: !this.state.collapsed});\n    }\n\n    render() {\n      return (\n        <div>\n          <WrappedComponent\n            {...this.props}\n            collapsed={this.state.collapsed}\n            onCollapse={this.onCollapse}\n          />\n        </div>\n      );\n    }\n  }\n}\n\nexport default withCollapse;\n","import React, { Component } from 'react';\nimport { CollapseButton, ToggleBlocksButton } from './Utils.js';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport withCollapse from './withCollapse.js';\n\nconst TXQueue = props => (\n  <div className=\"card text-white mb-3\">\n    <div className=\"card-header\">\n      <h2 className=\"text-monospace font-weight-bold\">\n        TX Queue\n        <CollapseButton\n          onCollapse={props.onCollapse}\n          collapsed={props.collapsed}\n        />\n        <ToggleBlocksButton\n          onToggleBlocks={props.onToggleBlocks}\n          blocksFormat={props.blocksFormat}\n        />\n        <i className=\"ml-3 small fas fa-question-circle\"></i>\n      </h2> \n    </div>  \n    <div className={\"card-body\" + (props.collapsed ? \" card-collapse\" : \"\")}>\n      <div className=\"table-container\">\n        <table className=\"table table-hover\">\n          <thead className=\"bg-white text-monospace\">\n            <tr className=\"text-black d-flex\" style={{'height':'30px'}}>\n              <th scope=\"col\" className=\"col-5\">Requester</th>\n              <th scope=\"col\" className=\"col-3 text-center\">\n                <i className={\"fas fa-\" + (props.blocksFormat ? \"cube\" : \"calendar\")}></i> <span>Schedule</span>\n              </th>\n              <th scope=\"col\" className=\"col-4 text-center\">Reward</th>\n            </tr>\n          </thead>\n          <tbody className=\"text-black text-monospace\">\n            {\n              props.posts.map(p =>\n                <TXReady\n                  {...p}\n                  account={props.account}\n                  onCancel={props.onCancel}\n                  sendTX={props.sendTX}\n                />\n              )\n            } {\n              props.requests.map(p =>\n                <TXPost\n                  {...p}\n                  account={props.account}\n                  blocksFormat={props.blocksFormat}\n                  account={props.account}\n                  onCancel={props.onCancel}\n                />\n              )\n            }\n          </tbody>\n        </table>  \n      </div>\n    </div>\n  </div>\n);\n\nconst TXReady = props => (\n  <tr className=\"table-light text-black d-flex hoverHide\">\n    <td className=\"col-5 pl-3\">\n      <span className=\"sendSpan\">{props.address}</span>\n      <button\n        className=\"btn btn-sm btn-success btn-block table-button\"\n        onClick={() => props.sendTX(JSON.parse(props.callDataTX))}\n      >\n        <i class=\"fas fa-paper-plane\"></i> Send this TX \n      </button>\n    </td>\n    <td className=\"col-3 text-center\">Ready</td>\n    <td className=\"col-4 text-center\">\n      {(props.account === props.address) ? <CancelButton {...props}/> : props.amount + \" \" + props.currency}\n    </td>\n  </tr>\n);\n\nconst TXPost = props => (\n  <tr className=\"table-secondary text-black d-flex hoverHide\">\n    <td className=\"col-5 pl-3\">\n      <span className=\"sendSpan\">{props.address}</span>\n      <CopyToClipboard text={(props.callDataTX)}>\n        <button\n          className=\"btn btn-sm btn-danger btn-block table-button\"\n          onClick={(e) => (0)}\n        >\n          <i class=\"fas fa-clipboard\"></i> Copy Signature \n        </button>\n      </CopyToClipboard>\n    </td>\n    <td className=\"col-3 text-center\">\n      <TimeDisplay {...props}/>\n    </td>\n    <td className=\"col-4 text-center\">\n      {(props.account === props.address) ? <CancelButton {...props}/> : props.amount + \" \" + props.currency}\n    </td>\n  </tr>\n);\n\nconst CancelButton = (props) => (\n  <span>\n    <span className=\"sendSpan\">{props.amount} {props.currency}</span>\n    <button\n      className=\"btn btn-sm btn-danger btn-block table-button\"\n      onClick={() => props.onCancel(props.sig, JSON.parse(props.dataArray)[5])}\n    >\n      <i class=\"fas fa-ban\"></i> Cancel TX\n    </button>\n  </span>\n);\n\n\nconst TimeDisplay = (props) => (<span>{props.blocksFormat ? props.blocks : props.timestampDisplay}</span>);\n\n\nclass TXQueueContainer extends Component {\n  constructor(props) {\n    super();\n\n    this.state = {\n      blocksFormat: true,\n    }\n  }\n\n  componentDidMount() {\n    this.props.fetchData();\n  }\n\n  onToggleBlocks() {\n    this.setState({blocksFormat: !this.state.blocksFormat});\n    console.log(this.state)\n  }\n\n  render() {\n    const data      = Object.values(this.props.queue);\n    const sigs      = Object.keys(this.props.queue);\n    const zipped    = data.forEach((p,i) => p.sig = sigs[i]) || data;\n    const posts     = this.state.blocksFormat ?\n      zipped :\n      zipped.forEach(p => {\n        p.timestampDisplay = new Date(Date.now() + 15*(p.blocks - this.props.blockNumber)).toISOString().replace(\"T\",\" \").split(\":\").slice(0,2);\n        p.timestamp        = new Date(Date.now() + 15*(p.blocks - this.props.blockNumber)).toISOString();\n      }) || zipped;\n\n    console.log(\"txq\", zipped)\n\n    const pre   = posts.filter(p => p.blocks < this.props.blockNumber);\n    const ready = posts.filter(p => p.blocks >= this.props.blockNumber);\n\n    return (\n      <TXQueue\n        {...this.props}\n        posts={pre}\n        requests={ready}\n        blocksFormat={this.state.blocksFormat}\n        onCancel={this.props.onCancel}\n        onToggleBlocks={this.onToggleBlocks.bind(this)}\n        sendTX={this.props.sendTX}\n      />  \n    );\n  }\n}\n\nexport default withCollapse(TXQueueContainer);\n","import React, { Component } from 'react';\nimport { CollapseButton, DropdownAppend } from './Utils.js';\nimport withCollapse from './withCollapse.js';\n\nconst Scheduler = props => (\n  <div className=\"card text-white mb-3\">\n    <div className=\"card-header\">\n      <h3 className=\"text-monospace\">\n        Post Scheduled TX\n        <CollapseButton\n          onCollapse={props.onCollapse}\n          collapsed={props.collapsed}\n        />\n        <i className=\"ml-3 small fas fa-question-circle\"></i>\n      </h3> \n    </div>  \n    <div className={\"card-body\" + (props.collapsed ? \" card-collapse\" : \"\")}>\n      <ScheduleInput\n        getTime={props.getTime}\n        onInputChange={props.onInputChange}\n        onSign={props.onSign}\n        inputData={props.inputData}\n        symbols={props.symbols}\n      />\n    </div>\n  </div>\n);\n\nconst ScheduleInput = props => (\n  <form>\n    <div className=\"form-group\">\n      <label>Receiver Address</label>\n        <input\n          onChange={(e) => props.onInputChange({...props.inputData, address: e.target.value})}\n          className=\"form-control text-monospace\"\n          id=\"recieverAddress\"\n          value={props.inputData.address}\n       />\n      <small id=\"raHelp\" className=\"form-text text-gray\">Address of the end-recipient of your transaction.</small>\n    </div>\n    <div className=\"form-group\">\n      <label>Amount</label>\n      <div className=\"input-group\">\n        <input\n          onChange={(e) => props.onInputChange({...props.inputData, amount: e.target.value})}\n          className=\"form-control text-monospace\"\n          id=\"amount\"\n          value={props.inputData.amount}\n       />\n        <DropdownAppend disabled symbols={props.symbols}/>\n      </div>\n      <small id=\"aHelp\" className=\"form-text text-gray\">Amount to send to the receiver address.</small>\n    </div>\n    <div className=\"form-group\">\n      <label>Reward</label>\n      <i data-tip=\"The reward implicitly includes the network transaction fee.\" className=\"fas fa-info-circle ml-2\"></i>\n      <div className=\"input-group\">\n        <input\n          onChange={(e) => props.onInputChange({...props.inputData, reward: e.target.value})}\n          className=\"form-control text-monospace\"\n          id=\"reward\"\n          value={props.inputData.reward}\n       />\n        <DropdownAppend disabled symbols={props.symbols}/>\n      </div>\n      <small id=\"rwHelp\" className=\"form-text text-gray\">Amount awarded to the address that fulfills your request.</small>\n    </div>\n    <div className=\"form-group\">\n      <label>Blocks</label>\n      <i data-tip=\"Blocks till your TX is available for mining. One block is mined every ~15 seconds.\" className=\"fas fa-info-circle ml-2\"></i>\n      <div className=\"input-group\">\n        <input\n          onChange={(e) => props.onInputChange({...props.inputData, blocks: e.target.value})}\n          className=\"form-control text-monospace\"\n          id=\"blocks\"\n          value={props.inputData.blocks}\n       />\n        <div className=\"input-group-append\">\n          <div style={{\"cursor\":\"help\"}} data-tip={props.getTime(props.inputData.blocks)} className=\"btn btn-primary disabled\">Blocks</div>\n        </div>\n      </div>\n      <small id=\"bHelp\" className=\"form-text text-gray\">Blocks to wait before the transaction is broadcasted.</small>\n    </div>\n\n    <button\n      onClick={(e) => props.onSign(e)}\n      className=\"btn btn-block btn-lg btn-success\"\n    >\n      Sign and Schedule\n    </button>\n  </form>\n);\n\n\nclass SchedulerContainer extends Component {\n  constructor(props){\n    super(props);\n    this.state = {address: '0x0000000000000000000000000000000000000000', amount: 0, reward: 0, blocks: 10};\n  }\n\n  getTime(blocks) {\n    const time = blocks*15/3600;\n    if(time < 2)\n      return \"Your input is equivalent to ~\" + (time*60).toFixed(2) + \" minutes.\";\n    else\n      return \"Your input is equivalent to ~\" + time.toFixed(2) + \" hours.\";\n  }\n  \n  render() {\n    return (\n      <Scheduler\n        {...this.props}\n        getTime={this.getTime.bind(this)}\n        onInputChange={this.onInputChange.bind(this)}\n        onSign={this.onSign.bind(this)}\n        inputData={this.state}\n        symbols={['ETH','ZRX','DAI','REP']}\n      />\n    );\n  }\n\n  onSign(e) {\n    e.preventDefault();\n    this.props.onSign(this.state);\n  }\n\n  onInputChange(newState) {\n    if((/(^[0-9][0-9]{0,5}$)|(^$)/.test(newState.blocks))\n      && (/(^[0-9]+\\.?[0-9]{0,18}$)|(^$)/.test(newState.reward))\n      && (/(^[0-9]+\\.?[0-9]{0,18}$)|(^$)/.test(newState.amount))\n      && (/^0x[0-9a-f]{40}$/i.test(newState.address)))\n        this.setState(newState);\n  }\n}\n\nexport default withCollapse(SchedulerContainer);\n","import React, { Component } from 'react';\nimport { CollapseButton } from './Utils.js';\nimport withCollapse from './withCollapse.js';\n\nconst TXC = props => (\n  <div className=\"card text-white mb-3\">\n    <div className=\"card-header\">\n      <h3 className=\"text-monospace\">\n        Buy TXC\n        <CollapseButton\n          onCollapse={props.onCollapse}\n          collapsed={props.collapsed}\n        />\n      </h3> \n    </div>  \n    <div className={\"card-body\" + (props.collapsed ? \" card-collapse\" : \"\")}>\n      <p className=\"lead\">TXC is the subscription badge of TXCast. Every posted transaction charges a 30% fee of the reward. Addresses with at least 1 TXC do not pay this fee. Subscriptions can be transferred to other addresses and never expire.</p>\n      <p className=\"small\">There will only be a total of 5000 TXC subscriptions, and their price is fixed at 1 TXC = 1 ETH for the duration of the sale. TXC isn't subdivisible, so the minimum amount for sale is 1 TXC. However, an address can buy as many whole units of TXC as it wishes. After the 5000 subscriptions are sold, new users will have buy the subscriptions from previous owners.</p>\n      <div className=\"form-group\">\n        <button\n          type=\"button\"\n          onClick={() => props.onBuy()}\n          className=\"btn btn-success btn-lg btn-block\"\n        >\n          Buy TXC\n        </button>\n      </div>\n    </div>\n  </div>\n);\n\nclass TXCContainer extends Component {\n  render() {\n    return(\n      <TXC\n        {...this.props}\n      />\n    );  \n  }\n}\n\nexport default withCollapse(TXCContainer);\n","import React, { Component } from 'react';\nimport { CollapseButton } from './Utils.js';\nimport withCollapse from './withCollapse.js';\n\nconst Notice = props => (\n  <div className=\"card text-white mb-3\">\n    <div className=\"card-header\">\n      <h3 className=\"text-monospace\">\n        Notices\n        <CollapseButton\n          onCollapse={props.onCollapse}\n          collapsed={props.collapsed}\n        />\n      </h3> \n    </div>  \n    <div className={\"card-body\" + (props.collapsed ? \" card-collapse\" : \"\")}>\n      <p>TXCast is in beta release. Proceed with caution and make sure to read what each sub-app does.</p>\n    </div>\n  </div>\n);\n\nclass NoticesContainer extends Component {\n  render() {\n    return (\n      <Notice {...this.props}/>\n    )\n  }\n}\n\nexport default withCollapse(NoticesContainer);\n","import React, { Component } from 'react';\nimport Toggle from 'react-toggle';\nimport { CollapseButton, DropdownAppend } from './Utils.js';\nimport withCollapse from './withCollapse.js';\n\nconst Deposit = props => (\n  <div className=\"card text-white mb-3\">\n    <div className=\"card-header\">\n      <h3 className=\"text-monospace\">\n        Ether and Token Deposits\n        <CollapseButton\n          onCollapse={props.onCollapse}\n          collapsed={props.collapsed}\n        />\n        <i className=\"ml-3 small fas fa-question-circle\"></i>\n      </h3> \n    </div>  \n    <div className={\"card-body\" + (props.collapsed ? \" card-collapse\" : \"\")}>\n      <DepositInput\n        {...props}\n      />\n    </div>\n  </div>\n);\n\nconst DepositInput = props => (\n  <form>\n    <div className=\"form-group\">\n      <label>Beneficiary's Address</label>\n      <i data-tip=\"Until release, the beneficiary is the unlocked wallet.\" className=\"fas fa-info-circle ml-2\"></i>\n\n      <div className=\"input-group\">\n        <input\n          disabled\n          className=\"form-control text-monospace bg-primary\"\n          id=\"beneficiaryAddress\"\n          value={props.address}\n        />\n      </div>\n      <small id=\"raHelp\" className=\"form-text text-gray\">Address of the beneficiary of your deposit.</small>\n    </div>\n    <div className=\"form-group\">\n      <label>Amount</label>\n      <div className=\"input-group\">\n        <input\n          onChange={(e) => props.onInputChange({...props.inputData, amount: e.target.value})}\n          className=\"form-control text-monospace\"\n          id=\"depositAmount\"\n          value={props.inputData.amount}\n        />\n        <DropdownAppend symbols={props.symbols}/>\n      </div>\n      <small id=\"aHelp\" className=\"form-text text-gray\">Amount to deposit to the beneficiary.</small>\n    </div>\n\n    <button\n      onClick={(e) => props.onDeposit(e)}\n      className=\"btn btn-block btn-lg btn-success\"\n    >\n      Deposit \n    </button>\n  </form>\n);\n\nconst selfdeposit = (props) => (\n  <label className=\"switch\">\n    <input\n      type=\"checkbox\"\n      checked={props.selfDepositToggle}\n      value={props.selfDepositToggle}\n      onChange={() => props.toggleSelfDeposit()}\n    />\n    <div className=\"slider ml-2\"></div>\n  </label>  \n);\n\nclass DepositContainer extends Component {\n  constructor(props){\n    super(props);\n    this.state = {amount: 0, selfDepositToggle: true};\n  }\n\n  render() {\n    return (\n      <Deposit\n        {...this.props}\n        onInputChange={this.onInputChange.bind(this)}\n        onDeposit={this.onDeposit.bind(this)}\n        toggleSelfDeposit={this.toggleSelfDeposit.bind(this)}\n        inputData={this.state}\n        symbols={['ETH','ZRX','DAI','REP']}\n      />\n    );\n  }\n\n  onDeposit(e) {\n    e.preventDefault();\n    this.props.onDeposit(this.state);\n  }\n\n  toggleSelfDeposit() {\n    this.setState({...this.state, selfDepositToggle: !this.state.selfDepositToggle}); \n  }\n\n  onInputChange(newState) {\n    if(/(^[0-9]+\\.?[0-9]{0,18}$)|(^$)/.test(newState.amount))\n      this.setState(newState);\n  }\n}\n\nexport default withCollapse(DepositContainer);\n","import React, { Component } from 'react';\nimport { CollapseButton, DropdownAppend } from './Utils.js';\nimport withCollapse from './withCollapse.js';\n\nconst Balance = props => (\n  <div className=\"card text-white mb-3\">\n    <div className=\"card-header\">\n      <h3 className=\"text-monospace\">\n        Balances\n        <CollapseButton\n          onCollapse={props.onCollapse}\n          collapsed={props.collapsed}\n        />\n      </h3>\n    </div>  \n    <div className={\"card-body\" + (props.collapsed ? \" card-collapse\" : \"\")}>\n      <BalanceInput\n        {...props}\n      />\n    </div>\n  </div>\n);\n\nconst BalanceInput = props => (\n  <form>\n    <div className=\"form-group\">\n      <label>Address</label>\n      <div className=\"input-group\">\n        <input\n          onChange={(e) => props.onInputChange({...props.inputData, address: e.target.value})}\n          className=\"form-control text-monospace\"\n          id=\"address\"\n          value={props.inputData.address}\n        />\n        <div className=\"input-group-append\">\n          <button\n            onClick={(e) => props.onBalance(e)}\n            className=\"btn btn-primary\"\n          >\n            Check\n          </button>\n        </div>\n        <small id=\"raHelp\" className=\"form-text text-gray\"></small>\n      </div>\n    </div>\n    <div className=\"form-group\">\n      <h3>ETH: <span className=\"float-right\">{props.balance}</span></h3>\n    </div>\n  </form>\n);\n\nclass BalanceContainer extends Component {\n  constructor(props){\n    super(props);\n    this.state = {address: '0x0000000000000000000000000000000000000000', amount: 0};\n  }\n\n  render() {\n    return (\n      <Balance\n        {...this.props}\n        onInputChange={this.onInputChange.bind(this)}\n        onBalance={this.onBalance.bind(this)}\n        inputData={this.state}\n        symbols={['ETH','ZRX','DAI','REP']}\n      />\n    );\n  }\n\n  onBalance(e) {\n    e.preventDefault();\n    this.props.onBalance(this.state);\n  }\n\n  onInputChange(newState) {\n    if(/^0x[0-9a-f]{40}$/i.test(newState.address))\n      this.setState(newState);\n  }\n}\n\nexport default withCollapse(BalanceContainer);\n","import React, { Component } from 'react';\nimport { CollapseButton, DropdownAppend } from './Utils.js';\nimport withCollapse from './withCollapse.js';\n\nconst SendRaw = props => (\n  <div className=\"card text-white mb-3\">\n    <div className=\"card-header\">\n      <h3 className=\"text-monospace\">\n        Broadcast TX\n        <CollapseButton\n          onCollapse={props.onCollapse}\n          collapsed={props.collapsed}\n        />\n      </h3>\n    </div>  \n    <div className={\"card-body\" + (props.collapsed ? \" card-collapse\" : \"\")}>\n      <SendRawInput\n        {...props}\n      />\n    </div>\n  </div>\n);\n\nconst SendRawInput = props => (\n  <form>\n    <div className=\"form-group\">\n      <label>TX Data</label>\n      <i data-tip=\"These data can be copied to the clipboard from the TX Queue sub-app.\" className=\"fas fa-info-circle ml-2\"></i>\n      <div className=\"input-group\">\n        <input\n          onChange={(e) => props.onInputChange({callDataTX: JSON.parse(e.target.value)})}\n          className=\"form-control text-monospace\"\n          id=\"address\"\n          value={JSON.stringify(props.inputData.callDataTX)}\n        />\n        <div className=\"input-group-append\">\n          <button\n            onClick={(e) => props.onSendRaw(e)}\n            className=\"btn btn-primary\"\n          >\n           Broadcast TX \n          </button>\n        </div>\n        <small id=\"raHelp\" className=\"form-text text-gray\"></small>\n      </div>\n    </div>\n  </form>\n);\n\nclass SendRawContainer extends Component {\n  constructor(props){\n    super(props);\n    this.state = {callDataTX: {}};\n  }\n\n  render() {\n    return (\n      <SendRaw\n        {...this.props}\n        onInputChange={this.onInputChange.bind(this)}\n        onSendRaw={this.onSendRaw.bind(this)}\n        inputData={this.state}\n        symbols={['ETH','ZRX','DAI','REP']}\n      />\n    );\n  }\n\n  onSendRaw(e) {\n    e.preventDefault();\n    this.props.onSendRaw(this.state);\n  }\n\n  onInputChange(newState) {\n    this.setState(newState);\n  }\n}\n\nexport default withCollapse(SendRawContainer);\n","import React, { Component } from 'react';\nimport { Footer, PatternBg, TXCStatus } from './Utils.js';\nimport Web3 from 'web3';\nimport ReactTooltip from 'react-tooltip';\nimport axios from 'axios';\nimport NavBar from './NavBar.js';\n\nimport logo from './img/SVG/logo.svg';\nimport './App.css';\n\nimport TXQueueContainer from './TXQueueContainer.js';\nimport SchedulerContainer from './SchedulerContainer.js';\nimport TXCContainer from './TXCContainer.js';\nimport NoticesContainer from './NoticesContainer.js';\nimport DepositContainer from './DepositContainer.js';\nimport BalanceContainer from './BalanceContainer.js';\nimport SendRawContainer from './SendRawContainer.js';\n\n\nclass App extends Component {\n  constructor(props){\n    super();\n\n    this.state = {\n      addressList : [],\n      queue : {},\n      blockNumber : 0,\n      balance: 0,\n      netID: 1,\n      hasTXC: false,\n      blocksFormat: true,\n      server: 'prod',\n    }\n\n    this.updateBlock = this.updateBlock.bind(this);\n    this.web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n\n    this.mew = \"https://www.myetherwallet.com/signmsg.html\";\n\n    this.addresses = {\n      [42]: {\n        eths: \"0xa0475d202be30019e56306cc08f8998887135258\",\n        eths_old: \"0xe49bb13f1e57de8364586bbb82bf79d0c8aac074\",\n        txcsale: \"0x2ffbee1b7eda9d6187f4f875899c9f8f28d927ed\",\n        txc: \"0x12C942fDbE9981E68DC153CC92dA2e2c301F5a9A\",\n      },\n      [1]: {\n        eths: \"0xf99E87098f4F1C8d8bd6a3df7181B3acdc21848A\",\n        txcsale: \"0xa4b01a89162141c58505ea43db2d3bda71a325c2\",\n        txc: \"0x67e35c41060a988f59e2bcb2e0f09b6978fb6614\",\n      }\n    };\n\n    this.urls = {\n      'dev': \"http://localhost:5000\",\n      'prod': \"https://api.txcast.io\",\n    }\n\n    this.abiTypes = {\n      eths: {\n        withoutSignature: [\n          'address', // target\n          'uint256', // amount\n          'uint256', // reward\n          'bool',    // byBlock\n          'uint256', // condition\n          'uint256', // nonce\n          'uint256', // netID\n        ],\n        withSignature: [\n          'address', // target\n          'uint256', // amount\n          'uint256', // reward\n          'bool',    // byBlock\n          'uint256', // condition\n          'uint256', // nonce\n          'uint256', // netID\n          'bytes',   // signature \n        ],\n      }\n    }\n\n  }\n\n  async componentWillMount() {\n    try {\n    await window.ethereum.enable();\n\n    const a = await this.web3.eth.getAccounts();\n    const id = await this.web3.eth.net.getId();\n\n    await this.setState({addressList: a, netID: id});\n\n    const address = a[0];\n    const callData = {\n      to: this.addresses[this.state.netID].txc,\n      data:'0x70a08231' + this.web3.eth.abi.encodeParameters(\n        [\n          'address',\n        ],\n        [address]\n      ).substr(2)\n    }\n\n    console.log(callData)\n\n    this.web3.eth.call(callData).then((b,s) => {\n      this.setState({hasTXC: parseInt(b) > 0});\n    });\n\n      setInterval(this.updateBlock, 5000);\n    } catch (e) {\n      console.log(\"no web3\")\n    }\n  }\n\n  fetchData() {\n    console.log(this.state)\n    const req = {\n      url: this.urls[this.state.server] + '/signature',\n      method: 'GET',\n    };\n\n    axios(req).then(ans => {\n      const queue = ans.data.reduce((acc, v) => { acc[v[0]] = v[1]; return acc; }, {});\n      this.setState({queue: queue});\n    });\n\n  }\n\n  async updateBlock() {\n    const latestBlock = await this.web3.eth.getBlock('latest');\n    if(latestBlock !== null && /[0-9]*/.test(latestBlock)) this.setState({blockNumber: latestBlock.number});\n  }\n\n  async onSign(schedulerInput) {\n    let latestBlock = await this.web3.eth.getBlock('latest');\n    const dataArray = [\n      schedulerInput.address,\n      this.web3.utils.toWei(schedulerInput.amount.toString(),'ether'),\n      this.web3.utils.toWei(schedulerInput.reward.toString(),'ether'),\n      true,\n      parseInt(schedulerInput.blocks) + parseInt(latestBlock.number),\n      Math.floor(Math.random() * Number.MAX_SAFE_INTEGER),\n      this.state.netID,\n    ];\n\n    console.log(dataArray);\n\n    const callData = {\n      to: this.addresses[this.state.netID].eths,\n      data:'0x889c3912' + this.web3.eth.abi.encodeParameters(this.abiTypes.eths.withoutSignature, dataArray).substr(2),\n    }\n\n    this.web3.eth.call(callData).then(hash => {\n      console.log(hash);\n      console.log(this.web3.utils.hexToAscii(hash));\n\n      const signer = this.state.addressList[0];\n      this.web3.eth.personal.sign(hash, signer)\n        .then(signature => {\n          console.log([...dataArray, signature].toString())\n\n          const callDataTX = {\n            to: this.addresses[this.state.netID].eths,\n            data:'0x392482d1' + this.web3.eth.abi.encodeParameters(this.abiTypes.eths.withSignature, [...dataArray, signature]).substr(2),\n          }\n\n          const txrequest = {\n            currency: 'ETH',\n            amount: this.web3.utils.fromWei(dataArray[2].toString(), 'ether'),\n            blocks: dataArray[4],\n            address: signer, \n            dataArray: JSON.stringify(dataArray),\n            callDataTX: JSON.stringify(callDataTX),\n          }\n\n          const appended = this.state.queue;\n          appended[signature] = txrequest;\n\n          this.setState({\n            queue: appended,\n          });\n\n          console.log(txrequest)\n\n          const formData = new FormData();\n          Object.keys(txrequest).forEach(k => {\n            formData.set(k,txrequest[k]);\n          });\n\n          const req = {\n            url: this.urls[this.state.server] + '/signature/' + signature,\n            data: formData,\n            method: 'PUT',\n          };\n\n          axios(req).then(console.log).catch(console.log)\n        });\n    });\n  }\n\n  onBuy() {\n    const address = this.state.addressList[0];\n    const amount = this.web3.utils.toWei(\"1\",'ether');\n\n    const callDataTX = {\n      from: address,\n      value: amount, \n      to: this.addresses[this.state.netID].txcsale,\n      data:'0xec8ac4d80' + this.web3.eth.abi.encodeParameters(\n        [\n          'address',\n        ],\n        [address],\n      ).substr(2)\n    }\n\n    this.sendTX(callDataTX);\n  }\n\n  onCancel(signature, nonce) {\n    const callDataTX = {\n      to: this.addresses[this.state.netID].eths,\n      data:'0x8e7baff6' + this.web3.eth.abi.encodeParameters(\n        [\n          'uint',\n        ],\n        [ nonce ],\n      ).substr(2)\n    }\n\n    this.sendTX(callDataTX).then(receipt => {\n      this.web3.eth.personal.sign(\"Cancel TX \" + nonce, this.state.addressList[0]).then(verified => {\n        const cancelOrder = {\n          signature: signature,\n          nonce: nonce, \n          verified: verified,\n        }\n\n        console.log(\"cancel\",cancelOrder)\n\n        const formData = new FormData();\n        Object.keys(cancelOrder).forEach(k => {\n          formData.set(k, cancelOrder[k]);\n        });\n\n        const req = {\n          url: this.urls[this.state.server] + '/signature/' + signature,\n          data: formData,\n          method: 'DELETE',\n        };\n\n        axios(req)\n          .then(this.fetchData.bind(this))\n          .catch(console.error)\n      });\n    });\n  }\n\n  onDeposit(depositInput) {\n    const address = this.state.addressList[0];\n    const amount = this.web3.utils.toWei(depositInput.amount.toString(),'ether');\n\n    const callDataTX = {\n      from: address,\n      value: amount, \n      to: this.addresses[this.state.netID].eths,\n      data:'0xf340fa01' + this.web3.eth.abi.encodeParameters(\n        [\n          'address',\n        ],\n        [address],\n      ).substr(2)\n    }\n\n    this.sendTX(callDataTX).then(console.log);\n  }\n\n  onBalance(balanceInput) {\n    const callData = {\n      to: this.addresses[this.state.netID].eths,\n      data:'0x70a08231' + this.web3.eth.abi.encodeParameters(\n        [\n          'address',\n        ],\n        [balanceInput.address]\n      ).substr(2)\n    }\n\n    console.log(callData)\n\n    this.web3.eth.call(callData).then((b,s) => {\n      const balance = this.web3.utils.fromWei(this.web3.utils.toBN(b).toString(), 'ether');\n      this.setState({balance: balance})\n    });\n  }\n\n  onSendRaw(rawInput) {\n    console.log(rawInput)\n\n    this.sendTX(rawInput.callDataTX);\n  }\n\n  sendTX(callDataTX) {\n    const address = this.state.addressList[0];\n    const callDataTXFrom = {...callDataTX, from: address}\n\n    console.log(callDataTXFrom)\n\n    return this.web3.eth.sendTransaction(callDataTXFrom);\n  }\n\n  render() {\n    const netid = this.state.netID;\n    const ethsAddress = this.addresses[netid].eths;\n    const ethsUrl = \"https://\" + (netid === 1 ? \"www\" : \"kovan\") + \".etherscan.io/address/\" + ethsAddress;\n    const coinbaseUrl = \"https://\" + (netid === 1 ? \"www\" : \"kovan\") + \".etherscan.io/address/\" + this.state.addressList[0];\n\n    const data = {netid: netid, ethsAddress: ethsAddress, ethsAddress, ethsUrl: ethsUrl, coinbaseUrl: coinbaseUrl}\n\n    return (\n      <div>\n        <PatternBg />\n        <ReactTooltip />\n        <NavBar logo={logo} {...this.state} {...data}/>\n        <div className=\"container-fluid px-4 mt-4\">\n          <div className=\"row\">\n            <div\n              className=\"col-md-5\"\n            >\n              <TXQueueContainer\n                account={this.state.addressList[0]}\n                queue={this.state.queue}\n                blockNumber={this.state.blockNumber}\n                sendTX={this.sendTX.bind(this)}\n                onCancel={this.onCancel.bind(this)}\n                fetchData={this.fetchData.bind(this)}\n              />\n              <SendRawContainer \n                onSendRaw={this.onSendRaw.bind(this)}\n              />\n            </div>\n            <div className=\"col-md-7\">\n              <div className=\"row\">\n                <div\n                  className=\"col-md-7 col-12\"\n                >\n                  <SchedulerContainer\n                    onSign={this.onSign.bind(this)}\n                  />\n                  <DepositContainer\n                    address={this.state.addressList[0]}\n                    onDeposit={this.onDeposit.bind(this)}\n                  />\n                </div>\n                <div\n                  className=\"col-md-5 col-12\"\n                >\n                  <TXCContainer\n                    onBuy={this.onBuy.bind(this)}\n                  />\n                  <BalanceContainer\n                    address={this.state.addressList[0]}\n                    balance={this.state.balance}\n                    onBalance={this.onBalance.bind(this)}\n                  />\n                  <NoticesContainer/>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport $ from 'jquery'; \nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}