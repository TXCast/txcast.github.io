{"version":3,"sources":["img/SVG/logo.svg","Utils.js","NavBar.js","Modals.js","web3handlers.js","withCollapse.js","TXQueueContainer.js","SchedulerContainer.js","TXCContainer.js","NoticesContainer.js","DepositContainer.js","BalanceContainer.js","SendRawContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ActionModal","props","react_default","a","createElement","reactstrap_es","isOpen","modal","toggle","innerHTML","body","params","footer","action","DropdownAppend","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setState","prevState","state","filter","v","objectSpread","_this2","className","caret","currency","symbols","w","toUpperCase","search","map","key","href","onClick","setCurrency","Component","CollapseButton","onCollapse","collapsed","ToggleBlocksButton","onToggleBlocks","data-tip","blocksFormat","Footer","target","PatternBg","height","width","id","x","y","patternUnits","points","stroke","strokeWidth","fill","TXCStatus","classColor","active","text","icon","NavBar","bind","assertThisInitialized","hasWeb3","undefined","addressList","color","light","expand","src","logo","alt","style","letterSpacing","navbar","Utils_TXCStatus","hasTXC","nav","inNavbar","right","disabled","netid","ethsUrl","ethsAddress","NavBar_AddressItem","borderTopColor","divider","blockNumber","React","AddressItem","coinbaseUrl","Modals","signData","_ref","total","Modals_this","web3","utils","toBN","dataArray","reward","add","amount","hasBalance","lte","balance","address","schedule","hexToAscii","hash","fromWei","toString","msg","note","_ref2","signer","method","cancelData","_ref3","signature","nonce","_callee2","schedulerInput","latestBlock","callData","callDataBalance","_this5","regenerator_default","wrap","_context2","prev","next","eth","getBlock","sent","toWei","byBlocks","parseInt","blocks","number","Math","floor","random","Number","MAX_SAFE_INTEGER","netID","USD","to","addresses","eths","data","abi","encodeParameters","abiTypes","withoutSignature","values","substr","then","b","s","signTX","stop","withCollapse","WrappedComponent","_React$Component","CollapseCard","inherits","createClass","value","assign","TXQueue","Utils_CollapseButton","Utils_ToggleBlocksButton","data-multiline","scope","posts","TXQueueContainer_TXReady","sig","account","onCancel","onFulfill","requests","_Object$assign","TXQueueContainer_TXPost","defineProperty","TXReady","TXQueueContainer_CancelButton","TXPost","lib","JSON","stringify","e","TXQueueContainer_TimeDisplay","CancelButton","TimeDisplay","timestampDisplay","TXQueueContainer","fetchData","console","log","queue","sigs","keys","zipped","forEach","i","Date","now","toISOString","replace","split","slice","timestamp","pre","ready","TXQueueContainer_TXQueue","Scheduler","SchedulerContainer_ScheduleInput","getTime","onInputChange","onSign","inputData","ScheduleInput","onFocus","select","onChange","Utils_DropdownAppend","cursor","SchedulerContainer","SchedulerContainer_Scheduler","c","time","toFixed","preventDefault","newState","test","TXC","type","onBuy","TXCContainer_TXC","Notice","NoticesContainer_Notice","Deposit","DepositContainer_DepositInput","DepositInput","onDeposit","DepositContainer","selfDepositToggle","DepositContainer_Deposit","toggleSelfDeposit","Balance","BalanceContainer_BalanceInput","BalanceInput","onBalance","parseFloat","BalanceContainer","BalanceContainer_Balance","SendRaw","SendRawContainer_SendRawInput","SendRawInput","callDataTX","parse","onSendRaw","SendRawContainer","SendRawContainer_SendRaw","App","_this$addresses","server","Web3","givenProvider","mew","eths_old","txcsale","txc","urls","dev","devrem","prod","withSignature","updateBlock","cancelTX","_this4","sendTX","personal","sign","verified","cancelOrder","formData","FormData","k","set","req","url","axios","catch","error","_this3","txrequest","response","appended","message","finally","callDataTXFrom","from","sendTransaction","window","ethereum","enable","getAccounts","net","getId","currentProvider","publicConfigStore","on","update","toChecksumAddress","selectedAddress","networkVersion","setInterval","_context","t0","ans","reduce","acc","Utils_ActionModal","Utils_PatternBg","dist_default","src_NavBar","src_TXQueueContainer","toConsumableArray","src_SendRawContainer","rawInput","src_SchedulerContainer","_x","_onSign","apply","arguments","src_TXCContainer","src_DepositContainer","depositInput","src_BalanceContainer","balanceInput","src_NoticesContainer","Utils_Footer","Boolean","location","hostname","match","WebFont","load","google","families","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.bfdc039f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.21f31404.svg\";","import React, { Component } from 'react';\nimport { Modal } from 'reactstrap';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nconst ActionModal = (props) => (\n  <Modal isOpen={props.modal} toggle={props.toggle}>\n    {props.innerHTML.body({params:props.params})}\n    {props.innerHTML.footer({toggle:props.toggle, action:props.action, params:props.params})}\n  </Modal>    \n);\n\nclass DropdownAppend extends Component {\n  constructor(props){\n    super(props);\n    this.state = {toggle: false, filter: \"\"};\n  }\n\n  setFilter(v) {\n    this.setState({...this.state, filter: v});\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({\n      toggle : !prevState.toggle\n    }))\n  }\n\n  render() {\n    return ( \n      <Dropdown className=\"input-group-append\" isOpen={this.state.toggle} toggle={this.toggle}>\n        <DropdownToggle caret className=\"btn-secondary dropdown-toggle\">\n          {this.props.currency}\n        </DropdownToggle>\n        <DropdownMenu>\n          {this.props.symbols\n              .filter(w =>\n                w.toUpperCase().search(this.state.filter.toUpperCase()) > -1)\n              .map(v => \n                <DropdownItem\n                  key={v}\n                  href=\"#\"\n                  onClick={() => this.props.setCurrency(v)}\n                >\n                  {v}\n                </DropdownItem>)}\n        </DropdownMenu>\n      </Dropdown>\n    )\n  }\n}\n\nconst CollapseButton = (props) => (\n  <a onClick={() => props.onCollapse()}>\n    <i className={\"float-right fas fa-\" + (props.collapsed ? \"plus\" : \"minus\") + \"-square\"}></i>\n  </a>\n);\n\nconst ToggleBlocksButton = (props) => (\n  <a onClick={() => props.onToggleBlocks()}>\n    <i data-tip=\"Toggle block schedule or approximate UTC time.\" className={\"float-right mr-4 fas fa-toggle-\" + (props.blocksFormat ? \"on\" : \"off\")}></i>\n  </a>\n);\n\nconst Footer = () => (\n  <footer>\n    <div className=\"container\">\n      <div className=\"text-center\"><i className=\"fas fa-ellipsis-h\"></i></div>\n      <div className=\"row text-center\">\n        <div className=\"col-md-12\">\n          <ul className=\"list-inline social-buttons\">\n            <li className=\"list-inline-item\">\n              <a href=\"https://discord.gg/Z2bMx5V\" target=\"_blank\">\n                <i className=\"fab fa-discord\"></i>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div className=\"col-md-12 py-5\">\n          <span className=\"text-white text-monospace\">TXCast 2018</span>\n        </div>\n      </div>\n    </div>\n  </footer>\n);\n\nconst PatternBg = () => (\n  <svg height=\"100%\" width=\"100%\">\n    <defs>\n      <pattern id=\"basicPattern\" x=\"0\" y=\"0\" width=\"60\" height=\"30\" patternUnits=\"userSpaceOnUse\">\n        <polygon points=\"0,0 30,15 30,-15\"/>\n        <polygon points=\"0,0 30,15 0,30\"/>\n        <polygon points=\"0,30 30,15 30,45\"/>\n\n        <polygon points=\"60,0 30,15 30,-15\"/>\n        <polygon points=\"60,0 30,15 60,30\"/>\n        <polygon points=\"60,30 30,15 30,45\"/>\n      </pattern>\n    </defs>\n\n    <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\"\n      stroke= \"#333333\" strokeWidth=\"1\" fill=\"url(#basicPattern)\" />\n  </svg>\n);\n\nconst TXCStatus = (props) => {\n  const classColor = props.active ? \"text-secondary\" : \"text-danger\";\n  const text = props.active ? \" Active\" : \" Inactive\";\n  const icon = props.active ? \"check\" : \"times\";\n  return (\n    <span className=\"navbar-text\">\n      TXC Sub:<span className={classColor}>\n        {text}\n      </span>\n      <i\n        data-tip=\"Active subs are addresses that hold at least 1 TXC and do not pay the 30% fee.\"\n        className={\"ml-1 fas fa-\" + icon + \"-circle \" + classColor}\n      ></i>\n    </span>\n  );\n};\n\nexport { Footer, PatternBg, CollapseButton, ToggleBlocksButton, DropdownAppend, TXCStatus, ActionModal};\n","import React from 'react';\nimport { TXCStatus } from './Utils.js';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem } from 'reactstrap';\n\nclass NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  render() {\n    const hasWeb3 = this.props.addressList[0] != undefined;\n\n    return (\n      <div>\n        <Navbar className=\"text-monospace bg-white text-black\" color=\"#FFF\" light expand=\"md\">\n          <img src={this.props.logo} width=\"30\" height=\"30\" className=\"d-inline-block align-top mx-3\" alt=\"txcast logo\"/>\n          <NavbarBrand className=\"font-weight-bold\" style={{\"letterSpacing\":\"7px\"}}>\n            TXCast\n          </NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem className=\"mr-3\">\n                <NavLink\n                  data-tip=\"Under construction\"\n                  className=\"text-secondary\"\n                >\n                  Help\n                </NavLink>\n              </NavItem>\n              <NavItem className=\"mr-3\">\n                <TXCStatus active={this.props.hasTXC ? true : false} />\n              </NavItem>\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                  Address and Blocks\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem disabled>\n                    <small className=\"float-right hex-address\">\n                      <i style={{\"color\": this.props.netid === \"1\" ? \"teal\": \"purple\"}} className=\"fas fa-wifi mr-2\"></i>\n                      Active TXCast Address: <a\n                        href={this.props.ethsUrl}\n                        target=\"_blank\"\n                        className=\"text-monospace\">\n                        {this.props.ethsAddress}\n                      </a>\n                    </small>\n                  </DropdownItem>\n                  {this.props.addressList[0] && <AddressItem {...this.props}/>}\n                  <DropdownItem style={{\"borderTopColor\":\"gray\"}} divider/>\n                  <DropdownItem disabled>\n                    <small className=\"float-left\">\n                      <i className={\"fa\" + (hasWeb3 ? \"s\" : \"r\") + \" fa-circle text-\" + (hasWeb3 ? \"primary\" : \"danger\")}></i> web3 {hasWeb3 ? \"enabled\" : \"disabled\"}\n                    </small>\n                    <small className=\"float-right\">\n                      Current block: <span className=\"text-monospace\">{this.props.blockNumber}</span>\n                    </small>\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nconst AddressItem = (props) => (\n  <DropdownItem disabled>\n    <small className=\"float-right hex-address\">\n      Your address: <a\n        href={props.coinbaseUrl}\n        target=\"_blank\"\n        className=\"text-monospace\">\n        {props.addressList[0]}\n      </a>\n    </small>\n  </DropdownItem>\n);\nexport default NavBar;\n","import React from 'react';\nimport { Modal, ModalBody, ModalFooter } from 'reactstrap';\n\nconst note = (props, hasBalance) => {\n  const msg = props.currency == 'USD' ? \"You are scheduling a TX in USD prices. By the time it is fulfilled your available balance may not be enough to cover the request.\"\n    : \"The total amount you're requesting is higher than your balance. Make sure to deposit enough ETH to cover the TX amount and reward.\";\n  return (\n    <span><br/>{!hasBalance &&\n        <small className=\"text-danger float-right\"><i className=\"fas fa-exclamation-triangle\"></i>\n          {msg}\n        </small>}\n      </span>\n  )\n}\n\nexport default {\n  signData: {\n    body: ({params}) => {\n      const total = this.web3.utils.toBN(params.dataArray.reward).add(this.web3.utils.toBN(params.dataArray.amount));\n      const hasBalance = total.lte(this.web3.utils.toBN(params.balance));\n\n      return (\n        <ModalBody>\n          <h2 className=\"text-black\">TX Request</h2>\n          <p>You are about to sign a TX request. This can still be cancelled before someone broadcasts it.</p>\n          <h5 className=\"text-black\">Your input data is the following:</h5>\n          <p>\n            Receiver:<small className=\"text-monospace float-right\"> {params.dataArray.address}</small>\n            <br/>Schedule: <span className=\"float-right\">Block {params.dataArray.schedule}</span>\n          <br/>TX hash: <span className=\"text-monospace float-right\">{this.web3.utils.hexToAscii(params.hash)}</span></p>\n        <hr/>\n        <p>Amount: <span className=\"float-right\">{this.web3.utils.fromWei(params.dataArray.amount,'ether')} {params.currency}</span>\n        <br/>Reward: <span className=\"float-right\">{this.web3.utils.fromWei(params.dataArray.reward,'ether')} {params.currency}</span></p>\n      <hr/>\n      <p>Total TX request: <span className=\"float-right\">{this.web3.utils.fromWei(total.toString(),'ether')} {params.currency}</span>\n      <br/>Current balance: <span className={\"float-right text-\" + (hasBalance ? \"success\" : \"danger\")}>{this.web3.utils.fromWei(params.balance.toString(),'ether')} ETH</span>\n      {note(params, hasBalance)}</p>\n        </ModalBody>\n      )},\n    footer: ({toggle, action, params}) => (\n      <ModalFooter>\n        <button className=\"btn btn-info\" onClick={toggle}>Back</button>\n      <button className=\"btn btn-success\" onClick={() => action(params.hash, params.signer, params.dataArray, params.method)}>Sign TX</button>{' '}\n    </ModalFooter>\n    ),\n  },\n\n  cancelData: {\n    body: () => (\n      <ModalBody>\n        <h2 className=\"text-black\">TX Cancellation</h2>\n        <p>Cancelling a TX has two steps: Cancelling the request on the blockchain and removing the request from the TXCast server.</p>\n        <p>You will be prompted for two signatures:\n          <br/>one with a 0.001 ETH cost to cancel on the blockchain,\n          <br/>and one with no cost to remove the request.</p>\n        <p>It is <b>absolutely necessary</b> to send the 0.001 ETH transaction,\n          since that is the only 100% guarantee that your request is fully invalidated. The zero cost transaction will remove your request from the servers, but if someone has a copy of your signature, it can still be used.</p>\n      </ModalBody>\n    ),\n    footer: ({toggle, action, params}) => (\n      <ModalFooter>\n        <button className=\"btn btn-info\" onClick={toggle}>Back</button>\n      <button className=\"btn btn-danger\" onClick={() => action(params.signature, params.nonce)}>Cancel TX</button>{' '}\n    </ModalFooter>\n    ),\n  }\n}\n","import axios from 'axios';\nimport values from 'lodash/values';\n\nexport async function updateBlock() {\n  const latestBlock = await this.web3.eth.getBlock('latest');\n  if(latestBlock !== null && /[0-9]*/.test(latestBlock)) this.setState({blockNumber: latestBlock.number});\n}\n\nexport async function onSign(schedulerInput) {\n  let latestBlock = await this.web3.eth.getBlock('latest');\n  const dataArray = {\n    address: schedulerInput.address,\n    amount: this.web3.utils.toWei(schedulerInput.amount.toString(),'ether'),\n    reward: this.web3.utils.toWei(schedulerInput.reward.toString(),'ether'),\n    byBlocks: true,\n    schedule: parseInt(schedulerInput.blocks) + parseInt(latestBlock.number),\n    nonce: Math.floor(Math.random() * Number.MAX_SAFE_INTEGER),\n    netID: this.state.netID,\n    USD: schedulerInput.currency == 'USD',\n  };\n\n  const method = schedulerInput.currency == 'USD' ? '0x51004bf5' : '0x392482d1';\n\n  const callData = {\n    to: this.addresses[this.state.netID].eths,\n    data:'0x03c14526' + this.web3.eth.abi.encodeParameters(this.abiTypes.eths.withoutSignature, values(dataArray)).substr(2),\n  }\n\n  const hash = await this.web3.eth.call(callData)\n  const signer = this.state.addressList[0];\n\n  const callDataBalance = {\n    to: this.addresses[this.state.netID].eths,\n    data:'0x70a08231' + this.web3.eth.abi.encodeParameters(\n      [\n        'address',\n      ],\n      [signer]\n    ).substr(2)\n  }\n\n  this.web3.eth.call(callDataBalance).then((b,s) => {\n    const balance = this.web3.utils.toBN(b).toString();\n\n    this.setState({\n      modal: true,\n      params: {hash, signer, dataArray, balance, currency:schedulerInput.currency, method},\n      innerHTML: this.Modals.signData,\n      action: this.signTX\n    });\n  });\n}\n\nexport function onBuy() {\n  const address = this.state.addressList[0];\n  const amount = this.web3.utils.toWei(\"1\",'ether');\n\n  const callDataTX = {\n    from: address,\n    value: amount, \n    to: this.addresses[this.state.netID].txcsale,\n    data:'0xec8ac4d80' + this.web3.eth.abi.encodeParameters(\n      [\n        'address',\n      ],\n      [address],\n    ).substr(2)\n  }\n\n  this.sendTX(callDataTX);\n}\n\nexport function onCancel(signature, nonce) {\n  this.setState({\n    modal: true,\n    params: {signature, nonce},\n    innerHTML: this.Modals.cancelData,\n    action: this.cancelTX\n  });\n}\n\nexport function onDeposit(depositInput) {\n  const address = this.state.addressList[0];\n  const amount = this.web3.utils.toWei(depositInput.amount.toString(),'ether');\n\n  const callDataTX = {\n    from: address,\n    value: amount, \n    to: this.addresses[this.state.netID].eths,\n    data:'0xf340fa01' + this.web3.eth.abi.encodeParameters(\n      [\n        'address',\n      ],\n      [address],\n    ).substr(2)\n  }\n\n  this.sendTX(callDataTX).then(console.log);\n}\n\nexport function onBalance(balanceInput) {\n  const callData = {\n    to: this.addresses[this.state.netID].eths,\n    data:'0x70a08231' + this.web3.eth.abi.encodeParameters(\n      [\n        'address',\n      ],\n      [balanceInput.address]\n    ).substr(2)\n  }\n\n  this.web3.eth.call(callData).then((b,s) => {\n    const balance = this.web3.utils.fromWei(this.web3.utils.toBN(b).toString(), 'ether');\n    this.setState({balance: balance})\n  });\n}\n\nexport function onSendRaw(rawInput) {\n  const callData = (({address,amount,reward,byBlocks,schedule,nonce,netID,sig}) =>\n    ({address,amount,reward,byBlocks,schedule,nonce,netID,sig})) (rawInput.callDataTX);\n\n  const method = rawInput.callDataTX.method;\n    \n  const callDataTX = {\n    to: this.addresses[this.state.netID].eths,\n    data: method + this.web3.eth.abi.encodeParameters(\n      this.abiTypes.eths.withSignature,\n      [...values(callData)]\n    ).substr(2),\n  }\n\n  this.sendTX(callDataTX);\n}\n\nexport function onFulfill(dataArray) {\n  const callData = (({address,amount,reward,byBlocks,schedule,nonce,netID,sig}) =>\n    ({address,amount,reward,byBlocks,schedule,nonce,netID,sig})) (dataArray);\n\n  const method = dataArray.method;\n\n  const callDataTX = {\n    to: this.addresses[this.state.netID].eths,\n    data: method + this.web3.eth.abi.encodeParameters(\n      this.abiTypes.eths.withSignature,\n      [...values(callData)]\n    ).substr(2),\n  }\n\n  this.sendTX(callDataTX).then(() => {\n    this.fetchData();\n  });\n}\n\nexport function sendTX(callDataTX) {\n  const address = this.state.addressList[0];\n\n  const callDataTXFrom = {...callDataTX, from: address}\n\n  console.log(callDataTXFrom)\n\n  return this.web3.eth.sendTransaction(callDataTXFrom);\n}\n\nexport function signTX(hash, signer, dataArray, method) {\n  this.toggle();\n\n  this.web3.eth.personal.sign(hash, signer)\n    .then(signature => {\n      const txrequest = {\n        method: method,\n        signer: signer,\n        ...dataArray,\n    }\n\n    const formData = new FormData();\n    Object.keys(txrequest).forEach(k => {\n      formData.set(k,txrequest[k]);\n    });\n\n    const req = {\n      url: this.urls[this.state.server] + '/signature/' + signature,\n      data: formData,\n      method: 'PUT',\n    };\n\n    axios(req)\n      .then((response) => {\n        const appended = this.state.queue.slice(0);\n        appended[signature] = txrequest;\n\n        console.log(appended)\n\n        this.setState({\n          queue: appended,\n        }, (s) => console.log);\n      })\n      .catch((e) => {\n        if(e.response){\n          console.log(\"error\", e.response.data.message)\n        }\n      })\n      .finally(() => this.fetchData())\n  });\n}\n\nexport function cancelTX(signature, nonce) {\n  this.toggle();\n\n  const callDataTX = {\n    to: this.addresses[this.state.netID].eths,\n    data:'0x8e7baff6' + this.web3.eth.abi.encodeParameters(\n      [\n        'uint',\n      ],\n      [ nonce ],\n    ).substr(2)\n  }\n\n  this.sendTX(callDataTX);\n\n  this.web3.eth.personal.sign(\"Cancel TX \" + nonce, this.state.addressList[0]).then(verified => {\n    const cancelOrder = {\n      signature: signature,\n      nonce: nonce, \n      verified: verified,\n    }\n\n    const formData = new FormData();\n    Object.keys(cancelOrder).forEach(k => {\n      formData.set(k, cancelOrder[k]);\n    });\n\n    const req = {\n      url: this.urls[this.state.server] + '/signature/' + signature,\n      data: formData,\n      method: 'DELETE',\n    };\n\n    axios(req)\n      .then(this.fetchData.bind(this))\n      .catch(console.error)\n  });\n}\n\n","import React from 'react';\n\nconst withCollapse = (WrappedComponent) => {\n  return class CollapseCard extends React.Component {\n    constructor(props) {\n      super();\n      this.state = {collapsed: false}\n\n      this.onCollapse = this.onCollapse.bind(this);\n    }\n\n    onCollapse() {\n      this.setState({...this.state, collapsed: !this.state.collapsed});\n    }\n\n    render() {\n      return (\n        <div>\n          <WrappedComponent\n            {...this.props}\n            collapsed={this.state.collapsed}\n            onCollapse={this.onCollapse}\n          />\n        </div>\n      );\n    }\n  }\n}\n\nexport default withCollapse;\n","import React, { Component } from 'react';\nimport { CollapseButton, ToggleBlocksButton } from './Utils.js';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport withCollapse from './withCollapse.js';\nimport values from 'lodash/values';\n\nconst TXQueue = props => (\n  <div className=\"card text-white mb-3\">\n    <div className=\"card-header\">\n      <h2 className=\"text-monospace font-weight-bold\">\n        TX Queue\n        <CollapseButton\n          onCollapse={props.onCollapse}\n          collapsed={props.collapsed}\n        />\n        <ToggleBlocksButton\n          onToggleBlocks={props.onToggleBlocks}\n          blocksFormat={props.blocksFormat}\n        />\n        <i\n          data-multiline \n          data-tip=\"These are the registered TXs requested by other users.<br/>Anyone can claim the reward offered by the poster once their schedule is met.\"\n          className=\"ml-3 small fas fa-question-circle\"\n        ></i>\n      </h2> \n    </div>  \n    <div className={\"card-body\" + (props.collapsed ? \" card-collapse\" : \"\")}>\n      <div className=\"table-container\">\n        <table className=\"table table-hover\">\n          <thead className=\"bg-white text-monospace\">\n            <tr className=\"text-black d-flex\" style={{'height':'30px'}}>\n              <th scope=\"col\" className=\"col-5\">Requester</th>\n              <th scope=\"col\" className=\"col-3 text-center\">\n                <i className={\"fas fa-\" + (props.blocksFormat ? \"cube\" : \"calendar\")}></i> <span>Schedule</span>\n              </th>\n              <th scope=\"col\" className=\"col-4 text-center\">Reward</th>\n            </tr>\n          </thead>\n          <tbody className=\"text-black text-monospace\">\n            {\n              props.posts.map(p =>\n                <TXReady\n                  {...p}\n                  key={p.sig}\n                  account={props.account}\n                  onCancel={props.onCancel}\n                  onFulfill={props.onFulfill}\n                  fromWei={props.fromWei}\n                />\n              )\n            } {\n              props.requests.map(p =>\n                <TXPost\n                  {...p}\n                  key={p.sig}\n                  account={props.account}\n                  blocksFormat={props.blocksFormat}\n                  account={props.account}\n                  onCancel={props.onCancel}\n                  fromWei={props.fromWei}\n                />\n              )\n            }\n          </tbody>\n        </table>  \n      </div>\n    </div>\n  </div>\n);\n\nconst TXReady = props => {\n  const currency = (props.USD === \"true\" ? \"USD\" : \"ETH\");\n\n  return (\n    <tr className=\"table-success text-black d-flex hoverHide\">\n      <td className=\"col-5 pl-3\">\n        <span className=\"sendSpan\">{props.signer}</span>\n        <button\n          className=\"btn btn-sm btn-success btn-block table-button\"\n          onClick={() => props.onFulfill(props)}\n        >\n          <i className=\"fas fa-paper-plane\"></i> Send this TX \n        </button>\n      </td>\n      <td className=\"col-3 text-center\">Ready</td>\n      <td className=\"col-4 text-center\">\n        {(props.account === props.signer) ? <CancelButton currency={currency} {...props}/> : props.fromWei(props.reward,'ether') + \" \" + currency}\n      </td>\n    </tr>\n  )\n};\n\nconst TXPost = props => {\n  const currency = (props.USD === \"true\" ? \"USD\" : \"ETH\");\n\n  return (\n    <tr className=\"table-danger text-black d-flex hoverHide\">\n      <td className=\"col-5 pl-3\">\n        <span className=\"sendSpan\">{props.signer}</span>\n        <CopyToClipboard text={JSON.stringify(props)}>\n          <button\n            className=\"btn btn-sm btn-danger btn-block table-button\"\n            onClick={(e) => (0)}\n          >\n            <i className=\"fas fa-clipboard\"></i> Copy Signature \n          </button>\n        </CopyToClipboard>\n      </td>\n      <td className=\"col-3 text-center\">\n        <TimeDisplay {...props}/>\n      </td>\n      <td className=\"col-4 text-center\">\n        {(props.account === props.signer) ? <CancelButton currency={currency} {...props}/> : props.fromWei(props.reward,'ether') + \" \" + currency}\n      </td>\n    </tr>\n  )\n};\n\nconst CancelButton = (props) => (\n  <span>\n    <span className=\"sendSpan\">{props.fromWei(props.reward,'ether')} {props.currency}</span>\n    <button\n      className=\"btn btn-sm btn-danger btn-block table-button\"\n      onClick={() => props.onCancel(props.sig, props.nonce)}\n    >\n      <i className=\"fas fa-ban\"></i> Cancel TX\n    </button>\n  </span>\n);\n\n\nconst TimeDisplay = (props) => (<span>{props.blocksFormat ? props.schedule: props.timestampDisplay}</span>);\n\n\nclass TXQueueContainer extends Component {\n  constructor(props) {\n    super();\n\n    this.state = {\n      blocksFormat: true,\n    }\n  }\n\n  componentDidMount() {\n    this.props.fetchData();\n  }\n\n  onToggleBlocks() {\n    this.setState({blocksFormat: !this.state.blocksFormat});\n    console.log(this.state)\n  }\n\n  render() {\n    const data      = values(this.props.queue);\n    const sigs      = Object.keys(this.props.queue);\n    const zipped    = data.forEach((p,i) => p.sig = sigs[i]) || data;\n    const posts     = this.state.blocksFormat ?\n      zipped :\n      zipped.forEach(p => {\n        p.timestampDisplay = new Date(Date.now() + 15*(p.schedule- this.props.blockNumber)).toISOString().replace(\"T\",\" \").split(\":\").slice(0,2);\n        p.timestamp        = new Date(Date.now() + 15*(p.schedule- this.props.blockNumber)).toISOString();\n      }) || zipped;\n\n    console.log(\"txq\", zipped)\n\n    const pre   = posts.filter(p => p.schedule < this.props.blockNumber);\n    const ready = posts.filter(p => p.schedule >= this.props.blockNumber);\n\n    return (\n      <TXQueue\n        {...this.props}\n        posts={pre}\n        requests={ready}\n        blocksFormat={this.state.blocksFormat}\n        onCancel={this.props.onCancel}\n        onToggleBlocks={this.onToggleBlocks.bind(this)}\n        onFulfill={this.props.onFulfill}\n        fromWei={this.props.fromWei}\n      />  \n    );\n  }\n}\n\nexport default withCollapse(TXQueueContainer);\n","import React, { Component } from 'react';\nimport { CollapseButton, DropdownAppend } from './Utils.js';\nimport withCollapse from './withCollapse.js';\n\nconst Scheduler = props => (\n  <div className=\"card text-white mb-3\">\n    <div className=\"card-header\">\n      <h3 className=\"text-monospace\">\n        <span>Post Scheduled TX</span>\n        <CollapseButton\n          onCollapse={props.onCollapse}\n          collapsed={props.collapsed}\n        />\n        <i\n          data-multiline \n          data-tip=\"It is possible to cancel a TX request before it is broadcasted by hovering over the request in the TX Queue and clicking Cancel TX.\"\n          className=\"ml-3 small fas fa-question-circle\"\n        ></i>\n      </h3> \n    </div>  \n    <div className={\"card-body\" + (props.collapsed ? \" card-collapse\" : \"\")}>\n      <ScheduleInput\n        getTime={props.getTime}\n        onInputChange={props.onInputChange}\n        onSign={props.onSign}\n        setCurrency={props.setCurrency}\n        inputData={props.inputData}\n        symbols={props.symbols}\n      />\n    </div>\n  </div>\n);\n\nconst ScheduleInput = props => (\n  <form>\n    <div className=\"form-group\">\n      <label>Receiver Address</label>\n        <input\n          onFocus={(e) => e.target.select()}\n          onChange={(e) => props.onInputChange({...props.inputData, address: e.target.value})}\n          className=\"form-control text-monospace\"\n          id=\"recieverAddress\"\n          value={props.inputData.address}\n       />\n      <small id=\"raHelp\" className=\"form-text text-gray\">Address of the end-recipient of your transaction.</small>\n    </div>\n    <div className=\"form-group\">\n      <label>Amount</label>\n      <div className=\"input-group\">\n        <input\n          onFocus={(e) => e.target.select()}\n          onChange={(e) => props.onInputChange({...props.inputData, amount: e.target.value})}\n          className=\"form-control text-monospace\"\n          id=\"amount\"\n          value={props.inputData.amount}\n       />\n       <DropdownAppend\n         symbols={props.symbols}\n         currency={props.inputData.currency}\n         setCurrency={props.setCurrency}\n       />\n      </div>\n      <small id=\"aHelp\" className=\"form-text text-gray\">Amount to send to the receiver address.</small>\n    </div>\n    <div className=\"form-group\">\n      <label>Reward</label>\n      <i data-tip=\"The reward implicitly includes the network transaction fee.\" className=\"fas fa-info-circle ml-2\"></i>\n      <div className=\"input-group\">\n        <input\n          onFocus={(e) => e.target.select()}\n          onChange={(e) => props.onInputChange({...props.inputData, reward: e.target.value})}\n          className=\"form-control text-monospace\"\n          id=\"reward\"\n          value={props.inputData.reward}\n       />\n       <DropdownAppend\n         className=\"disabled\"\n         symbols={props.symbols}\n         currency={props.inputData.currency}\n         setCurrency={props.setCurrency}\n       />\n      </div>\n      <small id=\"rwHelp\" className=\"form-text text-gray\">Amount awarded to the address that fulfills your request.</small>\n    </div>\n    <div className=\"form-group\">\n      <label>Blocks</label>\n      <i data-tip=\"Blocks till your TX is available for mining. One block is mined every ~15 seconds.\" className=\"fas fa-info-circle ml-2\"></i>\n      <div className=\"input-group\">\n        <input\n          onFocus={(e) => e.target.select()}\n          onChange={(e) => props.onInputChange({...props.inputData, blocks: e.target.value})}\n          className=\"form-control text-monospace\"\n          id=\"blocks\"\n          value={props.inputData.blocks}\n       />\n        <div className=\"input-group-append\">\n          <div style={{\"cursor\":\"help\"}} data-tip={props.getTime(props.inputData.blocks)} className=\"btn btn-primary disabled\">Blocks</div>\n        </div>\n      </div>\n      <small id=\"bHelp\" className=\"form-text text-gray\">Blocks to wait before the transaction is broadcasted.</small>\n    </div>\n\n    <button\n      onClick={(e) => props.onSign(e)}\n      className=\"btn btn-block btn-lg btn-secondary\"\n    >\n      Sign and Schedule\n    </button>\n  </form>\n);\n\n\nclass SchedulerContainer extends Component {\n  constructor(props){\n    super(props);\n    this.symbols = ['ETH','USD'];\n    this.state = {address: '0x0000000000000000000000000000000000000000', amount: 0, reward: 0, blocks: 10, currency: this.symbols[0]};\n  }\n  \n  render() {\n    return (\n      <Scheduler\n        {...this.props}\n        getTime={this.getTime.bind(this)}\n        onInputChange={this.onInputChange.bind(this)}\n        onSign={this.onSign.bind(this)}\n        inputData={this.state}\n        symbols={this.symbols}\n        setCurrency={this.setCurrency.bind(this)}\n      />\n    );\n  }\n\n  setCurrency(c) {\n    this.setState({currency: c});\n  }\n\n  getTime(blocks) {\n    const time = blocks*15/3600;\n    if(time < 2)\n      return \"Your input is equivalent to ~\" + (time*60).toFixed(2) + \" minutes.\";\n    else\n      return \"Your input is equivalent to ~\" + time.toFixed(2) + \" hours.\";\n  }\n\n  onSign(e) {\n    e.preventDefault();\n    this.props.onSign(this.state);\n  }\n\n  onInputChange(newState) {\n    if((/(^[0-9][0-9]{0,5}$)|(^$)/.test(newState.blocks))\n      && (/(^[0-9]+\\.?[0-9]{0,18}$)|(^$)/.test(newState.reward))\n      && (/(^[0-9]+\\.?[0-9]{0,18}$)|(^$)/.test(newState.amount))\n      && (/^0x[0-9a-f]{40}$/i.test(newState.address)))\n        this.setState(newState);\n  }\n}\n\nexport default withCollapse(SchedulerContainer);\n","import React, { Component } from 'react';\nimport { CollapseButton } from './Utils.js';\nimport withCollapse from './withCollapse.js';\n\nconst TXC = props => (\n  <div className=\"card text-white mb-3\">\n    <div className=\"card-header\">\n      <h3 className=\"text-monospace\">\n        Buy TXC\n        <CollapseButton\n          onCollapse={props.onCollapse}\n          collapsed={props.collapsed}\n        />\n      </h3> \n    </div>  \n    <div className={\"card-body\" + (props.collapsed ? \" card-collapse\" : \"\")}>\n      <p className=\"lead\">TXC is the subscription badge of TXCast. Every posted transaction charges a 30% fee of the reward. Addresses with at least 1 TXC do not pay this fee. Subscriptions can be transferred to other addresses and never expire.</p>\n      <p className=\"small\">There will only be a total of 5000 TXC subscriptions, and their price is fixed at 1 TXC = 1 ETH for the duration of the sale. TXC isn't subdivisible, so the minimum amount for sale is 1 TXC. However, an address can buy as many whole units of TXC as it wishes. After the 5000 subscriptions are sold, new users will have buy the subscriptions from previous owners.</p>\n      <div className=\"form-group\">\n        <button\n          type=\"button\"\n          onClick={() => props.onBuy()}\n          className=\"btn btn-secondary btn-lg btn-block\"\n        >\n          Buy TXC\n        </button>\n      </div>\n    </div>\n  </div>\n);\n\nclass TXCContainer extends Component {\n  render() {\n    return(\n      <TXC\n        {...this.props}\n      />\n    );  \n  }\n}\n\nexport default withCollapse(TXCContainer);\n","import React, { Component } from 'react';\nimport { CollapseButton } from './Utils.js';\nimport withCollapse from './withCollapse.js';\n\nconst Notice = props => (\n  <div className=\"card text-white mb-3\">\n    <div className=\"card-header\">\n      <h3 className=\"text-monospace\">\n        Notices\n        <CollapseButton\n          onCollapse={props.onCollapse}\n          collapsed={props.collapsed}\n        />\n      </h3> \n    </div>  \n    <div className={\"card-body\" + (props.collapsed ? \" card-collapse\" : \"\")}>\n      <p>TXCast is in beta release. Proceed with caution and make sure to read what each sub-app does.</p>\n    </div>\n  </div>\n);\n\nclass NoticesContainer extends Component {\n  render() {\n    return (\n      <Notice {...this.props}/>\n    )\n  }\n}\n\nexport default withCollapse(NoticesContainer);\n","import React, { Component } from 'react';\nimport { CollapseButton, DropdownAppend } from './Utils.js';\nimport withCollapse from './withCollapse.js';\n\nconst Deposit = props => (\n  <div className=\"card text-white mb-3\">\n    <div className=\"card-header\">\n      <h3 className=\"text-monospace\">\n        Ether Deposits\n        <CollapseButton\n          onCollapse={props.onCollapse}\n          collapsed={props.collapsed}\n        />\n      </h3> \n    </div>  \n    <div className={\"card-body\" + (props.collapsed ? \" card-collapse\" : \"\")}>\n      <DepositInput\n        {...props}\n      />\n    </div>\n  </div>\n);\n\nconst DepositInput = props => (\n  <form>\n    <div className=\"form-group\">\n      <label>Beneficiary's Address</label>\n      <i data-tip=\"Until release, the beneficiary is the unlocked wallet.\" className=\"fas fa-info-circle ml-2\"></i>\n\n      <div className=\"input-group\">\n        <input\n          disabled\n          className=\"form-control text-monospace bg-primary\"\n          id=\"beneficiaryAddress\"\n          value={props.address}\n        />\n      </div>\n      <small id=\"raHelp\" className=\"form-text text-gray\">Address of the beneficiary of your deposit.</small>\n    </div>\n    <div className=\"form-group\">\n      <label>Amount</label>\n      <div className=\"input-group\">\n        <input\n          onChange={(e) => props.onInputChange({...props.inputData, amount: e.target.value})}\n          className=\"form-control text-monospace\"\n          id=\"depositAmount\"\n          value={props.inputData.amount}\n        />\n      </div>\n      <small id=\"aHelp\" className=\"form-text text-gray\">Amount to deposit to the beneficiary.</small>\n    </div>\n\n    <button\n      onClick={(e) => props.onDeposit(e)}\n      className=\"btn btn-block btn-lg btn-secondary\"\n    >\n      Deposit \n    </button>\n  </form>\n);\n\nclass DepositContainer extends Component {\n  constructor(props){\n    super(props);\n    this.state = {amount: 0, selfDepositToggle: true};\n  }\n\n  render() {\n    return (\n      <Deposit\n        {...this.props}\n        onInputChange={this.onInputChange.bind(this)}\n        onDeposit={this.onDeposit.bind(this)}\n        toggleSelfDeposit={this.toggleSelfDeposit.bind(this)}\n        inputData={this.state}\n        symbols={['ETH','ZRX','DAI','REP']}\n      />\n    );\n  }\n\n  onDeposit(e) {\n    e.preventDefault();\n    this.props.onDeposit(this.state);\n  }\n\n  toggleSelfDeposit() {\n    this.setState({...this.state, selfDepositToggle: !this.state.selfDepositToggle}); \n  }\n\n  onInputChange(newState) {\n    if(/(^[0-9]+\\.?[0-9]{0,18}$)|(^$)/.test(newState.amount))\n      this.setState(newState);\n  }\n}\n\nexport default withCollapse(DepositContainer);\n","import React, { Component } from 'react';\nimport { CollapseButton } from './Utils.js';\nimport withCollapse from './withCollapse.js';\n\nconst Balance = props => (\n  <div className=\"card text-white mb-3\">\n    <div className=\"card-header\">\n      <h3 className=\"text-monospace\">\n        Balances\n        <CollapseButton\n          onCollapse={props.onCollapse}\n          collapsed={props.collapsed}\n        />\n      </h3>\n    </div>  \n    <div className={\"card-body\" + (props.collapsed ? \" card-collapse\" : \"\")}>\n      <BalanceInput\n        {...props}\n      />\n    </div>\n  </div>\n);\n\nconst BalanceInput = props => (\n  <form>\n    <div className=\"form-group\">\n      <label>Address</label>\n      <div className=\"input-group\">\n        <input\n          onFocus={(e) => e.target.select()}\n          onChange={(e) => props.onInputChange({...props.inputData, address: e.target.value})}\n          className=\"form-control text-monospace\"\n          id=\"address\"\n          value={props.inputData.address}\n        />\n        <div className=\"input-group-append\">\n          <button\n            onClick={(e) => props.onBalance(e)}\n            className=\"btn btn-secondary\"\n          >\n            Check\n          </button>\n        </div>\n        <small id=\"raHelp\" className=\"form-text text-gray\"></small>\n      </div>\n    </div>\n    <div className=\"form-group\">\n      <h3>ETH: <span className=\"float-right\">{parseFloat(props.balance).toFixed(5)}</span></h3>\n    </div>\n  </form>\n);\n\nclass BalanceContainer extends Component {\n  constructor(props){\n    super(props);\n    this.state = {address: '0x0000000000000000000000000000000000000000', amount: 0};\n  }\n\n  render() {\n    return (\n      <Balance\n        {...this.props}\n        onInputChange={this.onInputChange.bind(this)}\n        onBalance={this.onBalance.bind(this)}\n        inputData={this.state}\n        symbols={['ETH','ZRX','DAI','REP']}\n      />\n    );\n  }\n\n  onBalance(e) {\n    e.preventDefault();\n    this.props.onBalance(this.state);\n  }\n\n  onInputChange(newState) {\n    if(/^0x[0-9a-f]{40}$/i.test(newState.address))\n      this.setState(newState);\n  }\n}\n\nexport default withCollapse(BalanceContainer);\n","import React, { Component } from 'react';\nimport { CollapseButton } from './Utils.js';\nimport withCollapse from './withCollapse.js';\n\nconst SendRaw = props => (\n  <div className=\"card text-white mb-3\">\n    <div className=\"card-header\">\n      <h3 className=\"text-monospace\">\n        Broadcast TX\n        <CollapseButton\n          onCollapse={props.onCollapse}\n          collapsed={props.collapsed}\n        />\n      </h3>\n    </div>  \n    <div className={\"card-body\" + (props.collapsed ? \" card-collapse\" : \"\")}>\n      <SendRawInput\n        {...props}\n      />\n    </div>\n  </div>\n);\n\nconst SendRawInput = props => (\n  <form>\n    <div className=\"form-group\">\n      <label>TX Data</label>\n      <i data-tip=\"These data can be copied to the clipboard from the TX Queue sub-app.\" className=\"fas fa-info-circle ml-2\"></i>\n      <div className=\"input-group\">\n        <input\n          onChange={(e) => props.onInputChange({callDataTX: JSON.parse(e.target.value)})}\n          className=\"form-control text-monospace\"\n          id=\"address\"\n          value={JSON.stringify(props.inputData.callDataTX)}\n        />\n        <div className=\"input-group-append\">\n          <button\n            onClick={(e) => props.onSendRaw(e)}\n            className=\"btn btn-secondary\"\n          >\n           Broadcast TX \n          </button>\n        </div>\n        <small id=\"raHelp\" className=\"form-text text-gray\"></small>\n      </div>\n    </div>\n  </form>\n);\n\nclass SendRawContainer extends Component {\n  constructor(props){\n    super(props);\n    this.state = {callDataTX: {}};\n  }\n\n  render() {\n    return (\n      <SendRaw\n        {...this.props}\n        onInputChange={this.onInputChange.bind(this)}\n        onSendRaw={this.onSendRaw.bind(this)}\n        inputData={this.state}\n        symbols={['ETH','ZRX','DAI','REP']}\n      />\n    );\n  }\n\n  onSendRaw(e) {\n    e.preventDefault();\n    this.props.onSendRaw(this.state);\n  }\n\n  onInputChange(newState) {\n    this.setState(newState);\n  }\n}\n\nexport default withCollapse(SendRawContainer);\n","import React, { Component } from 'react';\nimport { Footer, PatternBg, ActionModal } from './Utils.js';\nimport Web3 from 'web3';\nimport ReactTooltip from 'react-tooltip';\nimport axios from 'axios';\nimport NavBar from './NavBar.js';\nimport Modals from './Modals.js';\nimport * as handlers from './web3handlers.js';\n\nimport logo from './img/SVG/logo.svg';\nimport './App.css';\n\nimport TXQueueContainer from './TXQueueContainer.js';\nimport SchedulerContainer from './SchedulerContainer.js';\nimport TXCContainer from './TXCContainer.js';\nimport NoticesContainer from './NoticesContainer.js';\nimport DepositContainer from './DepositContainer.js';\nimport BalanceContainer from './BalanceContainer.js';\nimport SendRawContainer from './SendRawContainer.js';\n\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      addressList : [],\n      queue : {},\n      blockNumber : 0,\n      balance: 0,\n      netID: 1,\n      hasTXC: false,\n      blocksFormat: true,\n      server: 'prod',\n      modal: false,\n    }\n\n    this.Modals = Modals;\n    \n    this.web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n\n    this.mew = \"https://www.myetherwallet.com/signmsg.html\";\n\n    this.addresses = {\n      [42]: {\n        eths: \"0xa0475d202be30019e56306cc08f8998887135258\",\n        eths_old: \"0xe49bb13f1e57de8364586bbb82bf79d0c8aac074\",\n        txcsale: \"0x2ffbee1b7eda9d6187f4f875899c9f8f28d927ed\",\n        txc: \"0x12C942fDbE9981E68DC153CC92dA2e2c301F5a9A\",\n      },\n      [1]: {\n        eths: \"0x1A9de6912CcD1B59a838D09bEEB132056Cda170f\",\n        eths_old: \"0xf99E87098f4F1C8d8bd6a3df7181B3acdc21848A\",\n        txcsale: \"0x02e48bb0dbdc0ebbc041e725a12784239a2d10df\",\n        txc: \"0x390e0070323df12b024617854f698cef5d309a93\",\n      }\n    };\n\n    this.urls = {\n      'dev': \"http://localhost:5000\",\n      'devrem': \"http://txcast.io:5000\",\n      'prod': \"https://api.txcast.io\",\n    }\n\n    this.abiTypes = {\n      eths: {\n        withoutSignature: [\n          'address', // target\n          'uint256', // amount\n          'uint256', // reward\n          'bool',    // byBlock\n          'uint256', // condition\n          'uint256', // nonce\n          'uint256', // netID\n          'bool',    // USD \n        ],\n        withSignature: [\n          'address', // target\n          'uint256', // amount\n          'uint256', // reward\n          'bool',    // byBlock\n          'uint256', // condition\n          'uint256', // nonce\n          'uint256', // netID\n          'bytes',   // signature \n        ],\n      }\n    }\n\n    this.toggle = this.toggle.bind(this);\n    this.updateBlock = this.updateBlock.bind(this);\n\n    this.cancelTX = handlers.cancelTX.bind(this);\n    this.signTX = handlers.signTX.bind(this);\n    this.sendTX = handlers.sendTX.bind(this);\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  } \n\n  async componentDidMount() {\n    try {\n      await window.ethereum.enable();\n\n      const a = await this.web3.eth.getAccounts();\n      const id = await this.web3.eth.net.getId();\n\n      await this.setState({addressList: a, netID: id});\n\n      const address = a[0];\n      const callData = {\n        to: this.addresses[this.state.netID].txc,\n        data:'0x70a08231' + this.web3.eth.abi.encodeParameters(\n          [\n            'address',\n          ],\n          [address]\n        ).substr(2)\n      }\n\n      this.web3.eth.call(callData).then((b,s) => {\n        this.setState({hasTXC: parseInt(b) > 0});\n      });\n\n      this.web3.currentProvider.publicConfigStore.on('update', (update) => {\n        this.setState({addressList:[this.web3.utils.toChecksumAddress(update.selectedAddress)], netID:update.networkVersion});\n      });\n\n      setInterval(this.updateBlock, 5000);\n    } catch (e) {\n      console.error(e,\"no web3\");\n    }\n  }\n\n  fetchData() {\n    console.log(this.state)\n    const req = {\n      url: this.urls[this.state.server] + '/signature',\n      method: 'GET',\n    };\n\n    axios(req).then(ans => {\n      const queue = ans.data.reduce((acc, v) => { acc[v[0]] = v[1]; return acc; }, {});\n      this.setState({queue: queue});\n    });\n\n  }\n\n  async updateBlock() {\n    const latestBlock = await this.web3.eth.getBlock('latest');\n    if(latestBlock !== null && /[0-9]*/.test(latestBlock)) this.setState({blockNumber: latestBlock.number});\n  }\n\n  render() {\n    const netid = this.state.netID;\n    const ethsAddress = this.addresses[netid].eths;\n    const ethsUrl = \"https://\" + (netid === \"1\" ? \"www\" : \"kovan\") + \".etherscan.io/address/\" + ethsAddress;\n    const coinbaseUrl = \"https://\" + (netid === \"1\" ? \"www\" : \"kovan\") + \".etherscan.io/address/\" + this.state.addressList[0];\n\n    const data = {netid: netid, ethsAddress: ethsAddress, ethsUrl: ethsUrl, coinbaseUrl: coinbaseUrl}\n\n    const modal = this.state.modal ? (\n      <ActionModal\n        innerHTML={this.state.innerHTML}\n        params={this.state.params}\n        action={this.state.action}\n        toggle={this.toggle}\n        modal={this.state.modal}\n      />) : \"\";\n\n    return (\n      <div>\n        <PatternBg />\n        <ReactTooltip />\n        <NavBar logo={logo} {...this.state} {...data}/>\n        {modal} \n        <div className=\"container-fluid px-4 mt-4\">\n          <div className=\"row\">\n            <div\n              className=\"col-lg-5\"\n            >\n              <TXQueueContainer\n                account={this.state.addressList[0]}\n                queue={this.state.queue}\n                blockNumber={this.state.blockNumber}\n                onFulfill={handlers.onFulfill.bind(this)}\n                onCancel={handlers.onCancel.bind(this)}\n                fetchData={this.fetchData.bind(this)}\n                fromWei={this.web3.utils.fromWei}\n              />\n              <SendRawContainer \n                onSendRaw={handlers.onSendRaw.bind(this)}\n              />\n            </div>\n            <div className=\"col-lg-7\">\n              <div className=\"row\">\n                <div\n                  className=\"col-lg-7\"\n                >\n                  <SchedulerContainer\n                    onSign={handlers.onSign.bind(this)}\n                  />\n                  <TXCContainer\n                    onBuy={handlers.onBuy.bind(this)}\n                  />\n                </div>\n                <div\n                  className=\"col-lg-5\"\n                >\n                  <DepositContainer\n                    address={this.state.addressList[0]}\n                    onDeposit={handlers.onDeposit.bind(this)}\n                  />\n                  <BalanceContainer\n                    address={this.state.addressList[0]}\n                    balance={this.state.balance}\n                    onBalance={handlers.onBalance.bind(this)}\n                  />\n                  <NoticesContainer/>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport WebFont from 'webfontloader';\nimport * as serviceWorker from './serviceWorker';\n\nWebFont.load({\n  google: {\n    families: ['Roboto','Roboto Mono']\n  }\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}