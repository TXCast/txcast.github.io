{"version":3,"sources":["img/SVG/logo.svg","Utils.js","withCollapse.js","TXQueueContainer.js","SchedulerContainer.js","TXCContainer.js","NoticesContainer.js","DepositContainer.js","BalanceContainer.js","SendRawContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","DropdownAppend","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","toggle","filter","v","setState","objectSpread","prevState","_this2","react_default","a","createElement","className","onClick","toggleList","type","data-toggle","onChange","e","setFilter","target","value","placeholder","id","symbols","w","toUpperCase","search","map","key","href","Component","CollapseButton","onCollapse","collapsed","Footer","PatternBg","height","width","x","y","patternUnits","points","stroke","strokeWidth","fill","withCollapse","WrappedComponent","_React$Component","CollapseCard","bind","assertThisInitialized","inherits","createClass","assign","React","TXQueue","Utils_CollapseButton","style","scope","posts","TXQueueContainer_TXReady","sendTX","requests","TXQueueContainer_TXPost","TXReady","address","callDataTX","class","amount","currency","TXPost","lib","text","JSON","stringify","blocks","fetchData","queue","console","log","pre","blockNumber","ready","TXQueueContainer_TXQueue","Scheduler","SchedulerContainer_ScheduleInput","onInputChange","onSign","inputData","ScheduleInput","Utils_DropdownAppend","data-tip","reward","SchedulerContainer","SchedulerContainer_Scheduler","preventDefault","newState","test","TXC","TXCContainer_TXC","Notice","NoticesContainer_Notice","Deposit","DepositContainer_DepositInput","DepositInput","disabled","onDeposit","DepositContainer","selfDepositToggle","DepositContainer_Deposit","toggleSelfDeposit","Balance","BalanceContainer_BalanceInput","BalanceInput","onBalance","balance","BalanceContainer","BalanceContainer_Balance","SendRaw","SendRawContainer_SendRawInput","SendRawInput","parse","onSendRaw","SendRawContainer","SendRawContainer_SendRaw","web3","Web3","givenProvider","eths","App","addressList","updateBlock","window","ethereum","enable","eth","getAccounts","then","setInterval","_this3","axios","url","method","ans","data","getBlock","latestBlock","number","schedulerInput","dataArray","utils","toWei","toString","parseInt","Math","floor","random","Number","MAX_SAFE_INTEGER","callData","to","abi","encodeParameters","substr","hash","hexToAscii","signer","_this4","personal","sign","signature","concat","txrequest","fromWei","toConsumableArray","formData","FormData","keys","forEach","k","set","req","catch","depositInput","from","balanceInput","_this5","b","s","toBN","rawInput","callDataTXFrom","sendTransaction","transactionHash","Utils_PatternBg","dist_default","letterSpacing","src","logo","alt","minWidth","src_TXQueueContainer","src_SendRawContainer","src_SchedulerContainer","src_DepositContainer","src_TXCContainer","src_BalanceContainer","src_NoticesContainer","Utils_Footer","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.9a3f266e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.21f31404.svg\";","import React, { Component } from 'react';\n\nclass DropdownAppend extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {toggle: false, filter: \"\"};\n  }\n\n  setFilter(v) {\n    this.setState({...this.state, filter: v});\n  }\n\n  toggleList() {\n    this.setState(prevState => ({\n      toggle : !prevState.toggle\n    }))\n  }\n\n  render() {\n    return ( \n      <div className=\"input-group-append\">\n        <button\n          className={\"btn btn-primary dropdown-toggle\" }\n          onClick={() => this.toggleList()}\n          type=\"button\"\n          data-toggle=\"dropdown\"\n        >\n          ETH\n        </button>\n        <div className={\"dropdown-menu dropdown-menu-right \" + (this.state.toggle ? \"show\" : \"\")}>\n          <input\n            className=\"filter-input pl-2 m-1\"\n            onChange={(e) => this.setFilter(e.target.value)}\n            type=\"text\"\n            placeholder=\"Filter\"\n            id=\"ticker\"\n          />\n          {this.props.symbols\n              .filter(w =>\n                w.toUpperCase().search(this.state.filter.toUpperCase()) > -1\n              )\n              .map(v => (\n                <a key={v} className=\"dropdown-item\" href=\"#\">{v}</a>\n              ))}\n            </div>\n          </div>\n    )\n  }\n}\n\nconst CollapseButton = (props) => (\n  <a onClick={() => props.onCollapse()}>\n    <i className={\"float-right fas fa-\" + (props.collapsed ? \"plus\" : \"minus\") + \"-square\"}></i>\n  </a>\n);\n\nconst Footer = () => (\n  <footer>\n    <div className=\"container\">\n      <div className=\"text-center\"><i className=\"fas fa-ellipsis-h\"></i></div>\n      <div className=\"row text-center\">\n        <div className=\"col-md-12\">\n          <ul className=\"list-inline social-buttons\">\n            <li className=\"list-inline-item\">\n              <a href=\"#\">\n                <i className=\"fab fa-twitter\"></i>\n              </a>\n            </li>\n            <li className=\"list-inline-item\">\n              <a href=\"#\">\n                <i className=\"fab fa-reddit\"></i>\n              </a>\n            </li>\n            <li className=\"list-inline-item\">\n              <a href=\"#\">\n                <i className=\"fab fa-discord\"></i>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div className=\"col-md-12 py-5\">\n          <span className=\"text-white text-monospace\">TXCast 2018</span>\n        </div>\n      </div>\n    </div>\n  </footer>\n);\n\nconst PatternBg = () => (\n  <svg height=\"100%\" width=\"100%\">\n    <defs>\n      <pattern id=\"basicPattern\" x=\"0\" y=\"0\" width=\"60\" height=\"30\" patternUnits=\"userSpaceOnUse\">\n        <polygon points=\"0,0 30,15 30,-15\"/>\n        <polygon points=\"0,0 30,15 0,30\"/>\n        <polygon points=\"0,30 30,15 30,45\"/>\n\n        <polygon points=\"60,0 30,15 30,-15\"/>\n        <polygon points=\"60,0 30,15 60,30\"/>\n        <polygon points=\"60,30 30,15 30,45\"/>\n      </pattern>\n    </defs>\n\n    <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\"\n      stroke= \"#333333\" strokeWidth=\"1\" fill=\"url(#basicPattern)\" />\n  </svg>\n);\n\nexport { Footer, PatternBg, CollapseButton, DropdownAppend };\n","import React, { Component } from 'react';\n\nconst withCollapse = (WrappedComponent) => {\n  return class CollapseCard extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {collapsed: false}\n\n      this.onCollapse = this.onCollapse.bind(this);\n    }\n\n    onCollapse() {\n      this.setState({...this.state, collapsed: !this.state.collapsed});\n    }\n\n    render() {\n      return (\n        <div>\n          <WrappedComponent\n            {...this.props}\n            collapsed={this.state.collapsed}\n            onCollapse={this.onCollapse}\n          />\n        </div>\n      );\n    }\n  }\n}\n\nexport default withCollapse;\n","import React, { Component } from 'react';\nimport { CollapseButton } from './Utils.js';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport withCollapse from './withCollapse.js';\n\nconst TXQueue = props => (\n  <div className=\"card text-white mb-3\">\n    <div className=\"card-header\">\n      <h2 className=\"text-monospace font-weight-bold\">\n        TX Queue\n        <CollapseButton\n          onCollapse={props.onCollapse}\n          collapsed={props.collapsed}\n        />\n      </h2> \n    </div>  \n    <div className={\"card-body\" + (props.collapsed ? \" card-collapse\" : \"\")}>\n      <div className=\"table-container\">\n        <table className=\"table table-hover\">\n          <thead className=\"bg-white\">\n            <tr className=\"text-black d-flex\" style={{'height':'30px'}}>\n              <th scope=\"col\" className=\"col-5\">Requester</th>\n              <th scope=\"col\" className=\"col-3 text-center\">Block Schedule</th>\n              <th scope=\"col\" className=\"col-4 text-center\">Reward</th>\n            </tr>\n          </thead>\n          <tbody className=\"text-black text-monospace\">\n            { props.posts.map(p => <TXReady {...p} sendTX={props.sendTX}/>) }\n            { props.requests.map(p => <TXPost {...p}/>) }\n          </tbody>\n        </table>  \n      </div>\n    </div>\n  </div>\n);\n\nconst TXReady = props => (\n  <tr className=\"table-light text-black d-flex hoverHide\">\n    <td className=\"col-5 pl-3\">\n      <span className=\"sendSpan\">{props.address}</span>\n      <button\n        className=\"btn btn-sm btn-success btn-block sendButton\"\n        onClick={() => props.sendTX(props.callDataTX)}\n      >\n        Send this TX <i class=\"fas fa-paper-plane\"></i>\n      </button>\n    </td>\n    <td className=\"col-3 text-center\">Ready</td>\n    <td className=\"col-4 text-center\">{props.amount} {props.currency}</td>\n  </tr>\n);\n\nconst TXPost = props => (\n  <tr className=\"table-secondary text-black d-flex hoverHide\">\n    <td className=\"col-5 pl-3\">\n      <span className=\"sendSpan\">{props.address}</span>\n      <CopyToClipboard text={JSON.stringify(props.callDataTX)}>\n        <button\n          className=\"btn btn-sm btn-danger btn-block sendButton\"\n          onClick={(e) => (0)}\n        >\n          Copy Signature <i class=\"fas fa-clipboard\"></i>\n        </button>\n      </CopyToClipboard>\n\n    </td>\n    <td className=\"col-3 text-center\">{props.blocks}</td>\n    <td className=\"col-4 text-center\">{props.amount} {props.currency}</td>\n  </tr>\n);\n\n\nclass TXQueueContainer extends Component {\n  componentDidMount() {\n    this.props.fetchData();\n  }\n\n  render() {\n    const posts = this.props.queue;\n    console.log(posts)\n    const pre   = posts.filter(p => p.blocks < this.props.blockNumber);\n    const ready = posts.filter(p => p.blocks >= this.props.blockNumber);\n\n    return (\n      <TXQueue\n        {...this.props}\n        posts={pre}\n        requests={ready}\n        sendTX={this.props.sendTX}\n      />  \n    );\n  }\n}\n\nexport default withCollapse(TXQueueContainer);\n","import React, { Component } from 'react';\nimport { CollapseButton, DropdownAppend } from './Utils.js';\nimport withCollapse from './withCollapse.js';\n\nconst Scheduler = props => (\n  <div className=\"card text-white mb-3\">\n    <div className=\"card-header\">\n      <h3 className=\"text-monospace\">\n        Post Scheduled TX\n        <CollapseButton\n          onCollapse={props.onCollapse}\n          collapsed={props.collapsed}\n        />\n      </h3> \n    </div>  \n    <div className={\"card-body\" + (props.collapsed ? \" card-collapse\" : \"\")}>\n      <ScheduleInput\n        onInputChange={props.onInputChange}\n        onSign={props.onSign}\n        inputData={props.inputData}\n        symbols={props.symbols}\n      />\n    </div>\n  </div>\n);\n\nconst ScheduleInput = props => (\n  <form>\n    <div className=\"form-group\">\n      <label>Receiver Address</label>\n        <input\n          onChange={(e) => props.onInputChange({...props.inputData, address: e.target.value})}\n          className=\"form-control text-monospace\"\n          id=\"recieverAddress\"\n          value={props.inputData.address}\n       />\n      <small id=\"raHelp\" className=\"form-text text-gray\">Address of the end-recipient of your transaction.</small>\n    </div>\n    <div className=\"form-group\">\n      <label>Amount</label>\n      <div className=\"input-group\">\n        <input\n          onChange={(e) => props.onInputChange({...props.inputData, amount: e.target.value})}\n          className=\"form-control text-monospace\"\n          id=\"amount\"\n          value={props.inputData.amount}\n       />\n        <DropdownAppend symbols={props.symbols}/>\n      </div>\n      <small id=\"aHelp\" className=\"form-text text-gray\">Amount to send to the receiver address.</small>\n    </div>\n    <div className=\"form-group\">\n      <label>Reward</label>\n      <i data-tip=\"The reward implicitly includes the network transaction fee.\" className=\"fas fa-info-circle ml-2\"></i>\n      <div className=\"input-group\">\n        <input\n          onChange={(e) => props.onInputChange({...props.inputData, reward: e.target.value})}\n          className=\"form-control text-monospace\"\n          id=\"reward\"\n          value={props.inputData.reward}\n       />\n        <DropdownAppend symbols={props.symbols}/>\n      </div>\n      <small id=\"rwHelp\" className=\"form-text text-gray\">Amount awarded to the address that fulfills your request.</small>\n    </div>\n    <div className=\"form-group\">\n      <label>Blocks</label>\n      <i data-tip=\"Blocks till your TX is available for mining. One block is mined every ~15 seconds.\" className=\"fas fa-info-circle ml-2\"></i>\n      <div className=\"input-group\">\n        <input\n          onChange={(e) => props.onInputChange({...props.inputData, blocks: e.target.value})}\n          className=\"form-control text-monospace\"\n          id=\"blocks\"\n          value={props.inputData.blocks}\n       />\n        <div className=\"input-group-append\">\n          <button className=\"btn btn-primary\">Blocks</button>\n        </div>\n      </div>\n      <small id=\"bHelp\" className=\"form-text text-gray\">Blocks to wait before the transaction is broadcasted.</small>\n    </div>\n\n    <button\n      onClick={(e) => props.onSign(e)}\n      className=\"btn btn-block btn-lg btn-success\"\n    >\n      Sign and Submit\n    </button>\n  </form>\n);\n\nclass SchedulerContainer extends Component {\n  constructor(props){\n    super(props);\n    this.state = {address: '0x0000000000000000000000000000000000000000', amount: 0, reward: 0, blocks: 0};\n  }\n\n  render() {\n    return (\n      <Scheduler\n        {...this.props}\n        onInputChange={this.onInputChange.bind(this)}\n        onSign={this.onSign.bind(this)}\n        inputData={this.state}\n        symbols={['ETH','ZRX','DAI','REP']}\n      />\n    );\n  }\n\n  onSign(e) {\n    e.preventDefault();\n    this.props.onSign(this.state);\n  }\n\n  onInputChange(newState) {\n    if((/(^[0-9][0-9]{0,5}$)|(^$)/.test(newState.blocks))\n      && (/(^[0-9]+\\.?[0-9]{0,18}$)|(^$)/.test(newState.reward))\n      && (/(^[0-9]+\\.?[0-9]{0,18}$)|(^$)/.test(newState.amount))\n      && (/^0x[0-9a-f]{40}$/i.test(newState.address)))\n        this.setState(newState);\n  }\n}\n\nexport default withCollapse(SchedulerContainer);\n","import React, { Component } from 'react';\nimport { CollapseButton } from './Utils.js';\nimport withCollapse from './withCollapse.js';\n\nconst TXC = props => (\n  <div className=\"card text-white mb-3\">\n    <div className=\"card-header\">\n      <h3 className=\"text-monospace\">\n        Buy TXC\n        <CollapseButton\n          onCollapse={props.onCollapse}\n          collapsed={props.collapsed}\n        />\n      </h3> \n    </div>  \n    <div className={\"card-body\" + (props.collapsed ? \" card-collapse\" : \"\")}>\n      <p>TXC is the subscription badge of TXCast. Every posted transaction charges a 30% fee of the reward. Addresses with at least 1 TXC do not pay this fee. Subscriptions can be transferred to other addresses and never expire.</p>\n      <p>There will only be a total of 5000 TXC subscriptions, and their price is fixed at 1 TXC = 1 ETH for the duration of the sale. TXC isn't subdivisible, so the minimum amount for sale is 1 TXC. However, an address can buy as many whole units of TXC as it wishes. After the 5000 subscriptions are sold, new users will have buy the subscriptions from previous owners.</p>\n      <div className=\"form-group\">\n        <button type=\"button\" className=\"btn btn-success btn-lg btn-block\">Buy TXC</button>\n      </div>\n    </div>\n  </div>\n);\n\nclass TXCContainer extends Component {\n  state = {};\n\n  render() {\n    return(\n      <TXC\n        {...this.props}\n      />\n    );  \n  }\n}\n\nexport default withCollapse(TXCContainer);\n","import React, { Component } from 'react';\nimport { CollapseButton } from './Utils.js';\nimport withCollapse from './withCollapse.js';\n\nconst Notice = props => (\n  <div className=\"card text-white mb-3\">\n    <div className=\"card-header\">\n      <h3 className=\"text-monospace\">\n        Notices\n        <CollapseButton\n          onCollapse={props.onCollapse}\n          collapsed={props.collapsed}\n        />\n      </h3> \n    </div>  \n    <div className={\"card-body\" + (props.collapsed ? \" card-collapse\" : \"\")}>\n      <p>TXCast is in beta release. Proceed with caution and make sure to read what each sub-app does.</p>\n    </div>\n  </div>\n);\n\nclass NoticesContainer extends Component {\n  render() {\n    return (\n      <Notice {...this.props}/>\n    )\n  }\n}\n\nexport default withCollapse(NoticesContainer);\n","import React, { Component } from 'react';\nimport Toggle from 'react-toggle';\nimport { CollapseButton, DropdownAppend } from './Utils.js';\nimport withCollapse from './withCollapse.js';\n\nconst Deposit = props => (\n  <div className=\"card text-white mb-3\">\n    <div className=\"card-header\">\n      <h3 className=\"text-monospace\">\n        Ether and Token Deposits\n        <CollapseButton\n          onCollapse={props.onCollapse}\n          collapsed={props.collapsed}\n        />\n      </h3> \n    </div>  \n    <div className={\"card-body\" + (props.collapsed ? \" card-collapse\" : \"\")}>\n      <DepositInput\n        {...props}\n      />\n    </div>\n  </div>\n);\n\nconst DepositInput = props => (\n  <form>\n    <div className=\"form-group\">\n      <label>Beneficiary's Address</label>\n      <i data-tip=\"Until release, the beneficiary is the unlocked wallet.\" className=\"fas fa-info-circle ml-2\"></i>\n\n      <div className=\"input-group\">\n        <input\n          disabled\n          className=\"form-control text-monospace bg-primary\"\n          id=\"beneficiaryAddress\"\n          value={props.address}\n        />\n      </div>\n      <small id=\"raHelp\" className=\"form-text text-gray\">Address of the beneficiary of your deposit.</small>\n    </div>\n    <div className=\"form-group\">\n      <label>Amount</label>\n      <div className=\"input-group\">\n        <input\n          onChange={(e) => props.onInputChange({...props.inputData, amount: e.target.value})}\n          className=\"form-control text-monospace\"\n          id=\"depositAmount\"\n          value={props.inputData.amount}\n        />\n        <DropdownAppend symbols={props.symbols}/>\n      </div>\n      <small id=\"aHelp\" className=\"form-text text-gray\">Amount to deposit to the beneficiary.</small>\n    </div>\n\n    <button\n      onClick={(e) => props.onDeposit(e)}\n      className=\"btn btn-block btn-lg btn-success\"\n    >\n      Deposit \n    </button>\n  </form>\n);\n\nconst selfdeposit = (props) => (\n  <label className=\"switch\">\n    <input\n      type=\"checkbox\"\n      checked={props.selfDepositToggle}\n      value={props.selfDepositToggle}\n      onChange={() => props.toggleSelfDeposit()}\n    />\n    <div className=\"slider ml-2\"></div>\n  </label>  \n);\n\nclass DepositContainer extends Component {\n  constructor(props){\n    super(props);\n    this.state = {amount: 0, selfDepositToggle: true};\n  }\n\n  render() {\n    return (\n      <Deposit\n        {...this.props}\n        onInputChange={this.onInputChange.bind(this)}\n        onDeposit={this.onDeposit.bind(this)}\n        toggleSelfDeposit={this.toggleSelfDeposit.bind(this)}\n        inputData={this.state}\n        symbols={['ETH','ZRX','DAI','REP']}\n      />\n    );\n  }\n\n  onDeposit(e) {\n    e.preventDefault();\n    this.props.onDeposit(this.state);\n  }\n\n  toggleSelfDeposit() {\n    this.setState({...this.state, selfDepositToggle: !this.state.selfDepositToggle}); \n  }\n\n  onInputChange(newState) {\n    if(/(^[0-9]+\\.?[0-9]{0,18}$)|(^$)/.test(newState.amount))\n      this.setState(newState);\n  }\n}\n\nexport default withCollapse(DepositContainer);\n","import React, { Component } from 'react';\nimport { CollapseButton, DropdownAppend } from './Utils.js';\nimport withCollapse from './withCollapse.js';\n\nconst Balance = props => (\n  <div className=\"card text-white mb-3\">\n    <div className=\"card-header\">\n      <h3 className=\"text-monospace\">\n        Balances\n        <CollapseButton\n          onCollapse={props.onCollapse}\n          collapsed={props.collapsed}\n        />\n      </h3>\n    </div>  \n    <div className={\"card-body\" + (props.collapsed ? \" card-collapse\" : \"\")}>\n      <BalanceInput\n        {...props}\n      />\n    </div>\n  </div>\n);\n\nconst BalanceInput = props => (\n  <form>\n    <div className=\"form-group\">\n      <label>Address</label>\n      <i data-tip=\"\" className=\"fas fa-info-circle ml-2\"></i>\n      <div className=\"input-group\">\n        <input\n          onChange={(e) => props.onInputChange({...props.inputData, address: e.target.value})}\n          className=\"form-control text-monospace\"\n          id=\"address\"\n          value={props.inputData.address}\n        />\n        <div className=\"input-group-append\">\n          <button\n            onClick={(e) => props.onBalance(e)}\n            className=\"btn btn-primary\"\n          >\n            Check\n          </button>\n        </div>\n        <small id=\"raHelp\" className=\"form-text text-gray\"></small>\n      </div>\n    </div>\n    <div className=\"form-group\">\n      <h3>ETH: <span className=\"float-right\">{props.balance}</span></h3>\n    </div>\n  </form>\n);\n\nclass BalanceContainer extends Component {\n  constructor(props){\n    super(props);\n    this.state = {address: '0x0000000000000000000000000000000000000000', amount: 0};\n  }\n\n  render() {\n    return (\n      <Balance\n        {...this.props}\n        onInputChange={this.onInputChange.bind(this)}\n        onBalance={this.onBalance.bind(this)}\n        inputData={this.state}\n        symbols={['ETH','ZRX','DAI','REP']}\n      />\n    );\n  }\n\n  onBalance(e) {\n    e.preventDefault();\n    this.props.onBalance(this.state);\n  }\n\n  onInputChange(newState) {\n    if(/^0x[0-9a-f]{40}$/i.test(newState.address))\n      this.setState(newState);\n  }\n}\n\nexport default withCollapse(BalanceContainer);\n","import React, { Component } from 'react';\nimport { CollapseButton, DropdownAppend } from './Utils.js';\nimport withCollapse from './withCollapse.js';\n\nconst SendRaw = props => (\n  <div className=\"card text-white mb-3\">\n    <div className=\"card-header\">\n      <h3 className=\"text-monospace\">\n        Broadcast TX\n        <CollapseButton\n          onCollapse={props.onCollapse}\n          collapsed={props.collapsed}\n        />\n      </h3>\n    </div>  \n    <div className={\"card-body\" + (props.collapsed ? \" card-collapse\" : \"\")}>\n      <SendRawInput\n        {...props}\n      />\n    </div>\n  </div>\n);\n\nconst SendRawInput = props => (\n  <form>\n    <div className=\"form-group\">\n      <label>TX Data</label>\n      <i data-tip=\"These data can be copied to the clipboard from the TX Queue sub-app.\" className=\"fas fa-info-circle ml-2\"></i>\n      <div className=\"input-group\">\n        <input\n          onChange={(e) => props.onInputChange({callDataTX: JSON.parse(e.target.value)})}\n          className=\"form-control text-monospace\"\n          id=\"address\"\n          value={JSON.stringify(props.inputData.callDataTX)}\n        />\n        <div className=\"input-group-append\">\n          <button\n            onClick={(e) => props.onSendRaw(e)}\n            className=\"btn btn-primary\"\n          >\n           Broadcast TX \n          </button>\n        </div>\n        <small id=\"raHelp\" className=\"form-text text-gray\"></small>\n      </div>\n    </div>\n  </form>\n);\n\nclass SendRawContainer extends Component {\n  constructor(props){\n    super(props);\n    this.state = {callDataTX: {}};\n  }\n\n  render() {\n    return (\n      <SendRaw\n        {...this.props}\n        onInputChange={this.onInputChange.bind(this)}\n        onSendRaw={this.onSendRaw.bind(this)}\n        inputData={this.state}\n        symbols={['ETH','ZRX','DAI','REP']}\n      />\n    );\n  }\n\n  onSendRaw(e) {\n    e.preventDefault();\n    this.props.onSendRaw(this.state);\n  }\n\n  onInputChange(newState) {\n    this.setState(newState);\n  }\n}\n\nexport default withCollapse(SendRawContainer);\n","import React, { Component } from 'react';\nimport { Footer, PatternBg } from './Utils.js';\nimport Web3 from 'web3';\nimport ReactTooltip from 'react-tooltip';\nimport axios from 'axios';\n\nimport logo from './img/SVG/logo.svg';\nimport './App.css';\n\nimport TXQueueContainer from './TXQueueContainer.js';\nimport SchedulerContainer from './SchedulerContainer.js';\nimport TXCContainer from './TXCContainer.js';\nimport NoticesContainer from './NoticesContainer.js';\nimport DepositContainer from './DepositContainer.js';\nimport BalanceContainer from './BalanceContainer.js';\nimport SendRawContainer from './SendRawContainer.js';\n\n\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\nconst eths = \"0x06e476f2e0881e6234d00b7e50f3e55fca3a5902\";\n\nclass App extends Component {\n  constructor(props){\n    super();\n\n    this.state = {\n      addressList : [],\n      queue : [],\n      blockNumber : 0,\n      balance: 0,\n    }\n\n\n    this.updateBlock = this.updateBlock.bind(this);\n  }\n\n  async componentWillMount() {\n    await window.ethereum.enable();\n\n    web3.eth.getAccounts().then((a) => {\n      this.setState({...this.state, addressList: a});\n    });\n\n    setInterval(this.updateBlock, 5000);\n  }\n\n  fetchData() {\n    const req = {\n      url: 'https://api.txcast.io/signature',\n      method: 'GET',\n    };\n\n    axios(req).then(ans => {\n      const queue = ans.data.map(v => v[1]);\n      this.setState({ queue: queue });\n    });\n\n  }\n\n  async updateBlock() {\n    const latestBlock = await web3.eth.getBlock('latest');\n    if(latestBlock !== null && /[0-9]*/.test(latestBlock)) this.setState({...this.state, blockNumber: latestBlock.number});\n  }\n\n  async onSign(schedulerInput) {\n    let latestBlock = await web3.eth.getBlock('latest');\n    const dataArray = [\n      schedulerInput.address,\n      web3.utils.toWei(schedulerInput.amount.toString(),'ether'),\n      web3.utils.toWei(schedulerInput.reward.toString(),'ether'),\n      true,\n      parseInt(schedulerInput.blocks) + parseInt(latestBlock.number),\n      Math.floor(Math.random() * Number.MAX_SAFE_INTEGER),\n    ];\n\n    console.log(dataArray);\n\n    const callData = {\n      to: eths,\n      data:'0x88f38dbb' + web3.eth.abi.encodeParameters(\n        [\n          'address',\n          'uint256',\n          'uint256',\n          'bool',\n          'uint256',\n          'uint256',\n        ],\n        dataArray\n      ).substr(2)\n    }\n\n    web3.eth.call(callData).then(hash => {\n      console.log(hash);\n      console.log(web3.utils.hexToAscii(hash));\n\n      const signer = this.state.addressList[0];\n      web3.eth.personal.sign(hash, signer)\n        .then(signature => {\n          console.log([...dataArray, signature].toString())\n\n          const callDataTX = {\n            to: eths,\n            data:'0x800dfde0' + web3.eth.abi.encodeParameters(\n              [\n                'address',\n                'uint256',\n                'uint256',\n                'bool',\n                'uint256',\n                'uint256',\n                'bytes'\n              ],\n              [...dataArray, signature]\n            ).substr(2)\n          }\n\n          console.log(callDataTX)\n\n          const txrequest = {\n            currency: 'ETH',\n            amount: web3.utils.fromWei(dataArray[2].toString(), 'ether'),\n            blocks: dataArray[4],\n            address: signer, \n            dataArray: dataArray,\n            callDataTX: JSON.stringify(callDataTX),\n          }\n\n          this.setState({\n            queue: [...this.state.queue,txrequest ]\n          });\n          console.log(txrequest)\n\n          const formData = new FormData();\n          Object.keys(txrequest).forEach(k => {\n            formData.set(k,txrequest[k]);\n          });\n\n          const req = {\n            url: 'https://api.txcast.io/signature/' + signature,\n            data: formData,\n            method: 'PUT',\n          };\n\n          axios(req).then(console.log).catch(console.log)\n        });\n    });\n  }\n\n  onDeposit(depositInput) {\n    const amount = web3.utils.toWei(depositInput.amount.toString(),'ether');\n\n    const callDataTX = {\n      from: this.state.addressList[0],\n      value: amount, \n      to: eths,\n      data:'0xf340fa01' + web3.eth.abi.encodeParameters(\n        [\n          'address',\n        ],\n        [this.state.addressList[0]]\n      ).substr(2)\n    }\n\n    console.log(callDataTX)\n\n    this.sendTX(callDataTX);\n  }\n\n  onBalance(balanceInput) {\n    const callData = {\n      to: eths,\n      data:'0x70a08231' + web3.eth.abi.encodeParameters(\n        [\n          'address',\n        ],\n        [balanceInput.address]\n      ).substr(2)\n    }\n\n    console.log(callData)\n\n    web3.eth.call(callData).then((b,s) => {\n      const balance = web3.utils.fromWei(web3.utils.toBN(b).toString(), 'ether');\n      this.setState({balance: balance})\n    });\n  }\n\n  onSendRaw(rawInput) {\n    console.log(rawInput)\n\n    this.sendTX(rawInput.callDataTX);\n  }\n\n  sendTX(callDataTX) {\n    const callDataTXFrom = {...callDataTX, from: this.state.addressList[0]}\n\n    web3.eth.sendTransaction(callDataTXFrom).then((s,v) => {\n      console.log(\"https://kovan.etherscan.io/tx/\"+s.transactionHash); \n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <PatternBg />\n        <ReactTooltip />\n        <nav className=\"navbar navbar-light justify-content-between bg-white mb-3\">\n          <a className=\"navbar-brand text-monospace font-weight-bold\" href=\"#\" style={{\"letterSpacing\":\"7px\"}}>\n            <img src={logo} width=\"30\" height=\"30\" className=\"d-inline-block align-top mx-3\" alt=\"txcast logo\"/>\n            TXCast \n          </a>\n          <span className=\"navbar-text ml-auto\">\n            Current block: {this.state.blockNumber}\n          </span>\n        </nav>\n        <div className=\"container-fluid px-4 mt-4\" style={{'width':'100%'}}>\n          <div className=\"row\">\n            <div\n              className=\"col-sm-5\"\n              style={{'minWidth':'500px'}}\n            >\n              <TXQueueContainer\n                queue={this.state.queue}\n                blockNumber={this.state.blockNumber}\n                sendTX={this.sendTX.bind(this)}\n                fetchData={this.fetchData.bind(this)}\n              />\n              <SendRawContainer \n                onSendRaw={this.onSendRaw.bind(this)}\n              />\n            </div>\n            <div className=\"col-sm-7\">\n              <div className=\"row\">\n                <div\n                  className=\"col-lg-7 col-12\"\n                  style={{'minWidth':'380px'}}\n                >\n                  <SchedulerContainer\n                    onSign={this.onSign.bind(this)}\n                  />\n                  <DepositContainer\n                    address={this.state.addressList[0]}\n                    onDeposit={this.onDeposit.bind(this)}\n                  />\n                </div>\n                <div\n                  className=\"col-lg-5 col-12\"\n                  style={{'minWidth':'100px'}}\n                >\n                  <TXCContainer/>\n                  <BalanceContainer\n                    balance={this.state.balance}\n                    onBalance={this.onBalance.bind(this)}\n                  />\n                  <NoticesContainer/>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport $ from 'jquery'; \nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}