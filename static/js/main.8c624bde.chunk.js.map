{"version":3,"sources":["img/SVG/logo.svg","Utils.js","withCollapse.js","TXQueueContainer.js","SchedulerContainer.js","TXCContainer.js","NoticesContainer.js","DepositContainer.js","BalanceContainer.js","SendRawContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","DropdownAppend","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","toggle","filter","v","setState","objectSpread","prevState","_this2","react_default","a","createElement","className","onClick","toggleList","type","data-toggle","onChange","e","setFilter","target","value","placeholder","id","symbols","w","toUpperCase","search","map","key","href","Component","CollapseButton","onCollapse","collapsed","Footer","PatternBg","height","width","x","y","patternUnits","points","stroke","strokeWidth","fill","TXCStatus","classColor","active","text","icon","data-tip","class","withCollapse","WrappedComponent","_React$Component","CollapseCard","bind","assertThisInitialized","inherits","createClass","assign","React","TXQueue","Utils_CollapseButton","style","scope","posts","TXQueueContainer_TXReady","sendTX","requests","TXQueueContainer_TXPost","TXReady","address","JSON","parse","callDataTX","amount","currency","TXPost","lib","blocks","fetchData","queue","console","log","pre","blockNumber","ready","TXQueueContainer_TXQueue","Scheduler","SchedulerContainer_ScheduleInput","onInputChange","onSign","inputData","ScheduleInput","Utils_DropdownAppend","reward","SchedulerContainer","SchedulerContainer_Scheduler","preventDefault","newState","test","TXC","onBuy","TXCContainer_TXC","Notice","NoticesContainer_Notice","Deposit","DepositContainer_DepositInput","DepositInput","disabled","onDeposit","DepositContainer","selfDepositToggle","DepositContainer_Deposit","toggleSelfDeposit","Balance","BalanceContainer_BalanceInput","BalanceInput","onBalance","balance","BalanceContainer","BalanceContainer_Balance","SendRaw","SendRawContainer_SendRawInput","SendRawInput","stringify","onSendRaw","SendRawContainer","SendRawContainer_SendRaw","addresses","eths","txcsale","txc","abiTypes","withoutSignature","withSignature","App","addressList","netID","hasTXC","updateBlock","web3","Web3","givenProvider","window","ethereum","enable","eth","getAccounts","net","getId","callData","to","data","abi","encodeParameters","substr","then","b","s","parseInt","setInterval","_this3","axios","url","method","ans","getBlock","latestBlock","number","schedulerInput","dataArray","utils","toWei","toString","Math","floor","random","Number","MAX_SAFE_INTEGER","hash","_this4","hexToAscii","signer","personal","sign","signature","concat","txrequest","fromWei","toConsumableArray","formData","FormData","keys","forEach","k","set","req","catch","from","depositInput","balanceInput","_this5","toBN","rawInput","callDataTXFrom","sendTransaction","transactionHash","Utils_PatternBg","dist_default","letterSpacing","src","logo","alt","Utils_TXCStatus","minWidth","src_TXQueueContainer","src_SendRawContainer","src_SchedulerContainer","src_DepositContainer","src_TXCContainer","src_BalanceContainer","src_NoticesContainer","Utils_Footer","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.8c624bde.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.21f31404.svg\";","import React, { Component } from 'react';\n\nclass DropdownAppend extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {toggle: false, filter: \"\"};\n  }\n\n  setFilter(v) {\n    this.setState({...this.state, filter: v});\n  }\n\n  toggleList() {\n    this.setState(prevState => ({\n      toggle : !prevState.toggle\n    }))\n  }\n\n  render() {\n    return ( \n      <div className=\"input-group-append\">\n        <button\n          className={\"btn btn-primary dropdown-toggle\" }\n          onClick={() => this.toggleList()}\n          type=\"button\"\n          data-toggle=\"dropdown\"\n        >\n          ETH\n        </button>\n        <div className={\"dropdown-menu dropdown-menu-right \" + (this.state.toggle ? \"show\" : \"\")}>\n          <input\n            className=\"filter-input pl-2 m-1\"\n            onChange={(e) => this.setFilter(e.target.value)}\n            type=\"text\"\n            placeholder=\"Filter\"\n            id=\"ticker\"\n          />\n          {this.props.symbols\n              .filter(w =>\n                w.toUpperCase().search(this.state.filter.toUpperCase()) > -1\n              )\n              .map(v => (\n                <a key={v} className=\"dropdown-item\" href=\"#\">{v}</a>\n              ))}\n            </div>\n          </div>\n    )\n  }\n}\n\nconst CollapseButton = (props) => (\n  <a onClick={() => props.onCollapse()}>\n    <i className={\"float-right fas fa-\" + (props.collapsed ? \"plus\" : \"minus\") + \"-square\"}></i>\n  </a>\n);\n\nconst Footer = () => (\n  <footer>\n    <div className=\"container\">\n      <div className=\"text-center\"><i className=\"fas fa-ellipsis-h\"></i></div>\n      <div className=\"row text-center\">\n        <div className=\"col-md-12\">\n          <ul className=\"list-inline social-buttons\">\n            <li className=\"list-inline-item\">\n              <a href=\"#\">\n                <i className=\"fab fa-twitter\"></i>\n              </a>\n            </li>\n            <li className=\"list-inline-item\">\n              <a href=\"#\">\n                <i className=\"fab fa-reddit\"></i>\n              </a>\n            </li>\n            <li className=\"list-inline-item\">\n              <a href=\"#\">\n                <i className=\"fab fa-discord\"></i>\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div className=\"col-md-12 py-5\">\n          <span className=\"text-white text-monospace\">TXCast 2018</span>\n        </div>\n      </div>\n    </div>\n  </footer>\n);\n\nconst PatternBg = () => (\n  <svg height=\"100%\" width=\"100%\">\n    <defs>\n      <pattern id=\"basicPattern\" x=\"0\" y=\"0\" width=\"60\" height=\"30\" patternUnits=\"userSpaceOnUse\">\n        <polygon points=\"0,0 30,15 30,-15\"/>\n        <polygon points=\"0,0 30,15 0,30\"/>\n        <polygon points=\"0,30 30,15 30,45\"/>\n\n        <polygon points=\"60,0 30,15 30,-15\"/>\n        <polygon points=\"60,0 30,15 60,30\"/>\n        <polygon points=\"60,30 30,15 30,45\"/>\n      </pattern>\n    </defs>\n\n    <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\"\n      stroke= \"#333333\" strokeWidth=\"1\" fill=\"url(#basicPattern)\" />\n  </svg>\n);\n\nconst TXCStatus = (props) => {\n  const classColor = props.active ? \"text-success\" : \"text-danger\";\n  const text = props.active ? \" Active\" : \" Inactive\";\n  const icon = props.active ? \"check\" : \"times\";\n  return (\n    <span className=\"navbar-text ml-auto\">\n      TXC Sub:\n      <span className={classColor}>\n        {text}\n      </span>\n      <i data-tip=\"Active subs are addresses that hold at least 1 TXC and do not pay the 30% fee.\" class={\"ml-1 fas fa-\" + icon + \"-circle \" + classColor}></i>\n    </span>\n  );\n};\n\nexport { Footer, PatternBg, CollapseButton, DropdownAppend, TXCStatus };\n","import React, { Component } from 'react';\n\nconst withCollapse = (WrappedComponent) => {\n  return class CollapseCard extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {collapsed: false}\n\n      this.onCollapse = this.onCollapse.bind(this);\n    }\n\n    onCollapse() {\n      this.setState({...this.state, collapsed: !this.state.collapsed});\n    }\n\n    render() {\n      return (\n        <div>\n          <WrappedComponent\n            {...this.props}\n            collapsed={this.state.collapsed}\n            onCollapse={this.onCollapse}\n          />\n        </div>\n      );\n    }\n  }\n}\n\nexport default withCollapse;\n","import React, { Component } from 'react';\nimport { CollapseButton } from './Utils.js';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport withCollapse from './withCollapse.js';\n\nconst TXQueue = props => (\n  <div className=\"card text-white mb-3\">\n    <div className=\"card-header\">\n      <h2 className=\"text-monospace font-weight-bold\">\n        TX Queue\n        <CollapseButton\n          onCollapse={props.onCollapse}\n          collapsed={props.collapsed}\n        />\n      </h2> \n    </div>  \n    <div className={\"card-body\" + (props.collapsed ? \" card-collapse\" : \"\")}>\n      <div className=\"table-container\">\n        <table className=\"table table-hover\">\n          <thead className=\"bg-white\">\n            <tr className=\"text-black d-flex\" style={{'height':'30px'}}>\n              <th scope=\"col\" className=\"col-5\">Requester</th>\n              <th scope=\"col\" className=\"col-3 text-center\">Block Schedule</th>\n              <th scope=\"col\" className=\"col-4 text-center\">Reward</th>\n            </tr>\n          </thead>\n          <tbody className=\"text-black text-monospace\">\n            { props.posts.map(p => <TXReady {...p} sendTX={props.sendTX}/>) }\n            { props.requests.map(p => <TXPost {...p}/>) }\n          </tbody>\n        </table>  \n      </div>\n    </div>\n  </div>\n);\n\nconst TXReady = props => (\n  <tr className=\"table-light text-black d-flex hoverHide\">\n    <td className=\"col-5 pl-3\">\n      <span className=\"sendSpan\">{props.address}</span>\n      <button\n        className=\"btn btn-sm btn-success btn-block sendButton\"\n        onClick={() => props.sendTX(JSON.parse(props.callDataTX))}\n      >\n        Send this TX <i class=\"fas fa-paper-plane\"></i>\n      </button>\n    </td>\n    <td className=\"col-3 text-center\">Ready</td>\n    <td className=\"col-4 text-center\">{props.amount} {props.currency}</td>\n  </tr>\n);\n\nconst TXPost = props => (\n  <tr className=\"table-secondary text-black d-flex hoverHide\">\n    <td className=\"col-5 pl-3\">\n      <span className=\"sendSpan\">{props.address}</span>\n      <CopyToClipboard text={(props.callDataTX)}>\n        <button\n          className=\"btn btn-sm btn-danger btn-block sendButton\"\n          onClick={(e) => (0)}\n        >\n          Copy Signature <i class=\"fas fa-clipboard\"></i>\n        </button>\n      </CopyToClipboard>\n\n    </td>\n    <td className=\"col-3 text-center\">{props.blocks}</td>\n    <td className=\"col-4 text-center\">{props.amount} {props.currency}</td>\n  </tr>\n);\n\n\nclass TXQueueContainer extends Component {\n  componentDidMount() {\n    this.props.fetchData();\n  }\n\n  render() {\n    const posts = this.props.queue;\n    console.log(posts)\n    const pre   = posts.filter(p => p.blocks < this.props.blockNumber);\n    const ready = posts.filter(p => p.blocks >= this.props.blockNumber);\n\n    return (\n      <TXQueue\n        {...this.props}\n        posts={pre}\n        requests={ready}\n        sendTX={this.props.sendTX}\n      />  \n    );\n  }\n}\n\nexport default withCollapse(TXQueueContainer);\n","import React, { Component } from 'react';\nimport { CollapseButton, DropdownAppend } from './Utils.js';\nimport withCollapse from './withCollapse.js';\n\nconst Scheduler = props => (\n  <div className=\"card text-white mb-3\">\n    <div className=\"card-header\">\n      <h3 className=\"text-monospace\">\n        Post Scheduled TX\n        <CollapseButton\n          onCollapse={props.onCollapse}\n          collapsed={props.collapsed}\n        />\n      </h3> \n    </div>  \n    <div className={\"card-body\" + (props.collapsed ? \" card-collapse\" : \"\")}>\n      <ScheduleInput\n        onInputChange={props.onInputChange}\n        onSign={props.onSign}\n        inputData={props.inputData}\n        symbols={props.symbols}\n      />\n    </div>\n  </div>\n);\n\nconst ScheduleInput = props => (\n  <form>\n    <div className=\"form-group\">\n      <label>Receiver Address</label>\n        <input\n          onChange={(e) => props.onInputChange({...props.inputData, address: e.target.value})}\n          className=\"form-control text-monospace\"\n          id=\"recieverAddress\"\n          value={props.inputData.address}\n       />\n      <small id=\"raHelp\" className=\"form-text text-gray\">Address of the end-recipient of your transaction.</small>\n    </div>\n    <div className=\"form-group\">\n      <label>Amount</label>\n      <div className=\"input-group\">\n        <input\n          onChange={(e) => props.onInputChange({...props.inputData, amount: e.target.value})}\n          className=\"form-control text-monospace\"\n          id=\"amount\"\n          value={props.inputData.amount}\n       />\n        <DropdownAppend symbols={props.symbols}/>\n      </div>\n      <small id=\"aHelp\" className=\"form-text text-gray\">Amount to send to the receiver address.</small>\n    </div>\n    <div className=\"form-group\">\n      <label>Reward</label>\n      <i data-tip=\"The reward implicitly includes the network transaction fee.\" className=\"fas fa-info-circle ml-2\"></i>\n      <div className=\"input-group\">\n        <input\n          onChange={(e) => props.onInputChange({...props.inputData, reward: e.target.value})}\n          className=\"form-control text-monospace\"\n          id=\"reward\"\n          value={props.inputData.reward}\n       />\n        <DropdownAppend symbols={props.symbols}/>\n      </div>\n      <small id=\"rwHelp\" className=\"form-text text-gray\">Amount awarded to the address that fulfills your request.</small>\n    </div>\n    <div className=\"form-group\">\n      <label>Blocks</label>\n      <i data-tip=\"Blocks till your TX is available for mining. One block is mined every ~15 seconds.\" className=\"fas fa-info-circle ml-2\"></i>\n      <div className=\"input-group\">\n        <input\n          onChange={(e) => props.onInputChange({...props.inputData, blocks: e.target.value})}\n          className=\"form-control text-monospace\"\n          id=\"blocks\"\n          value={props.inputData.blocks}\n       />\n        <div className=\"input-group-append\">\n          <button className=\"btn btn-primary\">Blocks</button>\n        </div>\n      </div>\n      <small id=\"bHelp\" className=\"form-text text-gray\">Blocks to wait before the transaction is broadcasted.</small>\n    </div>\n\n    <button\n      onClick={(e) => props.onSign(e)}\n      className=\"btn btn-block btn-lg btn-success\"\n    >\n      Sign and Schedule\n    </button>\n  </form>\n);\n\nclass SchedulerContainer extends Component {\n  constructor(props){\n    super(props);\n    this.state = {address: '0x0000000000000000000000000000000000000000', amount: 0, reward: 0, blocks: 0};\n  }\n\n  render() {\n    return (\n      <Scheduler\n        {...this.props}\n        onInputChange={this.onInputChange.bind(this)}\n        onSign={this.onSign.bind(this)}\n        inputData={this.state}\n        symbols={['ETH','ZRX','DAI','REP']}\n      />\n    );\n  }\n\n  onSign(e) {\n    e.preventDefault();\n    this.props.onSign(this.state);\n  }\n\n  onInputChange(newState) {\n    if((/(^[0-9][0-9]{0,5}$)|(^$)/.test(newState.blocks))\n      && (/(^[0-9]+\\.?[0-9]{0,18}$)|(^$)/.test(newState.reward))\n      && (/(^[0-9]+\\.?[0-9]{0,18}$)|(^$)/.test(newState.amount))\n      && (/^0x[0-9a-f]{40}$/i.test(newState.address)))\n        this.setState(newState);\n  }\n}\n\nexport default withCollapse(SchedulerContainer);\n","import React, { Component } from 'react';\nimport { CollapseButton } from './Utils.js';\nimport withCollapse from './withCollapse.js';\n\nconst TXC = props => (\n  <div className=\"card text-white mb-3\">\n    <div className=\"card-header\">\n      <h3 className=\"text-monospace\">\n        Buy TXC\n        <CollapseButton\n          onCollapse={props.onCollapse}\n          collapsed={props.collapsed}\n        />\n      </h3> \n    </div>  \n    <div className={\"card-body\" + (props.collapsed ? \" card-collapse\" : \"\")}>\n      <p className=\"lead\">TXC is the subscription badge of TXCast. Every posted transaction charges a 30% fee of the reward. Addresses with at least 1 TXC do not pay this fee. Subscriptions can be transferred to other addresses and never expire.</p>\n      <p>There will only be a total of 5000 TXC subscriptions, and their price is fixed at 1 TXC = 1 ETH for the duration of the sale. TXC isn't subdivisible, so the minimum amount for sale is 1 TXC. However, an address can buy as many whole units of TXC as it wishes. After the 5000 subscriptions are sold, new users will have buy the subscriptions from previous owners.</p>\n      <div className=\"form-group\">\n        <button\n          type=\"button\"\n          onClick={() => props.onBuy()}\n          className=\"btn btn-success btn-lg btn-block\"\n        >\n          Buy TXC\n        </button>\n      </div>\n    </div>\n  </div>\n);\n\nclass TXCContainer extends Component {\n  render() {\n    return(\n      <TXC\n        {...this.props}\n      />\n    );  \n  }\n}\n\nexport default withCollapse(TXCContainer);\n","import React, { Component } from 'react';\nimport { CollapseButton } from './Utils.js';\nimport withCollapse from './withCollapse.js';\n\nconst Notice = props => (\n  <div className=\"card text-white mb-3\">\n    <div className=\"card-header\">\n      <h3 className=\"text-monospace\">\n        Notices\n        <CollapseButton\n          onCollapse={props.onCollapse}\n          collapsed={props.collapsed}\n        />\n      </h3> \n    </div>  \n    <div className={\"card-body\" + (props.collapsed ? \" card-collapse\" : \"\")}>\n      <p>TXCast is in beta release. Proceed with caution and make sure to read what each sub-app does.</p>\n    </div>\n  </div>\n);\n\nclass NoticesContainer extends Component {\n  render() {\n    return (\n      <Notice {...this.props}/>\n    )\n  }\n}\n\nexport default withCollapse(NoticesContainer);\n","import React, { Component } from 'react';\nimport Toggle from 'react-toggle';\nimport { CollapseButton, DropdownAppend } from './Utils.js';\nimport withCollapse from './withCollapse.js';\n\nconst Deposit = props => (\n  <div className=\"card text-white mb-3\">\n    <div className=\"card-header\">\n      <h3 className=\"text-monospace\">\n        Ether and Token Deposits\n        <CollapseButton\n          onCollapse={props.onCollapse}\n          collapsed={props.collapsed}\n        />\n      </h3> \n    </div>  \n    <div className={\"card-body\" + (props.collapsed ? \" card-collapse\" : \"\")}>\n      <DepositInput\n        {...props}\n      />\n    </div>\n  </div>\n);\n\nconst DepositInput = props => (\n  <form>\n    <div className=\"form-group\">\n      <label>Beneficiary's Address</label>\n      <i data-tip=\"Until release, the beneficiary is the unlocked wallet.\" className=\"fas fa-info-circle ml-2\"></i>\n\n      <div className=\"input-group\">\n        <input\n          disabled\n          className=\"form-control text-monospace bg-primary\"\n          id=\"beneficiaryAddress\"\n          value={props.address}\n        />\n      </div>\n      <small id=\"raHelp\" className=\"form-text text-gray\">Address of the beneficiary of your deposit.</small>\n    </div>\n    <div className=\"form-group\">\n      <label>Amount</label>\n      <div className=\"input-group\">\n        <input\n          onChange={(e) => props.onInputChange({...props.inputData, amount: e.target.value})}\n          className=\"form-control text-monospace\"\n          id=\"depositAmount\"\n          value={props.inputData.amount}\n        />\n        <DropdownAppend symbols={props.symbols}/>\n      </div>\n      <small id=\"aHelp\" className=\"form-text text-gray\">Amount to deposit to the beneficiary.</small>\n    </div>\n\n    <button\n      onClick={(e) => props.onDeposit(e)}\n      className=\"btn btn-block btn-lg btn-success\"\n    >\n      Deposit \n    </button>\n  </form>\n);\n\nconst selfdeposit = (props) => (\n  <label className=\"switch\">\n    <input\n      type=\"checkbox\"\n      checked={props.selfDepositToggle}\n      value={props.selfDepositToggle}\n      onChange={() => props.toggleSelfDeposit()}\n    />\n    <div className=\"slider ml-2\"></div>\n  </label>  \n);\n\nclass DepositContainer extends Component {\n  constructor(props){\n    super(props);\n    this.state = {amount: 0, selfDepositToggle: true};\n  }\n\n  render() {\n    return (\n      <Deposit\n        {...this.props}\n        onInputChange={this.onInputChange.bind(this)}\n        onDeposit={this.onDeposit.bind(this)}\n        toggleSelfDeposit={this.toggleSelfDeposit.bind(this)}\n        inputData={this.state}\n        symbols={['ETH','ZRX','DAI','REP']}\n      />\n    );\n  }\n\n  onDeposit(e) {\n    e.preventDefault();\n    this.props.onDeposit(this.state);\n  }\n\n  toggleSelfDeposit() {\n    this.setState({...this.state, selfDepositToggle: !this.state.selfDepositToggle}); \n  }\n\n  onInputChange(newState) {\n    if(/(^[0-9]+\\.?[0-9]{0,18}$)|(^$)/.test(newState.amount))\n      this.setState(newState);\n  }\n}\n\nexport default withCollapse(DepositContainer);\n","import React, { Component } from 'react';\nimport { CollapseButton, DropdownAppend } from './Utils.js';\nimport withCollapse from './withCollapse.js';\n\nconst Balance = props => (\n  <div className=\"card text-white mb-3\">\n    <div className=\"card-header\">\n      <h3 className=\"text-monospace\">\n        Balances\n        <CollapseButton\n          onCollapse={props.onCollapse}\n          collapsed={props.collapsed}\n        />\n      </h3>\n    </div>  \n    <div className={\"card-body\" + (props.collapsed ? \" card-collapse\" : \"\")}>\n      <BalanceInput\n        {...props}\n      />\n    </div>\n  </div>\n);\n\nconst BalanceInput = props => (\n  <form>\n    <div className=\"form-group\">\n      <label>Address</label>\n      <div className=\"input-group\">\n        <input\n          onChange={(e) => props.onInputChange({...props.inputData, address: e.target.value})}\n          className=\"form-control text-monospace\"\n          id=\"address\"\n          value={props.inputData.address}\n        />\n        <div className=\"input-group-append\">\n          <button\n            onClick={(e) => props.onBalance(e)}\n            className=\"btn btn-primary\"\n          >\n            Check\n          </button>\n        </div>\n        <small id=\"raHelp\" className=\"form-text text-gray\"></small>\n      </div>\n    </div>\n    <div className=\"form-group\">\n      <h3>ETH: <span className=\"float-right\">{props.balance}</span></h3>\n    </div>\n  </form>\n);\n\nclass BalanceContainer extends Component {\n  constructor(props){\n    super(props);\n    this.state = {address: '0x0000000000000000000000000000000000000000', amount: 0};\n  }\n\n  render() {\n    return (\n      <Balance\n        {...this.props}\n        onInputChange={this.onInputChange.bind(this)}\n        onBalance={this.onBalance.bind(this)}\n        inputData={this.state}\n        symbols={['ETH','ZRX','DAI','REP']}\n      />\n    );\n  }\n\n  onBalance(e) {\n    e.preventDefault();\n    this.props.onBalance(this.state);\n  }\n\n  onInputChange(newState) {\n    if(/^0x[0-9a-f]{40}$/i.test(newState.address))\n      this.setState(newState);\n  }\n}\n\nexport default withCollapse(BalanceContainer);\n","import React, { Component } from 'react';\nimport { CollapseButton, DropdownAppend } from './Utils.js';\nimport withCollapse from './withCollapse.js';\n\nconst SendRaw = props => (\n  <div className=\"card text-white mb-3\">\n    <div className=\"card-header\">\n      <h3 className=\"text-monospace\">\n        Broadcast TX\n        <CollapseButton\n          onCollapse={props.onCollapse}\n          collapsed={props.collapsed}\n        />\n      </h3>\n    </div>  \n    <div className={\"card-body\" + (props.collapsed ? \" card-collapse\" : \"\")}>\n      <SendRawInput\n        {...props}\n      />\n    </div>\n  </div>\n);\n\nconst SendRawInput = props => (\n  <form>\n    <div className=\"form-group\">\n      <label>TX Data</label>\n      <i data-tip=\"These data can be copied to the clipboard from the TX Queue sub-app.\" className=\"fas fa-info-circle ml-2\"></i>\n      <div className=\"input-group\">\n        <input\n          onChange={(e) => props.onInputChange({callDataTX: JSON.parse(e.target.value)})}\n          className=\"form-control text-monospace\"\n          id=\"address\"\n          value={JSON.stringify(props.inputData.callDataTX)}\n        />\n        <div className=\"input-group-append\">\n          <button\n            onClick={(e) => props.onSendRaw(e)}\n            className=\"btn btn-primary\"\n          >\n           Broadcast TX \n          </button>\n        </div>\n        <small id=\"raHelp\" className=\"form-text text-gray\"></small>\n      </div>\n    </div>\n  </form>\n);\n\nclass SendRawContainer extends Component {\n  constructor(props){\n    super(props);\n    this.state = {callDataTX: {}};\n  }\n\n  render() {\n    return (\n      <SendRaw\n        {...this.props}\n        onInputChange={this.onInputChange.bind(this)}\n        onSendRaw={this.onSendRaw.bind(this)}\n        inputData={this.state}\n        symbols={['ETH','ZRX','DAI','REP']}\n      />\n    );\n  }\n\n  onSendRaw(e) {\n    e.preventDefault();\n    this.props.onSendRaw(this.state);\n  }\n\n  onInputChange(newState) {\n    this.setState(newState);\n  }\n}\n\nexport default withCollapse(SendRawContainer);\n","import React, { Component } from 'react';\nimport { Footer, PatternBg, TXCStatus } from './Utils.js';\nimport Web3 from 'web3';\nimport ReactTooltip from 'react-tooltip';\nimport axios from 'axios';\n\nimport logo from './img/SVG/logo.svg';\nimport './App.css';\n\nimport TXQueueContainer from './TXQueueContainer.js';\nimport SchedulerContainer from './SchedulerContainer.js';\nimport TXCContainer from './TXCContainer.js';\nimport NoticesContainer from './NoticesContainer.js';\nimport DepositContainer from './DepositContainer.js';\nimport BalanceContainer from './BalanceContainer.js';\nimport SendRawContainer from './SendRawContainer.js';\n\n\nconst addresses = {\n kovan: {\n    eths: \"0xa0475d202be30019e56306cc08f8998887135258\",\n    eths_old: \"0xe49bb13f1e57de8364586bbb82bf79d0c8aac074\",\n    txcsale: \"0x2ffbee1b7eda9d6187f4f875899c9f8f28d927ed\",\n    txc: \"0x12C942fDbE9981E68DC153CC92dA2e2c301F5a9A\",\n  },\n  mainnet: {\n    eths: \"0xf99E87098f4F1C8d8bd6a3df7181B3acdc21848A\",\n    txcsale: \"0xa4b01a89162141c58505ea43db2d3bda71a325c2\",\n    txc: \"0x67e35c41060a988f59e2bcb2e0f09b6978fb6614\",\n  }\n};\n\nconst abiTypes = {\n  eths: {\n    withoutSignature: [\n      'address', // target\n      'uint256', // amount\n      'uint256', // reward\n      'bool',    // byBlock\n      'uint256', // condition\n      'uint256', // nonce\n      'uint256', // netID\n    ],\n    withSignature: [\n      'address', // target\n      'uint256', // amount\n      'uint256', // reward\n      'bool',    // byBlock\n      'uint256', // condition\n      'uint256', // nonce\n      'uint256', // netID\n      'bytes',   // signature \n    ],\n  }\n};\n\nclass App extends Component {\n  constructor(props){\n    super();\n\n    this.state = {\n      addressList : [],\n      queue : [],\n      blockNumber : 0,\n      balance: 0,\n      netID: 0,\n      hasTXC: false,\n    }\n\n    this.updateBlock = this.updateBlock.bind(this);\n    this.web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n  }\n\n  async componentWillMount() {\n    await window.ethereum.enable();\n\n    const a = await this.web3.eth.getAccounts();\n    const id = await this.web3.eth.net.getId();\n\n    this.setState({addressList: a, netID: id});\n\n    const address = this.state.addressList[0];\n    const callData = {\n      to: addresses.mainnet.txc,\n      data:'0x70a08231' + this.web3.eth.abi.encodeParameters(\n        [\n          'address',\n        ],\n        [address]\n      ).substr(2)\n    }\n\n    console.log(callData)\n\n    this.web3.eth.call(callData).then((b,s) => {\n      this.setState({hasTXC: parseInt(b) > 0});\n    });\n\n\n    setInterval(this.updateBlock, 5000);\n  }\n\n  fetchData() {\n    const req = {\n      url: 'https://api.txcast.io/signature',\n      method: 'GET',\n    };\n\n    axios(req).then(ans => {\n      const queue = ans.data.map(v => v[1]);\n      this.setState({queue: queue});\n    });\n\n  }\n\n  async updateBlock() {\n    const latestBlock = await this.web3.eth.getBlock('latest');\n    if(latestBlock !== null && /[0-9]*/.test(latestBlock)) this.setState({blockNumber: latestBlock.number});\n  }\n\n  async onSign(schedulerInput) {\n    let latestBlock = await this.web3.eth.getBlock('latest');\n    const dataArray = [\n      schedulerInput.address,\n      this.web3.utils.toWei(schedulerInput.amount.toString(),'ether'),\n      this.web3.utils.toWei(schedulerInput.reward.toString(),'ether'),\n      true,\n      parseInt(schedulerInput.blocks) + parseInt(latestBlock.number),\n      Math.floor(Math.random() * Number.MAX_SAFE_INTEGER),\n      this.state.netID,\n    ];\n\n    console.log(dataArray);\n\n    const callData = {\n      to: addresses.mainnet.eths,\n      data:'0x889c3912' + this.web3.eth.abi.encodeParameters(abiTypes.eths.withoutSignature, dataArray).substr(2),\n    }\n\n    this.web3.eth.call(callData).then(hash => {\n      console.log(hash);\n      console.log(this.web3.utils.hexToAscii(hash));\n\n      const signer = this.state.addressList[0];\n      this.web3.eth.personal.sign(hash, signer)\n        .then(signature => {\n          console.log([...dataArray, signature].toString())\n\n          const callDataTX = {\n            to: addresses.mainnet.eths,\n            data:'0x392482d1' + this.web3.eth.abi.encodeParameters(abiTypes.eths.withSignature, [...dataArray, signature]).substr(2),\n          }\n\n          const txrequest = {\n            currency: 'ETH',\n            amount: this.web3.utils.fromWei(dataArray[2].toString(), 'ether'),\n            blocks: dataArray[4],\n            address: signer, \n            dataArray: dataArray,\n            callDataTX: JSON.stringify(callDataTX),\n          }\n\n          this.setState({\n            queue: [...this.state.queue, txrequest]\n          });\n\n          console.log(txrequest)\n\n          const formData = new FormData();\n          Object.keys(txrequest).forEach(k => {\n            formData.set(k,txrequest[k]);\n          });\n\n          const req = {\n            url: 'https://api.txcast.io/signature/' + signature,\n            data: formData,\n            method: 'PUT',\n          };\n\n          axios(req).then(console.log).catch(console.log)\n        });\n    });\n  }\n\n  onBuy() {\n    const address = this.state.addressList[0];\n    const amount = this.web3.utils.toWei(\"1\",'ether');\n\n    const callDataTX = {\n      from: address,\n      value: amount, \n      to: addresses.mainnet.txcsale,\n      data:'0xec8ac4d80' + this.web3.eth.abi.encodeParameters(\n        [\n          'address',\n        ],\n        [address],\n      ).substr(2)\n    }\n\n    this.sendTX(callDataTX);\n  }\n\n  onDeposit(depositInput) {\n    const address = this.state.addressList[0];\n    const amount = this.web3.utils.toWei(depositInput.amount.toString(),'ether');\n\n    const callDataTX = {\n      from: address,\n      value: amount, \n      to: addresses.mainnet.eths,\n      data:'0xf340fa01' + this.web3.eth.abi.encodeParameters(\n        [\n          'address',\n        ],\n        [address],\n      ).substr(2)\n    }\n\n    this.sendTX(callDataTX);\n  }\n\n  onBalance(balanceInput) {\n    const callData = {\n      to: addresses.mainnet.eths,\n      data:'0x70a08231' + this.web3.eth.abi.encodeParameters(\n        [\n          'address',\n        ],\n        [balanceInput.address]\n      ).substr(2)\n    }\n\n    console.log(callData)\n\n    this.web3.eth.call(callData).then((b,s) => {\n      const balance = this.web3.utils.fromWei(this.web3.utils.toBN(b).toString(), 'ether');\n      this.setState({balance: balance})\n    });\n  }\n\n  onSendRaw(rawInput) {\n    console.log(rawInput)\n\n    this.sendTX(rawInput.callDataTX);\n  }\n\n  sendTX(callDataTX) {\n    const address = this.state.addressList[0];\n    const callDataTXFrom = {...callDataTX, from: address}\n\n    console.log(callDataTXFrom)\n\n    this.web3.eth.sendTransaction(callDataTXFrom).then((s,v) => {\n      console.log(\"https:/www.etherscan.io/tx/\" + s.transactionHash); \n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <PatternBg />\n        <ReactTooltip />\n        <nav className=\"navbar navbar-light justify-content-between bg-white mb-3\">\n          <a className=\"navbar-brand text-monospace font-weight-bold\" href=\"#\" style={{\"letterSpacing\":\"7px\"}}>\n            <img src={logo} width=\"30\" height=\"30\" className=\"d-inline-block align-top mx-3\" alt=\"txcast logo\"/>\n            TXCast \n          </a>\n          <TXCStatus active={this.state.hasTXC ? true : false} />\n          <span className=\"navbar-text ml-3\">\n            Current block: {this.state.blockNumber}\n          </span>\n        </nav>\n        <div className=\"container-fluid px-4 mt-4\" style={{'width':'100%'}}>\n          <div className=\"row\">\n            <div\n              className=\"col-sm-5\"\n              style={{'minWidth':'500px'}}\n            >\n              <TXQueueContainer\n                queue={this.state.queue}\n                blockNumber={this.state.blockNumber}\n                sendTX={this.sendTX.bind(this)}\n                fetchData={this.fetchData.bind(this)}\n              />\n              <SendRawContainer \n                onSendRaw={this.onSendRaw.bind(this)}\n              />\n            </div>\n            <div className=\"col-sm-7\">\n              <div className=\"row\">\n                <div\n                  className=\"col-lg-7 col-12\"\n                  style={{'minWidth':'380px'}}\n                >\n                  <SchedulerContainer\n                    onSign={this.onSign.bind(this)}\n                  />\n                  <DepositContainer\n                    address={this.state.addressList[0]}\n                    onDeposit={this.onDeposit.bind(this)}\n                  />\n                </div>\n                <div\n                  className=\"col-lg-5 col-12\"\n                  style={{'minWidth':'100px'}}\n                >\n                  <TXCContainer\n                    onBuy={this.onBuy.bind(this)}\n                  />\n                  <BalanceContainer\n                    address={this.state.addressList[0]}\n                    balance={this.state.balance}\n                    onBalance={this.onBalance.bind(this)}\n                  />\n                  <NoticesContainer/>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport $ from 'jquery'; \nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}